[{"id": "D_0001", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM singer;", "ru": "SELECT count(*) FROM singer;"}, "question": {"en": "How many singers do we have?", "ru": "Сколько у нас певцов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "singers", "do", "we", "have", "?"], "ru": ["Сколько", "у", "нас", "певцов", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "singer", ";"], "ru": ["select", "count", "(", "*", ")", "from", "singer", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "singer", ";"], "ru": ["select", "count", "(", "*", ")", "from", "singer", ";"]}}, {"id": "D_0002", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM singer;", "ru": "SELECT count(*) FROM singer;"}, "question": {"en": "What is the total number of singers?", "ru": "Сколько всего певцов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "total", "number", "of", "singers", "?"], "ru": ["Сколько", "всего", "певцов", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "singer", ";"], "ru": ["select", "count", "(", "*", ")", "from", "singer", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "singer", ";"], "ru": ["select", "count", "(", "*", ")", "from", "singer", ";"]}}, {"id": "D_0003", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC;", "ru": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC;"}, "question": {"en": "Show name, country, age for all singers ordered by age from the oldest to the youngest.", "ru": "Показать имя, страну, возраст для всех певцов, отсортированных по возрасту от самого старшего до самого младшего."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "name", ",", "country", ",", "age", "for", "all", "singers", "ordered", "by", "age", "from", "the", "oldest", "to", "the", "youngest", "."], "ru": ["Показать", "имя", ",", "страну", ",", "возраст", "для", "всех", "певцов", ",", "отсортированных", "по", "возрасту", "от", "самого", "старшего", "до", "самого", "младшего", "."]}, "query_toks": {"en": ["select", "name", ",", "country", ",", "age", "from", "singer", "order", "by", "age", "desc", ";"], "ru": ["select", "name", ",", "country", ",", "age", "from", "singer", "order", "by", "age", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "country", ",", "age", "from", "singer", "order", "by", "age", "desc", ";"], "ru": ["select", "name", ",", "country", ",", "age", "from", "singer", "order", "by", "age", "desc", ";"]}}, {"id": "D_0004", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC;", "ru": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC;"}, "question": {"en": "What are the names, countries, and ages for every singer in descending order of age?", "ru": "Какие имена, страны и возраст у каждого певца в порядке убывания возраста?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", ",", "countries", ",", "and", "ages", "for", "every", "singer", "in", "descending", "order", "of", "age", "?"], "ru": ["Какие", "имена", ",", "страны", "и", "возраст", "у", "каждого", "певца", "в", "порядке", "убывания", "возраста", "?"]}, "query_toks": {"en": ["select", "name", ",", "country", ",", "age", "from", "singer", "order", "by", "age", "desc", ";"], "ru": ["select", "name", ",", "country", ",", "age", "from", "singer", "order", "by", "age", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "country", ",", "age", "from", "singer", "order", "by", "age", "desc", ";"], "ru": ["select", "name", ",", "country", ",", "age", "from", "singer", "order", "by", "age", "desc", ";"]}}, {"id": "D_0005", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France';", "ru": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'Россия';"}, "question": {"en": "What is the average, minimum, and maximum age of all singers from France?", "ru": "Каков средний, минимальный и максимальный возраст всех певцов из России?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"France\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Россия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", ",", "minimum", ",", "and", "maximum", "age", "of", "all", "singers", "from", "France", "?"], "ru": ["Каков", "средний", ",", "минимальный", "и", "максимальный", "возраст", "всех", "певцов", "из", "России", "?"]}, "query_toks": {"en": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "singer", "where", "country", "=", "\"France\"", ";"], "ru": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "singer", "where", "country", "=", "\"Россия\"", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "singer", "where", "country", "=", "value", ";"], "ru": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "singer", "where", "country", "=", "value", ";"]}}, {"id": "D_0006", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France';", "ru": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'Россия';"}, "question": {"en": "What is the average, minimum, and maximum age for all French singers?", "ru": "Какой средний, минимальный и максимальный возраст для всех российских певцов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"France\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Россия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", ",", "minimum", ",", "and", "maximum", "age", "for", "all", "French", "singers", "?"], "ru": ["Какой", "средний", ",", "минимальный", "и", "максимальный", "возраст", "для", "всех", "российских", "певцов", "?"]}, "query_toks": {"en": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "singer", "where", "country", "=", "\"France\"", ";"], "ru": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "singer", "where", "country", "=", "\"Россия\"", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "singer", "where", "country", "=", "value", ";"], "ru": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "singer", "where", "country", "=", "value", ";"]}}, {"id": "D_0007", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1;", "ru": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1;"}, "question": {"en": "Show the name and the release year of the song by the youngest singer.", "ru": "Укажите название и год выпуска песни самого молодого певца."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "name", "and", "the", "release", "year", "of", "the", "song", "by", "the", "youngest", "singer", "."], "ru": ["Укажите", "название", "и", "год", "выпуска", "песни", "самого", "молодого", "певца", "."]}, "query_toks": {"en": ["select", "song_name", ",", "song_release_year", "from", "singer", "order", "by", "age", "limit", "1", ";"], "ru": ["select", "song_name", ",", "song_release_year", "from", "singer", "order", "by", "age", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "song_name", ",", "song_release_year", "from", "singer", "order", "by", "age", "limit", "1", ";"], "ru": ["select", "song_name", ",", "song_release_year", "from", "singer", "order", "by", "age", "limit", "1", ";"]}}, {"id": "D_0008", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1;", "ru": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1;"}, "question": {"en": "What are the names and release years for all the songs of the youngest singer?", "ru": "Названия и годы релизов всех песен самого молодого певца"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "and", "release", "years", "for", "all", "the", "songs", "of", "the", "youngest", "singer", "?"], "ru": ["Названия", "и", "годы", "релизов", "всех", "песен", "самого", "молодого", "певца"]}, "query_toks": {"en": ["select", "song_name", ",", "song_release_year", "from", "singer", "order", "by", "age", "limit", "1", ";"], "ru": ["select", "song_name", ",", "song_release_year", "from", "singer", "order", "by", "age", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "song_name", ",", "song_release_year", "from", "singer", "order", "by", "age", "limit", "1", ";"], "ru": ["select", "song_name", ",", "song_release_year", "from", "singer", "order", "by", "age", "limit", "1", ";"]}}, {"id": "D_0009", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT country FROM singer WHERE age  >  20;", "ru": "SELECT DISTINCT country FROM singer WHERE age  >  20;"}, "question": {"en": "What are all distinct countries where singers above age 20 are from?", "ru": "Из каких стран певцы старше 20 лет?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "all", "distinct", "countries", "where", "singers", "above", "age", "20", "are", "from", "?"], "ru": ["Из", "каких", "стран", "певцы", "старше", "20", "лет", "?"]}, "query_toks": {"en": ["select", "distinct", "country", "from", "singer", "where", "age", ">", "20", ";"], "ru": ["select", "distinct", "country", "from", "singer", "where", "age", ">", "20", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "country", "from", "singer", "where", "age", ">", "20", ";"], "ru": ["select", "distinct", "country", "from", "singer", "where", "age", ">", "20", ";"]}}, {"id": "D_0010", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT country FROM singer WHERE age  >  20;", "ru": "SELECT DISTINCT country FROM singer WHERE age  >  20;"}, "question": {"en": "What are  the different countries with singers above age 20?", "ru": "Из каких стран есть певцы старше 20 лет?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "different", "countries", "with", "singers", "above", "age", "20", "?"], "ru": ["Из", "каких", "стран", "есть", "певцы", "старше", "20", "лет", "?"]}, "query_toks": {"en": ["select", "distinct", "country", "from", "singer", "where", "age", ">", "20", ";"], "ru": ["select", "distinct", "country", "from", "singer", "where", "age", ">", "20", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "country", "from", "singer", "where", "age", ">", "20", ";"], "ru": ["select", "distinct", "country", "from", "singer", "where", "age", ">", "20", ";"]}}, {"id": "D_0011", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT country ,  count(*) FROM singer GROUP BY country;", "ru": "SELECT country ,  count(*) FROM singer GROUP BY country;"}, "question": {"en": "Show all countries and the number of singers in each country.", "ru": "Показать все страны и количество певцов из каждой страны."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "all", "countries", "and", "the", "number", "of", "singers", "in", "each", "country", "."], "ru": ["Показать", "все", "страны", "и", "количество", "певцов", "из", "каждой", "страны", "."]}, "query_toks": {"en": ["select", "country", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "country", ";"], "ru": ["select", "country", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "country", ";"]}, "query_toks_no_values": {"en": ["select", "country", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "country", ";"], "ru": ["select", "country", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "country", ";"]}}, {"id": "D_0012", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT country ,  count(*) FROM singer GROUP BY country;", "ru": "SELECT country ,  count(*) FROM singer GROUP BY country;"}, "question": {"en": "How many singers are from each country?", "ru": "Сколько певцов от каждой страны?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "singers", "are", "from", "each", "country", "?"], "ru": ["Сколько", "певцов", "от", "каждой", "страны", "?"]}, "query_toks": {"en": ["select", "country", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "country", ";"], "ru": ["select", "country", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "country", ";"]}, "query_toks_no_values": {"en": ["select", "country", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "country", ";"], "ru": ["select", "country", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "country", ";"]}}, {"id": "D_0013", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer);", "ru": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer);"}, "question": {"en": "List all song names by singers above the average age.", "ru": "Перечислите все названия песен исполнителей старше среднего возраста."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "all", "song", "names", "by", "singers", "above", "the", "average", "age", "."], "ru": ["Перечислите", "все", "названия", "песен", "исполнителей", "старше", "среднего", "возраста", "."]}, "query_toks": {"en": ["select", "song_name", "from", "singer", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "singer", ")", ";"], "ru": ["select", "song_name", "from", "singer", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "singer", ")", ";"]}, "query_toks_no_values": {"en": ["select", "song_name", "from", "singer", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "singer", ")", ";"], "ru": ["select", "song_name", "from", "singer", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "singer", ")", ";"]}}, {"id": "D_0014", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer);", "ru": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer);"}, "question": {"en": "What are all the song names by singers who are older than average?", "ru": "Как называются все песни певцов старше среднего?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "all", "the", "song", "names", "by", "singers", "who", "are", "older", "than", "average", "?"], "ru": ["Как", "называются", "все", "песни", "певцов", "старше", "среднего", "?"]}, "query_toks": {"en": ["select", "song_name", "from", "singer", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "singer", ")", ";"], "ru": ["select", "song_name", "from", "singer", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "singer", ")", ";"]}, "query_toks_no_values": {"en": ["select", "song_name", "from", "singer", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "singer", ")", ";"], "ru": ["select", "song_name", "from", "singer", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "singer", ")", ";"]}}, {"id": "D_0015", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;", "ru": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;"}, "question": {"en": "Show location and name for all stadiums with a capacity between 5000 and 10000.", "ru": "Укажите расположение и название для всех стадионов вместимостью от 5000 до 10000 человек."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 1, [0, [0, 4, false], null], 5000.0, 10000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 1, [0, [0, 4, false], null], 5000.0, 10000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "location", "and", "name", "for", "all", "stadiums", "with", "a", "capacity", "between", "5000", "and", "10000", "."], "ru": ["Укажите", "расположение", "и", "название", "для", "всех", "стадионов", "вместимостью", "от", "5000", "до", "10000", "человек", "."]}, "query_toks": {"en": ["select", "location", ",", "name", "from", "stadium", "where", "capacity", "between", "5000", "and", "10000", ";"], "ru": ["select", "location", ",", "name", "from", "stadium", "where", "capacity", "between", "5000", "and", "10000", ";"]}, "query_toks_no_values": {"en": ["select", "location", ",", "name", "from", "stadium", "where", "capacity", "between", "5000", "and", "10000", ";"], "ru": ["select", "location", ",", "name", "from", "stadium", "where", "capacity", "between", "5000", "and", "10000", ";"]}}, {"id": "D_0016", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;", "ru": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;"}, "question": {"en": "What are the locations and names of all stations with capacity between 5000 and 10000?", "ru": "Каково расположение и названия всех станций вместимостью от 5000 до 10000?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 1, [0, [0, 4, false], null], 5000.0, 10000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 1, [0, [0, 4, false], null], 5000.0, 10000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "locations", "and", "names", "of", "all", "stations", "with", "capacity", "between", "5000", "and", "10000", "?"], "ru": ["Каково", "расположение", "и", "названия", "всех", "станций", "вместимостью", "от", "5000", "до", "10000", "?"]}, "query_toks": {"en": ["select", "location", ",", "name", "from", "stadium", "where", "capacity", "between", "5000", "and", "10000", ";"], "ru": ["select", "location", ",", "name", "from", "stadium", "where", "capacity", "between", "5000", "and", "10000", ";"]}, "query_toks_no_values": {"en": ["select", "location", ",", "name", "from", "stadium", "where", "capacity", "between", "5000", "and", "10000", ";"], "ru": ["select", "location", ",", "name", "from", "stadium", "where", "capacity", "between", "5000", "and", "10000", ";"]}}, {"id": "D_0017", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "select max(capacity), average from stadium;", "ru": "select max(capacity), average from stadium;"}, "question": {"en": "What is the maximum capacity and the average of all stadiums ?", "ru": "Какова максимальная вместимость и средняя вместимость всех стадионов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 4, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 4, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "maximum", "capacity", "and", "the", "average", "of", "all", "stadiums", "?"], "ru": ["Какова", "максимальная", "вместимость", "и", "средняя", "вместимость", "всех", "стадионов", "?"]}, "query_toks": {"en": ["select", "max", "(", "capacity", ")", ",", "average", "from", "stadium", ";"], "ru": ["select", "max", "(", "capacity", ")", ",", "average", "from", "stadium", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "capacity", ")", ",", "average", "from", "stadium", ";"], "ru": ["select", "max", "(", "capacity", ")", ",", "average", "from", "stadium", ";"]}}, {"id": "D_0018", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "select avg(capacity) ,  max(capacity) from stadium;", "ru": "select avg(capacity) ,  max(capacity) from stadium;"}, "question": {"en": "What is the average and maximum capacities for all stadiums ?", "ru": "Какова средняя и максимальная вместимость всех стадионов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]], [1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]], [1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "and", "maximum", "capacities", "for", "all", "stadiums", "?"], "ru": ["Какова", "средняя", "и", "максимальная", "вместимость", "всех", "стадионов", "?"]}, "query_toks": {"en": ["select", "avg", "(", "capacity", ")", ",", "max", "(", "capacity", ")", "from", "stadium", ";"], "ru": ["select", "avg", "(", "capacity", ")", ",", "max", "(", "capacity", ")", "from", "stadium", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "capacity", ")", ",", "max", "(", "capacity", ")", "from", "stadium", ";"], "ru": ["select", "avg", "(", "capacity", ")", ",", "max", "(", "capacity", ")", "from", "stadium", ";"]}}, {"id": "D_0019", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1;", "ru": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1;"}, "question": {"en": "What is the name and capacity for the stadium with highest average attendance?", "ru": "Название и вместимость стадиона с самой высокой средней посещаемостью?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 7, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 7, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "and", "capacity", "for", "the", "stadium", "with", "highest", "average", "attendance", "?"], "ru": ["Название", "и", "вместимость", "стадиона", "с", "самой", "высокой", "средней", "посещаемостью", "?"]}, "query_toks": {"en": ["select", "name", ",", "capacity", "from", "stadium", "order", "by", "average", "desc", "limit", "1", ";"], "ru": ["select", "name", ",", "capacity", "from", "stadium", "order", "by", "average", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "capacity", "from", "stadium", "order", "by", "average", "desc", "limit", "1", ";"], "ru": ["select", "name", ",", "capacity", "from", "stadium", "order", "by", "average", "desc", "limit", "1", ";"]}}, {"id": "D_0020", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1;", "ru": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1;"}, "question": {"en": "What is the name and capacity for the stadium with the highest average attendance?", "ru": "Название и вместимость стадиона с самой высокой средней посещаемостью?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 7, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 7, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "and", "capacity", "for", "the", "stadium", "with", "the", "highest", "average", "attendance", "?"], "ru": ["Название", "и", "вместимость", "стадиона", "с", "самой", "высокой", "средней", "посещаемостью", "?"]}, "query_toks": {"en": ["select", "name", ",", "capacity", "from", "stadium", "order", "by", "average", "desc", "limit", "1", ";"], "ru": ["select", "name", ",", "capacity", "from", "stadium", "order", "by", "average", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "capacity", "from", "stadium", "order", "by", "average", "desc", "limit", "1", ";"], "ru": ["select", "name", ",", "capacity", "from", "stadium", "order", "by", "average", "desc", "limit", "1", ";"]}}, {"id": "D_0021", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015;", "ru": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015;"}, "question": {"en": "How many concerts are there in year 2014 or 2015?", "ru": "Сколько концертов было в 2014 или 2015 годах?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null], "or", [false, 2, [0, [0, 19, false], null], 2015.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null], "or", [false, 2, [0, [0, 19, false], null], 2015.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "concerts", "are", "there", "in", "year", "2014", "or", "2015", "?"], "ru": ["Сколько", "концертов", "было", "в", "2014", "или", "2015", "годах", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "concert", "where", "year", "=", "2014", "or", "year", "=", "2015", ";"], "ru": ["select", "count", "(", "*", ")", "from", "concert", "where", "year", "=", "2014", "or", "year", "=", "2015", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "concert", "where", "year", "=", "2014", "or", "year", "=", "2015", ";"], "ru": ["select", "count", "(", "*", ")", "from", "concert", "where", "year", "=", "2014", "or", "year", "=", "2015", ";"]}}, {"id": "D_0022", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015;", "ru": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015;"}, "question": {"en": "How many concerts occurred in 2014 or 2015?", "ru": "Сколько концертов состоялось в 2014 или 2015?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null], "or", [false, 2, [0, [0, 19, false], null], 2015.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null], "or", [false, 2, [0, [0, 19, false], null], 2015.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "concerts", "occurred", "in", "2014", "or", "2015", "?"], "ru": ["Сколько", "концертов", "состоялось", "в", "2014", "или", "2015", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "concert", "where", "year", "=", "2014", "or", "year", "=", "2015", ";"], "ru": ["select", "count", "(", "*", ")", "from", "concert", "where", "year", "=", "2014", "or", "year", "=", "2015", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "concert", "where", "year", "=", "2014", "or", "year", "=", "2015", ";"], "ru": ["select", "count", "(", "*", ")", "from", "concert", "where", "year", "=", "2014", "or", "year", "=", "2015", ";"]}}, {"id": "D_0023", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id;", "ru": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id;"}, "question": {"en": "Show the stadium name and the number of concerts in each stadium.", "ru": "Покажите название стадиона и количество концертов на каждом стадионе."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "stadium", "name", "and", "the", "number", "of", "concerts", "in", "each", "stadium", "."], "ru": ["Покажите", "название", "стадиона", "и", "количество", "концертов", "на", "каждом", "стадионе", "."]}, "query_toks": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "group", "by", "t1.stadium_id", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "group", "by", "t1.stadium_id", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "group", "by", "t1.stadium_id", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "group", "by", "t1.stadium_id", ";"]}}, {"id": "D_0024", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id;", "ru": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id;"}, "question": {"en": "For each stadium, how many concerts play there?", "ru": "Сколько было сыграно концертов на каждом стадионе?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["For", "each", "stadium", ",", "how", "many", "concerts", "play", "there", "?"], "ru": ["Сколько", "было", "сыграно", "концертов", "на", "каждом", "стадионе", "?"]}, "query_toks": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "group", "by", "t1.stadium_id", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "group", "by", "t1.stadium_id", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "group", "by", "t1.stadium_id", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "group", "by", "t1.stadium_id", ";"]}}, {"id": "D_0025", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Show the stadium name and capacity with most number of concerts in year 2014 or after.", "ru": "Укажите название и вместимость стадиона, на котором будет проведено наибольшее количество концертов в 2014 году или позже."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 5, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 5, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "stadium", "name", "and", "capacity", "with", "most", "number", "of", "concerts", "in", "year", "2014", "or", "after", "."], "ru": ["Укажите", "название", "и", "вместимость", "стадиона", ",", "на", "котором", "будет", "проведено", "наибольшее", "количество", "концертов", "в", "2014", "году", "или", "позже", "."]}, "query_toks": {"en": ["select", "t2.name", ",", "t2.capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", ">=", "2014", "group", "by", "t2.stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.name", ",", "t2.capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", ">=", "2014", "group", "by", "t2.stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", ",", "t2.capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", ">=", "2014", "group", "by", "t2.stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.name", ",", "t2.capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", ">=", "2014", "group", "by", "t2.stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0026", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1;", "ru": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1;"}, "question": {"en": "What is the name and capacity of the stadium with the most concerts after 2013 ?", "ru": "Название и вместимость стадиона, на котором прошло больше всего концертов после 2013 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 19, false], null], 2013.0, null]], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 19, false], null], 2013.0, null]], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "and", "capacity", "of", "the", "stadium", "with", "the", "most", "concerts", "after", "2013", "?"], "ru": ["Название", "и", "вместимость", "стадиона", ",", "на", "котором", "прошло", "больше", "всего", "концертов", "после", "2013", "года", "?"]}, "query_toks": {"en": ["select", "t2.name", ",", "t2.capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", ">", "2013", "group", "by", "t2.stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.name", ",", "t2.capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", ">", "2013", "group", "by", "t2.stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", ",", "t2.capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", ">", "2013", "group", "by", "t2.stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.name", ",", "t2.capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", ">", "2013", "group", "by", "t2.stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0027", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which year has most number of concerts?", "ru": "В каком году больше всего концертов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "year", "has", "most", "number", "of", "concerts", "?"], "ru": ["В", "каком", "году", "больше", "всего", "концертов", "?"]}, "query_toks": {"en": ["select", "year", "from", "concert", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "year", "from", "concert", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "year", "from", "concert", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "year", "from", "concert", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0028", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the year that had the most concerts?", "ru": "В каком году было больше всего концертов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "year", "that", "had", "the", "most", "concerts", "?"], "ru": ["В", "каком", "году", "было", "больше", "всего", "концертов", "?"]}, "query_toks": {"en": ["select", "year", "from", "concert", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "year", "from", "concert", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "year", "from", "concert", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "year", "from", "concert", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0029", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert);", "ru": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert);"}, "question": {"en": "Show the stadium names without any concert.", "ru": "Показывать названия стадионов без концертов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "stadium", "names", "without", "any", "concert", "."], "ru": ["Показывать", "названия", "стадионов", "без", "концертов", "."]}, "query_toks": {"en": ["select", "name", "from", "stadium", "where", "stadium_id", "not", "in", "(", "select", "stadium_id", "from", "concert", ")", ";"], "ru": ["select", "name", "from", "stadium", "where", "stadium_id", "not", "in", "(", "select", "stadium_id", "from", "concert", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "stadium", "where", "stadium_id", "not", "in", "(", "select", "stadium_id", "from", "concert", ")", ";"], "ru": ["select", "name", "from", "stadium", "where", "stadium_id", "not", "in", "(", "select", "stadium_id", "from", "concert", ")", ";"]}}, {"id": "D_0030", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert);", "ru": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert);"}, "question": {"en": "What are the names of the stadiums without any concerts?", "ru": "Как называются стадионы без проведенных концертов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "stadiums", "without", "any", "concerts", "?"], "ru": ["Как", "называются", "стадионы", "без", "проведенных", "концертов", "?"]}, "query_toks": {"en": ["select", "name", "from", "stadium", "where", "stadium_id", "not", "in", "(", "select", "stadium_id", "from", "concert", ")", ";"], "ru": ["select", "name", "from", "stadium", "where", "stadium_id", "not", "in", "(", "select", "stadium_id", "from", "concert", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "stadium", "where", "stadium_id", "not", "in", "(", "select", "stadium_id", "from", "concert", ")", ";"], "ru": ["select", "name", "from", "stadium", "where", "stadium_id", "not", "in", "(", "select", "stadium_id", "from", "concert", ")", ";"]}}, {"id": "D_0031", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30;", "ru": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30;"}, "question": {"en": "Show countries where a singer above age 40 and a singer below 30 are from.", "ru": "Показать страны происхождения певца старше 40 лет и певца младше 30 лет."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 40.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 4, [0, [0, 13, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 40.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 4, [0, [0, 13, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Show", "countries", "where", "a", "singer", "above", "age", "40", "and", "a", "singer", "below", "30", "are", "from", "."], "ru": ["Показать", "страны", "происхождения", "певца", "старше", "40", "лет", "и", "певца", "младше", "30", "лет", "."]}, "query_toks": {"en": ["select", "country", "from", "singer", "where", "age", ">", "40", "intersect", "select", "country", "from", "singer", "where", "age", "<", "30", ";"], "ru": ["select", "country", "from", "singer", "where", "age", ">", "40", "intersect", "select", "country", "from", "singer", "where", "age", "<", "30", ";"]}, "query_toks_no_values": {"en": ["select", "country", "from", "singer", "where", "age", ">", "40", "intersect", "select", "country", "from", "singer", "where", "age", "<", "30", ";"], "ru": ["select", "country", "from", "singer", "where", "age", ">", "40", "intersect", "select", "country", "from", "singer", "where", "age", "<", "30", ";"]}}, {"id": "D_0032", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014;", "ru": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014;"}, "question": {"en": "Show names for all stadiums except for stadiums having a concert in year 2014.", "ru": "Укажите названия всех стадионов, кроме стадионов, на которых в 2014 году состоялся концерт."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["Show", "names", "for", "all", "stadiums", "except", "for", "stadiums", "having", "a", "concert", "in", "year", "2014", "."], "ru": ["Укажите", "названия", "всех", "стадионов", ",", "кроме", "стадионов", ",", "на", "которых", "в", "2014", "году", "состоялся", "концерт", "."]}, "query_toks": {"en": ["select", "name", "from", "stadium", "except", "select", "t2.name", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", ";"], "ru": ["select", "name", "from", "stadium", "except", "select", "t2.name", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "stadium", "except", "select", "t2.name", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", ";"], "ru": ["select", "name", "from", "stadium", "except", "select", "t2.name", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", ";"]}}, {"id": "D_0033", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014;", "ru": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014;"}, "question": {"en": "What are the names of all stadiums that did not have a concert in 2014?", "ru": "Как называются все стадионы, на которых не было концертов в 2014 году?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "all", "stadiums", "that", "did", "not", "have", "a", "concert", "in", "2014", "?"], "ru": ["Как", "называются", "все", "стадионы", ",", "на", "которых", "не", "было", "концертов", "в", "2014", "году", "?"]}, "query_toks": {"en": ["select", "name", "from", "stadium", "except", "select", "t2.name", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", ";"], "ru": ["select", "name", "from", "stadium", "except", "select", "t2.name", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "stadium", "except", "select", "t2.name", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", ";"], "ru": ["select", "name", "from", "stadium", "except", "select", "t2.name", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", ";"]}}, {"id": "D_0034", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id;", "ru": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id;"}, "question": {"en": "Show the name and theme for all concerts and the number of singers in each concert.", "ru": "Укажите название и тему для всех концертов, а также количество певцов на каждом концерте."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "name", "and", "theme", "for", "all", "concerts", "and", "the", "number", "of", "singers", "in", "each", "concert", "."], "ru": ["Укажите", "название", "и", "тему", "для", "всех", "концертов", ",", "а", "также", "количество", "певцов", "на", "каждом", "концерте", "."]}, "query_toks": {"en": ["select", "t2.concert_name", ",", "t2.theme", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1.concert_id", "=", "t2.concert_id", "group", "by", "t2.concert_id", ";"], "ru": ["select", "t2.concert_name", ",", "t2.theme", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1.concert_id", "=", "t2.concert_id", "group", "by", "t2.concert_id", ";"]}, "query_toks_no_values": {"en": ["select", "t2.concert_name", ",", "t2.theme", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1.concert_id", "=", "t2.concert_id", "group", "by", "t2.concert_id", ";"], "ru": ["select", "t2.concert_name", ",", "t2.theme", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1.concert_id", "=", "t2.concert_id", "group", "by", "t2.concert_id", ";"]}}, {"id": "D_0035", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id;", "ru": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id;"}, "question": {"en": "What are the names , themes , and number of singers for every concert ?", "ru": "Какие имена певцов, темы выступлений и количество певцов на каждом концерте?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", ",", "themes", ",", "and", "number", "of", "singers", "for", "every", "concert", "?"], "ru": ["Какие", "имена", "певцов", ",", "темы", "выступлений", "и", "количество", "певцов", "на", "каждом", "концерте", "?"]}, "query_toks": {"en": ["select", "t2.concert_name", ",", "t2.theme", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1.concert_id", "=", "t2.concert_id", "group", "by", "t2.concert_id", ";"], "ru": ["select", "t2.concert_name", ",", "t2.theme", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1.concert_id", "=", "t2.concert_id", "group", "by", "t2.concert_id", ";"]}, "query_toks_no_values": {"en": ["select", "t2.concert_name", ",", "t2.theme", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1.concert_id", "=", "t2.concert_id", "group", "by", "t2.concert_id", ";"], "ru": ["select", "t2.concert_name", ",", "t2.theme", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1.concert_id", "=", "t2.concert_id", "group", "by", "t2.concert_id", ";"]}}, {"id": "D_0036", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id;", "ru": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id;"}, "question": {"en": "List singer names and number of concerts for each singer.", "ru": "Перечислите имена певцов и количество концертов для каждого певца."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "singer", "names", "and", "number", "of", "concerts", "for", "each", "singer", "."], "ru": ["Перечислите", "имена", "певцов", "и", "количество", "концертов", "для", "каждого", "певца", "."]}, "query_toks": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t2.singer_id", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t2.singer_id", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t2.singer_id", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t2.singer_id", ";"]}}, {"id": "D_0037", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id;", "ru": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id;"}, "question": {"en": "What are the names of the singers and number of concerts for each person?", "ru": "Как зовут певцов и сколько концертов у каждого человека?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "singers", "and", "number", "of", "concerts", "for", "each", "person", "?"], "ru": ["Как", "зовут", "певцов", "и", "сколько", "концертов", "у", "каждого", "человека", "?"]}, "query_toks": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t2.singer_id", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t2.singer_id", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t2.singer_id", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t2.singer_id", ";"]}}, {"id": "D_0038", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014;", "ru": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014;"}, "question": {"en": "List all singer names in concerts in year 2014.", "ru": "Перечислите имена всех певцов на концертах в 2014 году."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "all", "singer", "names", "in", "concerts", "in", "year", "2014", "."], "ru": ["Перечислите", "имена", "всех", "певцов", "на", "концертах", "в", "2014", "году", "."]}, "query_toks": {"en": ["select", "t2.name", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "join", "concert", "as", "t3", "on", "t1.concert_id", "=", "t3.concert_id", "where", "t3.year", "=", "2014", ";"], "ru": ["select", "t2.name", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "join", "concert", "as", "t3", "on", "t1.concert_id", "=", "t3.concert_id", "where", "t3.year", "=", "2014", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "join", "concert", "as", "t3", "on", "t1.concert_id", "=", "t3.concert_id", "where", "t3.year", "=", "2014", ";"], "ru": ["select", "t2.name", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "join", "concert", "as", "t3", "on", "t1.concert_id", "=", "t3.concert_id", "where", "t3.year", "=", "2014", ";"]}}, {"id": "D_0039", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014;", "ru": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014;"}, "question": {"en": "What are the names of the singers who performed in a concert in 2014?", "ru": "Как зовут певцов, выступавших на концерте в 2014 году?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "singers", "who", "performed", "in", "a", "concert", "in", "2014", "?"], "ru": ["Как", "зовут", "певцов", ",", "выступавших", "на", "концерте", "в", "2014", "году", "?"]}, "query_toks": {"en": ["select", "t2.name", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "join", "concert", "as", "t3", "on", "t1.concert_id", "=", "t3.concert_id", "where", "t3.year", "=", "2014", ";"], "ru": ["select", "t2.name", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "join", "concert", "as", "t3", "on", "t1.concert_id", "=", "t3.concert_id", "where", "t3.year", "=", "2014", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "join", "concert", "as", "t3", "on", "t1.concert_id", "=", "t3.concert_id", "where", "t3.year", "=", "2014", ";"], "ru": ["select", "t2.name", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "join", "concert", "as", "t3", "on", "t1.concert_id", "=", "t3.concert_id", "where", "t3.year", "=", "2014", ";"]}}, {"id": "D_0040", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%';", "ru": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Всё%';"}, "question": {"en": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "ru": "Имя и национальность певца, у которого есть песня со словом «Всё» в названии?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 9, [0, [0, 11, false], null], "\"%Hey%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 9, [0, [0, 11, false], null], "\"%Всё%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["what", "is", "the", "name", "and", "nation", "of", "the", "singer", "who", "have", "a", "song", "having", "'Hey", "'", "in", "its", "name", "?"], "ru": ["Имя", "и", "национальность", "певца", ",", "у", "которого", "есть", "песня", "со", "словом", "«", "Всё", "»", "в", "названии", "?"]}, "query_toks": {"en": ["select", "name", ",", "country", "from", "singer", "where", "song_name", "like", "\"%Hey%\"", ";"], "ru": ["select", "name", ",", "country", "from", "singer", "where", "song_name", "like", "\"%Всё%\"", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "country", "from", "singer", "where", "song_name", "like", "value", ";"], "ru": ["select", "name", ",", "country", "from", "singer", "where", "song_name", "like", "value", ";"]}}, {"id": "D_0041", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%';", "ru": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Всё%';"}, "question": {"en": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?", "ru": "Имя и страна происхождения каждого певца, у которого есть песня со словом «Всё» в названии?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 9, [0, [0, 11, false], null], "\"%Hey%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 9, [0, [0, 11, false], null], "\"%Всё%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "and", "country", "of", "origin", "of", "every", "singer", "who", "has", "a", "song", "with", "the", "word", "'Hey", "'", "in", "its", "title", "?"], "ru": ["Имя", "и", "страна", "происхождения", "каждого", "певца", ",", "у", "которого", "есть", "песня", "со", "словом", "«", "Всё", "»", "в", "названии", "?"]}, "query_toks": {"en": ["select", "name", ",", "country", "from", "singer", "where", "song_name", "like", "\"%Hey%\"", ";"], "ru": ["select", "name", ",", "country", "from", "singer", "where", "song_name", "like", "\"%Всё%\"", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "country", "from", "singer", "where", "song_name", "like", "value", ";"], "ru": ["select", "name", ",", "country", "from", "singer", "where", "song_name", "like", "value", ";"]}}, {"id": "D_0042", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015;", "ru": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015;"}, "question": {"en": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.", "ru": "Найдите название и расположение стадионов, на которых проходили некоторые концерты в 2014 и 2015 годах."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2015.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2015.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "name", "and", "location", "of", "the", "stadiums", "which", "some", "concerts", "happened", "in", "the", "years", "of", "both", "2014", "and", "2015", "."], "ru": ["Найдите", "название", "и", "расположение", "стадионов", ",", "на", "которых", "проходили", "некоторые", "концерты", "в", "2014", "и", "2015", "годах", "."]}, "query_toks": {"en": ["select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", "intersect", "select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2015", ";"], "ru": ["select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", "intersect", "select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2015", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", "intersect", "select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2015", ";"], "ru": ["select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", "intersect", "select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2015", ";"]}}, {"id": "D_0043", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015;", "ru": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015;"}, "question": {"en": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?", "ru": "Как называются и где находятся стадионы, на которых проходили концерты в 2014 и 2015 годах?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2015.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2015.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "and", "locations", "of", "the", "stadiums", "that", "had", "concerts", "that", "occurred", "in", "both", "2014", "and", "2015", "?"], "ru": ["Как", "называются", "и", "где", "находятся", "стадионы", ",", "на", "которых", "проходили", "концерты", "в", "2014", "и", "2015", "годах", "?"]}, "query_toks": {"en": ["select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", "intersect", "select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2015", ";"], "ru": ["select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", "intersect", "select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2015", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", "intersect", "select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2015", ";"], "ru": ["select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2014", "intersect", "select", "t2.name", ",", "t2.location", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", "=", "2015", ";"]}}, {"id": "D_0044", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1);", "ru": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1);"}, "question": {"en": "Find the number of concerts happened in the stadium with the highest capacity .", "ru": "Найдите количество концертов на стадионе с наибольшей вместимостью."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "concerts", "happened", "in", "the", "stadium", "with", "the", "highest", "capacity", "."], "ru": ["Найдите", "количество", "концертов", "на", "стадионе", "с", "наибольшей", "вместимостью", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "concert", "where", "stadium_id", "=", "(", "select", "stadium_id", "from", "stadium", "order", "by", "capacity", "desc", "limit", "1", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "concert", "where", "stadium_id", "=", "(", "select", "stadium_id", "from", "stadium", "order", "by", "capacity", "desc", "limit", "1", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "concert", "where", "stadium_id", "=", "(", "select", "stadium_id", "from", "stadium", "order", "by", "capacity", "desc", "limit", "1", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "concert", "where", "stadium_id", "=", "(", "select", "stadium_id", "from", "stadium", "order", "by", "capacity", "desc", "limit", "1", ")", ";"]}}, {"id": "D_0045", "db_id": "concert_singer", "source": "spider-dev", "type": "dev", "query": {"en": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1);", "ru": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1);"}, "question": {"en": "What are the number of concerts that occurred in the stadium with the largest capacity ?", "ru": "Сколько концертов прошло на стадионе с наибольшей вместимостью?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "number", "of", "concerts", "that", "occurred", "in", "the", "stadium", "with", "the", "largest", "capacity", "?"], "ru": ["Сколько", "концертов", "прошло", "на", "стадионе", "с", "наибольшей", "вместимостью", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "concert", "where", "stadium_id", "=", "(", "select", "stadium_id", "from", "stadium", "order", "by", "capacity", "desc", "limit", "1", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "concert", "where", "stadium_id", "=", "(", "select", "stadium_id", "from", "stadium", "order", "by", "capacity", "desc", "limit", "1", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "concert", "where", "stadium_id", "=", "(", "select", "stadium_id", "from", "stadium", "order", "by", "capacity", "desc", "limit", "1", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "concert", "where", "stadium_id", "=", "(", "select", "stadium_id", "from", "stadium", "order", "by", "capacity", "desc", "limit", "1", ")", ";"]}}, {"id": "D_0046", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM pets WHERE weight  >  10;", "ru": "SELECT count(*) FROM pets WHERE weight  >  10;"}, "question": {"en": "Find the number of pets whose weight is heavier than 10.", "ru": "Найдите количество домашних животных, вес которых превышает 10."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "pets", "whose", "weight", "is", "heavier", "than", "10", "."], "ru": ["Найдите", "количество", "домашних", "животных", ",", "вес", "которых", "превышает", "10", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "pets", "where", "weight", ">", "10", ";"], "ru": ["select", "count", "(", "*", ")", "from", "pets", "where", "weight", ">", "10", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "pets", "where", "weight", ">", "10", ";"], "ru": ["select", "count", "(", "*", ")", "from", "pets", "where", "weight", ">", "10", ";"]}}, {"id": "D_0047", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM pets WHERE weight  >  10;", "ru": "SELECT count(*) FROM pets WHERE weight  >  10;"}, "question": {"en": "How many pets have a greater weight than 10?", "ru": "Сколько домашних животных имеют вес больше 10?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "pets", "have", "a", "greater", "weight", "than", "10", "?"], "ru": ["Сколько", "домашних", "животных", "имеют", "вес", "больше", "10", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "pets", "where", "weight", ">", "10", ";"], "ru": ["select", "count", "(", "*", ")", "from", "pets", "where", "weight", ">", "10", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "pets", "where", "weight", ">", "10", ";"], "ru": ["select", "count", "(", "*", ")", "from", "pets", "where", "weight", ">", "10", ";"]}}, {"id": "D_0048", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1;", "ru": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1;"}, "question": {"en": "Find the weight of the youngest dog.", "ru": "Найдите вес самой молодой собаки."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "weight", "of", "the", "youngest", "dog", "."], "ru": ["Найдите", "вес", "самой", "молодой", "собаки", "."]}, "query_toks": {"en": ["select", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1", ";"], "ru": ["select", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1", ";"], "ru": ["select", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1", ";"]}}, {"id": "D_0049", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1;", "ru": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1;"}, "question": {"en": "How much does the youngest dog weigh?", "ru": "Сколько весит самая молодая собака?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "much", "does", "the", "youngest", "dog", "weigh", "?"], "ru": ["Сколько", "весит", "самая", "молодая", "собака", "?"]}, "query_toks": {"en": ["select", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1", ";"], "ru": ["select", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1", ";"], "ru": ["select", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1", ";"]}}, {"id": "D_0050", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(weight) ,  petType FROM pets GROUP BY petType;", "ru": "SELECT max(weight) ,  petType FROM pets GROUP BY petType;"}, "question": {"en": "Find the maximum weight for each type of pet. List the maximum weight and pet type.", "ru": "Найдите максимальный вес для каждого типа питомца. Укажите максимальный вес и тип питомца."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "maximum", "weight", "for", "each", "type", "of", "pet", ".", "List", "the", "maximum", "weight", "and", "pet", "type", "."], "ru": ["Найдите", "максимальный", "вес", "для", "каждого", "типа", "питомца", ".", "Укажите", "максимальный", "вес", "и", "тип", "питомца", "."]}, "query_toks": {"en": ["select", "max", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"], "ru": ["select", "max", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"], "ru": ["select", "max", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"]}}, {"id": "D_0051", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(weight) ,  petType FROM pets GROUP BY petType;", "ru": "SELECT max(weight) ,  petType FROM pets GROUP BY petType;"}, "question": {"en": "List the maximum weight and type for each type of pet.", "ru": "Укажи максимальный вес и тип для каждого типа питомца."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "maximum", "weight", "and", "type", "for", "each", "type", "of", "pet", "."], "ru": ["Укажи", "максимальный", "вес", "и", "тип", "для", "каждого", "типа", "питомца", "."]}, "query_toks": {"en": ["select", "max", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"], "ru": ["select", "max", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"], "ru": ["select", "max", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"]}}, {"id": "D_0052", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20;", "ru": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20;"}, "question": {"en": "Find number of pets owned by students who are older than 20.", "ru": "Найди количество домашних животных, принадлежащих учащимся старше 20 лет."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "number", "of", "pets", "owned", "by", "students", "who", "are", "older", "than", "20", "."], "ru": ["Найди", "количество", "домашних", "животных", ",", "принадлежащих", "учащимся", "старше", "20", "лет", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.age", ">", "20", ";"], "ru": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.age", ">", "20", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.age", ">", "20", ";"], "ru": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.age", ">", "20", ";"]}}, {"id": "D_0053", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20;", "ru": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20;"}, "question": {"en": "How many pets are owned by students that have an age greater than 20?", "ru": "Сколько домашних животных принадлежит учащимся старше 20 лет?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "pets", "are", "owned", "by", "students", "that", "have", "an", "age", "greater", "than", "20", "?"], "ru": ["Сколько", "домашних", "животных", "принадлежит", "учащимся", "старше", "20", "лет", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.age", ">", "20", ";"], "ru": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.age", ">", "20", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.age", ">", "20", ";"], "ru": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.age", ">", "20", ";"]}}, {"id": "D_0054", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog';", "ru": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'Ж';"}, "question": {"en": "Find the number of dog pets that are raised by female students (with sex F).", "ru": "Найдите количество домашних питомцев, которых имеют студентки (с полом Ж)."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 11, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"F\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"dog\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 11, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Ж\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "dog", "pets", "that", "are", "raised", "by", "female", "students", "(", "with", "sex", "F", ")", "."], "ru": ["Найдите", "количество", "домашних", "питомцев", ",", "которых", "имеют", "студентки", "(", "с", "полом", "Ж", ")", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t2.petid", "=", "t3.petid", "where", "t1.sex", "=", "\"F\"", "and", "t3.pettype", "=", "\"dog\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t2.petid", "=", "t3.petid", "where", "t1.sex", "=", "\"Ж\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t2.petid", "=", "t3.petid", "where", "t1.sex", "=", "value", "and", "t3.pettype", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t2.petid", "=", "t3.petid", "where", "t1.sex", "=", "value", ";"]}}, {"id": "D_0055", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog';", "ru": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'Ж';"}, "question": {"en": "How many dog pets are raised by female students?", "ru": "Сколько домашних питомцев имеют студентки?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 11, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"F\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"dog\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 11, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Ж\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "dog", "pets", "are", "raised", "by", "female", "students", "?"], "ru": ["Сколько", "домашних", "питомцев", "имеют", "студентки", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t2.petid", "=", "t3.petid", "where", "t1.sex", "=", "\"F\"", "and", "t3.pettype", "=", "\"dog\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t2.petid", "=", "t3.petid", "where", "t1.sex", "=", "\"Ж\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t2.petid", "=", "t3.petid", "where", "t1.sex", "=", "value", "and", "t3.pettype", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t2.petid", "=", "t3.petid", "where", "t1.sex", "=", "value", ";"]}}, {"id": "D_0056", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT pettype) FROM pets;", "ru": "SELECT count(DISTINCT pettype) FROM pets;"}, "question": {"en": "Find the number of distinct type of pets.", "ru": "Найдите количество различных видов домашних животных."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 12, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 12, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "distinct", "type", "of", "pets", "."], "ru": ["Найдите", "количество", "различных", "видов", "домашних", "животных", "."]}, "query_toks": {"en": ["select", "count", "(", "distinct", "pettype", ")", "from", "pets", ";"], "ru": ["select", "count", "(", "distinct", "pettype", ")", "from", "pets", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "pettype", ")", "from", "pets", ";"], "ru": ["select", "count", "(", "distinct", "pettype", ")", "from", "pets", ";"]}}, {"id": "D_0057", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT pettype) FROM pets;", "ru": "SELECT count(DISTINCT pettype) FROM pets;"}, "question": {"en": "How many different types of pet are there?", "ru": "Сколько существует разных видов домашних животных?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 12, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 12, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "different", "types", "of", "pet", "are", "there", "?"], "ru": ["Сколько", "существует", "разных", "видов", "домашних", "животных", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "pettype", ")", "from", "pets", ";"], "ru": ["select", "count", "(", "distinct", "pettype", ")", "from", "pets", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "pettype", ")", "from", "pets", ";"], "ru": ["select", "count", "(", "distinct", "pettype", ")", "from", "pets", ";"]}}, {"id": "D_0058", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog';", "ru": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'черепаха' OR T3.pettype  =  'попугай';"}, "question": {"en": "Find the first name of students who have cat or dog pet.", "ru": "Имена учеников, у которых есть черепаха или попугай."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"dog\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"черепаха\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"попугай\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "first", "name", "of", "students", "who", "have", "cat", "or", "dog", "pet", "."], "ru": ["Имена", "учеников", ",", "у", "которых", "есть", "черепаха", "или", "попугай", "."]}, "query_toks": {"en": ["select", "distinct", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"cat\"", "or", "t3.pettype", "=", "\"dog\"", ";"], "ru": ["select", "distinct", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"черепаха\"", "or", "t3.pettype", "=", "\"попугай\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", "or", "t3.pettype", "=", "value", ";"], "ru": ["select", "distinct", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", "or", "t3.pettype", "=", "value", ";"]}}, {"id": "D_0059", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog';", "ru": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'черепаха' OR T3.pettype  =  'попугай';"}, "question": {"en": "What are the first names of every student who has a cat or dog as a pet?", "ru": "Как зовут каждого ученика, у которого в качестве домашнего питомца есть черепаха или попугай?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"dog\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"черепаха\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"попугай\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "first", "names", "of", "every", "student", "who", "has", "a", "cat", "or", "dog", "as", "a", "pet", "?"], "ru": ["Как", "зовут", "каждого", "ученика", ",", "у", "которого", "в", "качестве", "домашнего", "питомца", "есть", "черепаха", "или", "попугай", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"cat\"", "or", "t3.pettype", "=", "\"dog\"", ";"], "ru": ["select", "distinct", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"черепаха\"", "or", "t3.pettype", "=", "\"попугай\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", "or", "t3.pettype", "=", "value", ";"], "ru": ["select", "distinct", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", "or", "t3.pettype", "=", "value", ";"]}}, {"id": "D_0060", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog';", "ru": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'черепаха' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'попугай';"}, "question": {"en": "Find the first name of students who have both cat and dog pets .", "ru": "Найдите имена учеников, у которых есть и черепахи, и попугаи."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"dog\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"черепаха\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"попугай\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "first", "name", "of", "students", "who", "have", "both", "cat", "and", "dog", "pets", "."], "ru": ["Найдите", "имена", "учеников", ",", "у", "которых", "есть", "и", "черепахи", ",", "и", "попугаи", "."]}, "query_toks": {"en": ["select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"cat\"", "intersect", "select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"dog\"", ";"], "ru": ["select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"черепаха\"", "intersect", "select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"попугай\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", "intersect", "select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", ";"], "ru": ["select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", "intersect", "select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", ";"]}}, {"id": "D_0061", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog';", "ru": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'черепаха' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'попугай';"}, "question": {"en": "What are the students' first names who have both cats and dogs as pets?", "ru": "Как зовут учеников, у которых в качестве домашних животных есть и черепахи, и попугаи?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"dog\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"черепаха\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"попугай\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "students", "'", "first", "names", "who", "have", "both", "cats", "and", "dogs", "as", "pets", "?"], "ru": ["Как", "зовут", "учеников", ",", "у", "которых", "в", "качестве", "домашних", "животных", "есть", "и", "черепахи", ",", "и", "попугаи", "?"]}, "query_toks": {"en": ["select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"cat\"", "intersect", "select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"dog\"", ";"], "ru": ["select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"черепаха\"", "intersect", "select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"попугай\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", "intersect", "select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", ";"], "ru": ["select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", "intersect", "select", "t1.fname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", ";"]}}, {"id": "D_0062", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat');", "ru": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'черепаха');"}, "question": {"en": "Find the major and age of students who do not have a cat pet.", "ru": "Найдите специальность и возраст студентов, у которых нет черепах."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"черепаха\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "major", "and", "age", "of", "students", "who", "do", "not", "have", "a", "cat", "pet", "."], "ru": ["Найдите", "специальность", "и", "возраст", "студентов", ",", "у", "которых", "нет", "черепах", "."]}, "query_toks": {"en": ["select", "major", ",", "age", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"cat\"", ")", ";"], "ru": ["select", "major", ",", "age", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"черепаха\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "major", ",", "age", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", ")", ";"], "ru": ["select", "major", ",", "age", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", ")", ";"]}}, {"id": "D_0063", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat');", "ru": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'черепаха');"}, "question": {"en": "What major is every student who does not own a cat as a pet, and also how old are they?", "ru": "Какую специальность имеет каждый студент, у которого нет черепахи в качестве домашнего животного, и сколько им лет?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"черепаха\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "major", "is", "every", "student", "who", "does", "not", "own", "a", "cat", "as", "a", "pet", ",", "and", "also", "how", "old", "are", "they", "?"], "ru": ["Какую", "специальность", "имеет", "каждый", "студент", ",", "у", "которого", "нет", "черепахи", "в", "качестве", "домашнего", "животного", ",", "и", "сколько", "им", "лет", "?"]}, "query_toks": {"en": ["select", "major", ",", "age", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"cat\"", ")", ";"], "ru": ["select", "major", ",", "age", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"черепаха\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "major", ",", "age", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", ")", ";"], "ru": ["select", "major", ",", "age", "from", "student", "where", "stuid", "not", "in", "(", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", ")", ";"]}}, {"id": "D_0064", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat';", "ru": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'черепаха';"}, "question": {"en": "Find the id of students who do not have a cat pet.", "ru": "Найди id студентов, у которых нет черепах."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"черепаха\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["Find", "the", "id", "of", "students", "who", "do", "not", "have", "a", "cat", "pet", "."], "ru": ["Найди", "id", "студентов", ",", "у", "которых", "нет", "черепах", "."]}, "query_toks": {"en": ["select", "stuid", "from", "student", "except", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"cat\"", ";"], "ru": ["select", "stuid", "from", "student", "except", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"черепаха\"", ";"]}, "query_toks_no_values": {"en": ["select", "stuid", "from", "student", "except", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", ";"], "ru": ["select", "stuid", "from", "student", "except", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", ";"]}}, {"id": "D_0065", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat';", "ru": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'черепаха';"}, "question": {"en": "What are the ids of the students who do not own cats as pets?", "ru": "Каковы id студентов, у которых нет черепах в качестве домашних животных?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"черепаха\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["What", "are", "the", "ids", "of", "the", "students", "who", "do", "not", "own", "cats", "as", "pets", "?"], "ru": ["Каковы", "id", "студентов", ",", "у", "которых", "нет", "черепах", "в", "качестве", "домашних", "животных", "?"]}, "query_toks": {"en": ["select", "stuid", "from", "student", "except", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"cat\"", ";"], "ru": ["select", "stuid", "from", "student", "except", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"черепаха\"", ";"]}, "query_toks_no_values": {"en": ["select", "stuid", "from", "student", "except", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", ";"], "ru": ["select", "stuid", "from", "student", "except", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", ";"]}}, {"id": "D_0066", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat');", "ru": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'черепаха' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'попугай');"}, "question": {"en": "Find the first name and age of students who have a dog but do not have a cat as a pet.", "ru": "Найдите имя и возраст учеников, у которых есть черепаха, но нет попугая в качестве домашнего питомца."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"dog\"", null], "and", [true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"черепаха\"", null], "and", [true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"попугай\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "first", "name", "and", "age", "of", "students", "who", "have", "a", "dog", "but", "do", "not", "have", "a", "cat", "as", "a", "pet", "."], "ru": ["Найдите", "имя", "и", "возраст", "учеников", ",", "у", "которых", "есть", "черепаха", ",", "но", "нет", "попугая", "в", "качестве", "домашнего", "питомца", "."]}, "query_toks": {"en": ["select", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"dog\"", "and", "t1.stuid", "not", "in", "(", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"cat\"", ")", ";"], "ru": ["select", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"черепаха\"", "and", "t1.stuid", "not", "in", "(", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"попугай\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", "and", "t1.stuid", "not", "in", "(", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", ")", ";"], "ru": ["select", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", "and", "t1.stuid", "not", "in", "(", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", ")", ";"]}}, {"id": "D_0067", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat');", "ru": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'черепаха' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'попугай');"}, "question": {"en": "What is the first name of every student who has a dog but does not have a cat?", "ru": "Как зовут каждого ученика, у которого есть черепаха, но нет попугая?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"dog\"", null], "and", [true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"черепаха\"", null], "and", [true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"попугай\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "first", "name", "of", "every", "student", "who", "has", "a", "dog", "but", "does", "not", "have", "a", "cat", "?"], "ru": ["Как", "зовут", "каждого", "ученика", ",", "у", "которого", "есть", "черепаха", ",", "но", "нет", "попугая", "?"]}, "query_toks": {"en": ["select", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"dog\"", "and", "t1.stuid", "not", "in", "(", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"cat\"", ")", ";"], "ru": ["select", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"черепаха\"", "and", "t1.stuid", "not", "in", "(", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "\"попугай\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", "and", "t1.stuid", "not", "in", "(", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", ")", ";"], "ru": ["select", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", "and", "t1.stuid", "not", "in", "(", "select", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pettype", "=", "value", ")", ";"]}}, {"id": "D_0068", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1;", "ru": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1;"}, "question": {"en": "Find the type and weight of the youngest pet.", "ru": "Тип и вес самого молодого питомца."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "type", "and", "weight", "of", "the", "youngest", "pet", "."], "ru": ["Тип", "и", "вес", "самого", "молодого", "питомца", "."]}, "query_toks": {"en": ["select", "pettype", ",", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1", ";"], "ru": ["select", "pettype", ",", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "pettype", ",", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1", ";"], "ru": ["select", "pettype", ",", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1", ";"]}}, {"id": "D_0069", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1;", "ru": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1;"}, "question": {"en": "What type of pet is the youngest animal, and how much does it weigh?", "ru": "Какой тип домашнего животного самый молодой и сколько оно весит?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "type", "of", "pet", "is", "the", "youngest", "animal", ",", "and", "how", "much", "does", "it", "weigh", "?"], "ru": ["Какой", "тип", "домашнего", "животного", "самый", "молодой", "и", "сколько", "оно", "весит", "?"]}, "query_toks": {"en": ["select", "pettype", ",", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1", ";"], "ru": ["select", "pettype", ",", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "pettype", ",", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1", ";"], "ru": ["select", "pettype", ",", "weight", "from", "pets", "order", "by", "pet_age", "limit", "1", ";"]}}, {"id": "D_0070", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1;", "ru": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1;"}, "question": {"en": "Find the id and weight of all pets whose age is older than 1.", "ru": "Найди id и вес всех домашних животных старше 1 года."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "id", "and", "weight", "of", "all", "pets", "whose", "age", "is", "older", "than", "1", "."], "ru": ["Найди", "id", "и", "вес", "всех", "домашних", "животных", "старше", "1", "года", "."]}, "query_toks": {"en": ["select", "petid", ",", "weight", "from", "pets", "where", "pet_age", ">", "1", ";"], "ru": ["select", "petid", ",", "weight", "from", "pets", "where", "pet_age", ">", "1", ";"]}, "query_toks_no_values": {"en": ["select", "petid", ",", "weight", "from", "pets", "where", "pet_age", ">", "1", ";"], "ru": ["select", "petid", ",", "weight", "from", "pets", "where", "pet_age", ">", "1", ";"]}}, {"id": "D_0071", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1;", "ru": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1;"}, "question": {"en": "What is the id and weight of every pet who is older than 1?", "ru": "Каков id и вес каждого питомца старше 1 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 14, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "id", "and", "weight", "of", "every", "pet", "who", "is", "older", "than", "1", "?"], "ru": ["Каков", "id", "и", "вес", "каждого", "питомца", "старше", "1", "года", "?"]}, "query_toks": {"en": ["select", "petid", ",", "weight", "from", "pets", "where", "pet_age", ">", "1", ";"], "ru": ["select", "petid", ",", "weight", "from", "pets", "where", "pet_age", ">", "1", ";"]}, "query_toks_no_values": {"en": ["select", "petid", ",", "weight", "from", "pets", "where", "pet_age", ">", "1", ";"], "ru": ["select", "petid", ",", "weight", "from", "pets", "where", "pet_age", ">", "1", ";"]}}, {"id": "D_0072", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype;", "ru": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype;"}, "question": {"en": "Find the average and maximum age for each type of pet.", "ru": "Найдите средний и максимальный возраст для каждого типа домашних животных."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "average", "and", "maximum", "age", "for", "each", "type", "of", "pet", "."], "ru": ["Найдите", "средний", "и", "максимальный", "возраст", "для", "каждого", "типа", "домашних", "животных", "."]}, "query_toks": {"en": ["select", "avg", "(", "pet_age", ")", ",", "max", "(", "pet_age", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"], "ru": ["select", "avg", "(", "pet_age", ")", ",", "max", "(", "pet_age", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "pet_age", ")", ",", "max", "(", "pet_age", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"], "ru": ["select", "avg", "(", "pet_age", ")", ",", "max", "(", "pet_age", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"]}}, {"id": "D_0073", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype;", "ru": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype;"}, "question": {"en": "What is the average and maximum age for each pet type?", "ru": "Каков средний и максимальный возраст для каждого типа домашних животных?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "and", "maximum", "age", "for", "each", "pet", "type", "?"], "ru": ["Каков", "средний", "и", "максимальный", "возраст", "для", "каждого", "типа", "домашних", "животных", "?"]}, "query_toks": {"en": ["select", "avg", "(", "pet_age", ")", ",", "max", "(", "pet_age", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"], "ru": ["select", "avg", "(", "pet_age", ")", ",", "max", "(", "pet_age", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "pet_age", ")", ",", "max", "(", "pet_age", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"], "ru": ["select", "avg", "(", "pet_age", ")", ",", "max", "(", "pet_age", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"]}}, {"id": "D_0074", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype;", "ru": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype;"}, "question": {"en": "Find the average weight for each pet type.", "ru": "Средний вес для каждого типа питомца."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "average", "weight", "for", "each", "pet", "type", "."], "ru": ["Средний", "вес", "для", "каждого", "типа", "питомца", "."]}, "query_toks": {"en": ["select", "avg", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"], "ru": ["select", "avg", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"], "ru": ["select", "avg", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"]}}, {"id": "D_0075", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype;", "ru": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype;"}, "question": {"en": "What is the average weight for each type of pet?", "ru": "Каков средний вес для каждого вида домашних животных?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "weight", "for", "each", "type", "of", "pet", "?"], "ru": ["Каков", "средний", "вес", "для", "каждого", "вида", "домашних", "животных", "?"]}, "query_toks": {"en": ["select", "avg", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"], "ru": ["select", "avg", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"], "ru": ["select", "avg", "(", "weight", ")", ",", "pettype", "from", "pets", "group", "by", "pettype", ";"]}}, {"id": "D_0076", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid;", "ru": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid;"}, "question": {"en": "Find the first name and age of students who have a pet.", "ru": "Имя и возраст учеников, у которых есть домашнее животное."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "first", "name", "and", "age", "of", "students", "who", "have", "a", "pet", "."], "ru": ["Имя", "и", "возраст", "учеников", ",", "у", "которых", "есть", "домашнее", "животное", "."]}, "query_toks": {"en": ["select", "distinct", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", ";"], "ru": ["select", "distinct", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", ";"], "ru": ["select", "distinct", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", ";"]}}, {"id": "D_0077", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid;", "ru": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid;"}, "question": {"en": "What are the different first names and ages of the students who do have pets?", "ru": "Каковы разные имена и возраст учеников, у которых есть домашние животные?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "different", "first", "names", "and", "ages", "of", "the", "students", "who", "do", "have", "pets", "?"], "ru": ["Каковы", "разные", "имена", "и", "возраст", "учеников", ",", "у", "которых", "есть", "домашние", "животные", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", ";"], "ru": ["select", "distinct", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", ";"], "ru": ["select", "distinct", "t1.fname", ",", "t1.age", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", ";"]}}, {"id": "D_0078", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith';", "ru": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Спиридонов';"}, "question": {"en": "Find the id of the pet owned by student whose last name is ‘Smith’.", "ru": "Найти id животного, принадлежащего студенту по фамилии «Спиридонов» ."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Smith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Спиридонов\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "id", "of", "the", "pet", "owned", "by", "student", "whose", "last", "name", "is", "‘", "Smith", "’", "."], "ru": ["Найти", "id", "животного", ",", "принадлежащего", "студенту", "по", "фамилии", "«", "Спиридонов", "»", "."]}, "query_toks": {"en": ["select", "t2.petid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.lname", "=", "\"Smith\"", ";"], "ru": ["select", "t2.petid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.lname", "=", "\"Спиридонов\"", ";"]}, "query_toks_no_values": {"en": ["select", "t2.petid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.lname", "=", "value", ";"], "ru": ["select", "t2.petid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.lname", "=", "value", ";"]}}, {"id": "D_0079", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith';", "ru": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Спиридонов';"}, "question": {"en": "What is the id of the pet owned by the student whose last name is 'Smith'?", "ru": "Каков id домашнего животного, принадлежащего студенту по фамилии Спиридонов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Smith\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Спиридонов\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "id", "of", "the", "pet", "owned", "by", "the", "student", "whose", "last", "name", "is", "'Smith", "'", "?"], "ru": ["Каков", "id", "домашнего", "животного", ",", "принадлежащего", "студенту", "по", "фамилии", "Спиридонов", "?"]}, "query_toks": {"en": ["select", "t2.petid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.lname", "=", "\"Smith\"", ";"], "ru": ["select", "t2.petid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.lname", "=", "\"Спиридонов\"", ";"]}, "query_toks_no_values": {"en": ["select", "t2.petid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.lname", "=", "value", ";"], "ru": ["select", "t2.petid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "where", "t1.lname", "=", "value", ";"]}}, {"id": "D_0080", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid;", "ru": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid;"}, "question": {"en": "Find the number of pets for each student who has any pet and student id.", "ru": "Количество домашних животных у каждого учащегося и id учащегося."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "pets", "for", "each", "student", "who", "has", "any", "pet", "and", "student", "id", "."], "ru": ["Количество", "домашних", "животных", "у", "каждого", "учащегося", "и", "id", "учащегося", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", ";"], "ru": ["select", "count", "(", "*", ")", ",", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", ";"], "ru": ["select", "count", "(", "*", ")", ",", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", ";"]}}, {"id": "D_0081", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid;", "ru": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid;"}, "question": {"en": "For students who have pets , how many pets does each student have ? list their ids instead of names .", "ru": "Для студентов, у которых есть домашние животные, сколько домашних животных имеет каждый студент? перечислите их id вместо имен."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["For", "students", "who", "have", "pets", ",", "how", "many", "pets", "does", "each", "student", "have", "?", "list", "their", "ids", "instead", "of", "names", "."], "ru": ["Для", "студентов", ",", "у", "которых", "есть", "домашние", "животные", ",", "сколько", "домашних", "животных", "имеет", "каждый", "студент", "?", "перечислите", "их", "id", "вместо", "имен", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", ";"], "ru": ["select", "count", "(", "*", ")", ",", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", ";"], "ru": ["select", "count", "(", "*", ")", ",", "t1.stuid", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", ";"]}}, {"id": "D_0082", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1;", "ru": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1;"}, "question": {"en": "Find the first name and gender of student who have more than one pet.", "ru": "Найдите имя и пол ученика, у которого более одного домашнего животного."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "first", "name", "and", "gender", "of", "student", "who", "have", "more", "than", "one", "pet", "."], "ru": ["Найдите", "имя", "и", "пол", "ученика", ",", "у", "которого", "более", "одного", "домашнего", "животного", "."]}, "query_toks": {"en": ["select", "t1.fname", ",", "t1.sex", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "t1.fname", ",", "t1.sex", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", "having", "count", "(", "*", ")", ">", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.fname", ",", "t1.sex", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "t1.fname", ",", "t1.sex", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", "having", "count", "(", "*", ")", ">", "1", ";"]}}, {"id": "D_0083", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1;", "ru": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1;"}, "question": {"en": "What is the first name and gender of the all the students who have more than one pet?", "ru": "Имя и пол всех учеников, у которых есть более одного домашнего животного?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "first", "name", "and", "gender", "of", "the", "all", "the", "students", "who", "have", "more", "than", "one", "pet", "?"], "ru": ["Имя", "и", "пол", "всех", "учеников", ",", "у", "которых", "есть", "более", "одного", "домашнего", "животного", "?"]}, "query_toks": {"en": ["select", "t1.fname", ",", "t1.sex", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "t1.fname", ",", "t1.sex", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", "having", "count", "(", "*", ")", ">", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.fname", ",", "t1.sex", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "t1.fname", ",", "t1.sex", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "group", "by", "t1.stuid", "having", "count", "(", "*", ")", ">", "1", ";"]}}, {"id": "D_0084", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat';", "ru": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'попугай';"}, "question": {"en": "Find the last name of the student who has a cat that is age 3.", "ru": "Найдите фамилию ученика, у которого есть попугай трехлетнего возраста."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], 3.0, null], "and", [false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], 3.0, null], "and", [false, 2, [0, [0, 12, false], null], "\"попугай\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "last", "name", "of", "the", "student", "who", "has", "a", "cat", "that", "is", "age", "3", "."], "ru": ["Найдите", "фамилию", "ученика", ",", "у", "которого", "есть", "попугай", "трехлетнего", "возраста", "."]}, "query_toks": {"en": ["select", "t1.lname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pet_age", "=", "3", "and", "t3.pettype", "=", "\"cat\"", ";"], "ru": ["select", "t1.lname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pet_age", "=", "3", "and", "t3.pettype", "=", "\"попугай\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.lname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pet_age", "=", "3", "and", "t3.pettype", "=", "value", ";"], "ru": ["select", "t1.lname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pet_age", "=", "3", "and", "t3.pettype", "=", "value", ";"]}}, {"id": "D_0085", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat';", "ru": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'попугай';"}, "question": {"en": "What is the last name of the student who has a cat that is 3 years old?", "ru": "Как зовут ученика, у которого есть попугай 3-х летнего возраста?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], 3.0, null], "and", [false, 2, [0, [0, 12, false], null], "\"cat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], 3.0, null], "and", [false, 2, [0, [0, 12, false], null], "\"попугай\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "last", "name", "of", "the", "student", "who", "has", "a", "cat", "that", "is", "3", "years", "old", "?"], "ru": ["Как", "зовут", "ученика", ",", "у", "которого", "есть", "попугай", "3-х", "летнего", "возраста", "?"]}, "query_toks": {"en": ["select", "t1.lname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pet_age", "=", "3", "and", "t3.pettype", "=", "\"cat\"", ";"], "ru": ["select", "t1.lname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pet_age", "=", "3", "and", "t3.pettype", "=", "\"попугай\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.lname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pet_age", "=", "3", "and", "t3.pettype", "=", "value", ";"], "ru": ["select", "t1.lname", "from", "student", "as", "t1", "join", "has_pet", "as", "t2", "on", "t1.stuid", "=", "t2.stuid", "join", "pets", "as", "t3", "on", "t3.petid", "=", "t2.petid", "where", "t3.pet_age", "=", "3", "and", "t3.pettype", "=", "value", ";"]}}, {"id": "D_0086", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "select avg(age) from student where stuid not in (select stuid from has_pet);", "ru": "select avg(age) from student where stuid not in (select stuid from has_pet);"}, "question": {"en": "Find the average age of students who do not have any pet .", "ru": "Найдите средний возраст студентов, у которых нет домашних животных."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "average", "age", "of", "students", "who", "do", "not", "have", "any", "pet", "."], "ru": ["Найдите", "средний", "возраст", "студентов", ",", "у", "которых", "нет", "домашних", "животных", "."]}, "query_toks": {"en": ["select", "avg", "(", "age", ")", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "has_pet", ")", ";"], "ru": ["select", "avg", "(", "age", ")", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "has_pet", ")", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "age", ")", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "has_pet", ")", ";"], "ru": ["select", "avg", "(", "age", ")", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "has_pet", ")", ";"]}}, {"id": "D_0087", "db_id": "pets_1", "source": "spider-dev", "type": "dev", "query": {"en": "select avg(age) from student where stuid not in (select stuid from has_pet);", "ru": "select avg(age) from student where stuid not in (select stuid from has_pet);"}, "question": {"en": "What is the average age for all students who do not own any pets ?", "ru": "Каков средний возраст всех учеников, у которых нет домашних животных?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "age", "for", "all", "students", "who", "do", "not", "own", "any", "pets", "?"], "ru": ["Каков", "средний", "возраст", "всех", "учеников", ",", "у", "которых", "нет", "домашних", "животных", "?"]}, "query_toks": {"en": ["select", "avg", "(", "age", ")", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "has_pet", ")", ";"], "ru": ["select", "avg", "(", "age", ")", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "has_pet", ")", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "age", ")", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "has_pet", ")", ";"], "ru": ["select", "avg", "(", "age", ")", "from", "student", "where", "stuid", "not", "in", "(", "select", "stuid", "from", "has_pet", ")", ";"]}}, {"id": "D_0088", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM CONTINENTS;", "ru": "SELECT count(*) FROM CONTINENTS;"}, "question": {"en": "How many continents are there?", "ru": "Сколько всего континентов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "continents", "are", "there", "?"], "ru": ["Сколько", "всего", "континентов", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "continents", ";"], "ru": ["select", "count", "(", "*", ")", "from", "continents", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "continents", ";"], "ru": ["select", "count", "(", "*", ")", "from", "continents", ";"]}}, {"id": "D_0089", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM CONTINENTS;", "ru": "SELECT count(*) FROM CONTINENTS;"}, "question": {"en": "What is the number of continents?", "ru": "Сколько континентов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "number", "of", "continents", "?"], "ru": ["Сколько", "континентов", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "continents", ";"], "ru": ["select", "count", "(", "*", ")", "from", "continents", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "continents", ";"], "ru": ["select", "count", "(", "*", ")", "from", "continents", ";"]}}, {"id": "D_0090", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "ru": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;"}, "question": {"en": "How many countries does each continent have? List the continent id, continent name and the number of countries.", "ru": "Сколько стран есть на каждом континенте? Показать id континента, название континента и количество стран."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "countries", "does", "each", "continent", "have", "?", "List", "the", "continent", "id", ",", "continent", "name", "and", "the", "number", "of", "countries", "."], "ru": ["Сколько", "стран", "есть", "на", "каждом", "континенте", "?", "Показать", "id", "континента", ",", "название", "континента", "и", "количество", "стран", "."]}, "query_toks": {"en": ["select", "t1.contid", ",", "t1.continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "group", "by", "t1.contid", ";"], "ru": ["select", "t1.contid", ",", "t1.continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "group", "by", "t1.contid", ";"]}, "query_toks_no_values": {"en": ["select", "t1.contid", ",", "t1.continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "group", "by", "t1.contid", ";"], "ru": ["select", "t1.contid", ",", "t1.continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "group", "by", "t1.contid", ";"]}}, {"id": "D_0091", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "ru": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;"}, "question": {"en": "For each continent, list its id, name, and how many countries it has?", "ru": "Для каждого континента укажите его id, название и количество стран"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["For", "each", "continent", ",", "list", "its", "id", ",", "name", ",", "and", "how", "many", "countries", "it", "has", "?"], "ru": ["Для", "каждого", "континента", "укажите", "его", "id", ",", "название", "и", "количество", "стран"]}, "query_toks": {"en": ["select", "t1.contid", ",", "t1.continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "group", "by", "t1.contid", ";"], "ru": ["select", "t1.contid", ",", "t1.continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "group", "by", "t1.contid", ";"]}, "query_toks_no_values": {"en": ["select", "t1.contid", ",", "t1.continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "group", "by", "t1.contid", ";"], "ru": ["select", "t1.contid", ",", "t1.continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "group", "by", "t1.contid", ";"]}}, {"id": "D_0092", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM COUNTRIES;", "ru": "SELECT count(*) FROM COUNTRIES;"}, "question": {"en": "How many countries are listed?", "ru": "Сколько стран указано в списке?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "countries", "are", "listed", "?"], "ru": ["Сколько", "стран", "указано", "в", "списке", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "countries", ";"], "ru": ["select", "count", "(", "*", ")", "from", "countries", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "countries", ";"], "ru": ["select", "count", "(", "*", ")", "from", "countries", ";"]}}, {"id": "D_0093", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM COUNTRIES;", "ru": "SELECT count(*) FROM COUNTRIES;"}, "question": {"en": "How many countries exist?", "ru": "Сколько стран существует?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "countries", "exist", "?"], "ru": ["Сколько", "стран", "существует", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "countries", ";"], "ru": ["select", "count", "(", "*", ")", "from", "countries", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "countries", ";"], "ru": ["select", "count", "(", "*", ")", "from", "countries", ";"]}}, {"id": "D_0094", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "ru": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;"}, "question": {"en": "How many models does each car maker produce? List maker full name, id and the number.", "ru": "Сколько моделей выпускает каждый автопроизводитель? Полное имя производителя, id и количество моделей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "models", "does", "each", "car", "maker", "produce", "?", "List", "maker", "full", "name", ",", "id", "and", "the", "number", "."], "ru": ["Сколько", "моделей", "выпускает", "каждый", "автопроизводитель", "?", "Полное", "имя", "производителя", ",", "id", "и", "количество", "моделей", "."]}, "query_toks": {"en": ["select", "t1.fullname", ",", "t1.id", ",", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", ";"], "ru": ["select", "t1.fullname", ",", "t1.id", ",", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", ";"]}, "query_toks_no_values": {"en": ["select", "t1.fullname", ",", "t1.id", ",", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", ";"], "ru": ["select", "t1.fullname", ",", "t1.id", ",", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", ";"]}}, {"id": "D_0095", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "ru": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;"}, "question": {"en": "What is the full name of each car maker, along with its id and how many models it produces?", "ru": "Какое полное название каждого автопроизводителя, а также его id и сколько моделей он производит?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "full", "name", "of", "each", "car", "maker", ",", "along", "with", "its", "id", "and", "how", "many", "models", "it", "produces", "?"], "ru": ["Какое", "полное", "название", "каждого", "автопроизводителя", ",", "а", "также", "его", "id", "и", "сколько", "моделей", "он", "производит", "?"]}, "query_toks": {"en": ["select", "t1.fullname", ",", "t1.id", ",", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", ";"], "ru": ["select", "t1.fullname", ",", "t1.id", ",", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", ";"]}, "query_toks_no_values": {"en": ["select", "t1.fullname", ",", "t1.id", ",", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", ";"], "ru": ["select", "t1.fullname", ",", "t1.id", ",", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", ";"]}}, {"id": "D_0096", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "ru": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;"}, "question": {"en": "Which model of the car has the minimum horsepower?", "ru": "Какая модель автомобиля имеет минимальную мощность?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "model", "of", "the", "car", "has", "the", "minimum", "horsepower", "?"], "ru": ["Какая", "модель", "автомобиля", "имеет", "минимальную", "мощность", "?"]}, "query_toks": {"en": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.horsepower", "asc", "limit", "1", ";"], "ru": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.horsepower", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.horsepower", "asc", "limit", "1", ";"], "ru": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.horsepower", "asc", "limit", "1", ";"]}}, {"id": "D_0097", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "ru": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;"}, "question": {"en": "What is the model of the car with the smallest amount of horsepower?", "ru": "Какая модель автомобиля с наименьшей мощностью?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "model", "of", "the", "car", "with", "the", "smallest", "amount", "of", "horsepower", "?"], "ru": ["Какая", "модель", "автомобиля", "с", "наименьшей", "мощностью", "?"]}, "query_toks": {"en": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.horsepower", "asc", "limit", "1", ";"], "ru": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.horsepower", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.horsepower", "asc", "limit", "1", ";"], "ru": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.horsepower", "asc", "limit", "1", ";"]}}, {"id": "D_0098", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA);", "ru": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA);"}, "question": {"en": "Find the model of the car whose weight is below the average weight.", "ru": "Найдите модель автомобиля, вес которой меньше среднего."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "model", "of", "the", "car", "whose", "weight", "is", "below", "the", "average", "weight", "."], "ru": ["Найдите", "модель", "автомобиля", ",", "вес", "которой", "меньше", "среднего", "."]}, "query_toks": {"en": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.weight", "<", "(", "select", "avg", "(", "weight", ")", "from", "cars_data", ")", ";"], "ru": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.weight", "<", "(", "select", "avg", "(", "weight", ")", "from", "cars_data", ")", ";"]}, "query_toks_no_values": {"en": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.weight", "<", "(", "select", "avg", "(", "weight", ")", "from", "cars_data", ")", ";"], "ru": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.weight", "<", "(", "select", "avg", "(", "weight", ")", "from", "cars_data", ")", ";"]}}, {"id": "D_0099", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA);", "ru": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA);"}, "question": {"en": "What is the model for the car with a weight smaller than the average?", "ru": "Какая модель машины имеет массу меньше средней?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "model", "for", "the", "car", "with", "a", "weight", "smaller", "than", "the", "average", "?"], "ru": ["Какая", "модель", "машины", "имеет", "массу", "меньше", "средней", "?"]}, "query_toks": {"en": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.weight", "<", "(", "select", "avg", "(", "weight", ")", "from", "cars_data", ")", ";"], "ru": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.weight", "<", "(", "select", "avg", "(", "weight", ")", "from", "cars_data", ")", ";"]}, "query_toks_no_values": {"en": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.weight", "<", "(", "select", "avg", "(", "weight", ")", "from", "cars_data", ")", ";"], "ru": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.weight", "<", "(", "select", "avg", "(", "weight", ")", "from", "cars_data", ")", ";"]}}, {"id": "D_0100", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "ru": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';"}, "question": {"en": "Find the name of the makers that produced some cars in the year of 1970?", "ru": "Найдите имена производителей, которые выпустили несколько автомобилей в 1970 году"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"1970\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"1970\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "name", "of", "the", "makers", "that", "produced", "some", "cars", "in", "the", "year", "of", "1970", "?"], "ru": ["Найдите", "имена", "производителей", ",", "которые", "выпустили", "несколько", "автомобилей", "в", "1970", "году"]}, "query_toks": {"en": ["select", "distinct", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "join", "cars_data", "as", "t4", "on", "t3.makeid", "=", "t4.id", "where", "t4.year", "=", "\"1970\"", ";"], "ru": ["select", "distinct", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "join", "cars_data", "as", "t4", "on", "t3.makeid", "=", "t4.id", "where", "t4.year", "=", "\"1970\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "join", "cars_data", "as", "t4", "on", "t3.makeid", "=", "t4.id", "where", "t4.year", "=", "value", ";"], "ru": ["select", "distinct", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "join", "cars_data", "as", "t4", "on", "t3.makeid", "=", "t4.id", "where", "t4.year", "=", "value", ";"]}}, {"id": "D_0101", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "ru": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';"}, "question": {"en": "What is the name of the different car makers who produced a car in 1970?", "ru": "Как назывались различные автопроизводители, которые выпустили автомобиль в 1970 году?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"1970\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], "\"1970\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "different", "car", "makers", "who", "produced", "a", "car", "in", "1970", "?"], "ru": ["Как", "назывались", "различные", "автопроизводители", ",", "которые", "выпустили", "автомобиль", "в", "1970", "году", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "join", "cars_data", "as", "t4", "on", "t3.makeid", "=", "t4.id", "where", "t4.year", "=", "\"1970\"", ";"], "ru": ["select", "distinct", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "join", "cars_data", "as", "t4", "on", "t3.makeid", "=", "t4.id", "where", "t4.year", "=", "\"1970\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "join", "cars_data", "as", "t4", "on", "t3.makeid", "=", "t4.id", "where", "t4.year", "=", "value", ";"], "ru": ["select", "distinct", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "join", "cars_data", "as", "t4", "on", "t3.makeid", "=", "t4.id", "where", "t4.year", "=", "value", ";"]}}, {"id": "D_0102", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "ru": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);"}, "question": {"en": "Find the make and production time of the cars that were produced in the earliest year?", "ru": "Узнать марку и время выпуска автомобилей, выпущенных в самый ранний год"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "make", "and", "production", "time", "of", "the", "cars", "that", "were", "produced", "in", "the", "earliest", "year", "?"], "ru": ["Узнать", "марку", "и", "время", "выпуска", "автомобилей", ",", "выпущенных", "в", "самый", "ранний", "год"]}, "query_toks": {"en": ["select", "t2.make", ",", "t1.year", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.year", "=", "(", "select", "min", "(", "year", ")", "from", "cars_data", ")", ";"], "ru": ["select", "t2.make", ",", "t1.year", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.year", "=", "(", "select", "min", "(", "year", ")", "from", "cars_data", ")", ";"]}, "query_toks_no_values": {"en": ["select", "t2.make", ",", "t1.year", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.year", "=", "(", "select", "min", "(", "year", ")", "from", "cars_data", ")", ";"], "ru": ["select", "t2.make", ",", "t1.year", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.year", "=", "(", "select", "min", "(", "year", ")", "from", "cars_data", ")", ";"]}}, {"id": "D_0103", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "ru": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);"}, "question": {"en": "What is the maker of the carr produced in the earliest year and what year was it?", "ru": "Какой производитель автомобилей выпустил автомобиль первым и в каком году это было?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "maker", "of", "the", "carr", "produced", "in", "the", "earliest", "year", "and", "what", "year", "was", "it", "?"], "ru": ["Какой", "производитель", "автомобилей", "выпустил", "автомобиль", "первым", "и", "в", "каком", "году", "это", "было", "?"]}, "query_toks": {"en": ["select", "t2.make", ",", "t1.year", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.year", "=", "(", "select", "min", "(", "year", ")", "from", "cars_data", ")", ";"], "ru": ["select", "t2.make", ",", "t1.year", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.year", "=", "(", "select", "min", "(", "year", ")", "from", "cars_data", ")", ";"]}, "query_toks_no_values": {"en": ["select", "t2.make", ",", "t1.year", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.year", "=", "(", "select", "min", "(", "year", ")", "from", "cars_data", ")", ";"], "ru": ["select", "t2.make", ",", "t1.year", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.year", "=", "(", "select", "min", "(", "year", ")", "from", "cars_data", ")", ";"]}}, {"id": "D_0104", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "ru": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;"}, "question": {"en": "Which distinct car models are the produced after 1980?", "ru": "Какие модели автомобилей выпускаются после 1980 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "distinct", "car", "models", "are", "the", "produced", "after", "1980", "?"], "ru": ["Какие", "модели", "автомобилей", "выпускаются", "после", "1980", "года", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "cars_data", "as", "t3", "on", "t2.makeid", "=", "t3.id", "where", "t3.year", ">", "1980", ";"], "ru": ["select", "distinct", "t1.model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "cars_data", "as", "t3", "on", "t2.makeid", "=", "t3.id", "where", "t3.year", ">", "1980", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "cars_data", "as", "t3", "on", "t2.makeid", "=", "t3.id", "where", "t3.year", ">", "1980", ";"], "ru": ["select", "distinct", "t1.model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "cars_data", "as", "t3", "on", "t2.makeid", "=", "t3.id", "where", "t3.year", ">", "1980", ";"]}}, {"id": "D_0105", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "ru": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;"}, "question": {"en": "What are the different models for the cards produced after 1980?", "ru": "Какие существуют модели автомобилей, выпущенных после 1980 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "different", "models", "for", "the", "cards", "produced", "after", "1980", "?"], "ru": ["Какие", "существуют", "модели", "автомобилей", ",", "выпущенных", "после", "1980", "года", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "cars_data", "as", "t3", "on", "t2.makeid", "=", "t3.id", "where", "t3.year", ">", "1980", ";"], "ru": ["select", "distinct", "t1.model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "cars_data", "as", "t3", "on", "t2.makeid", "=", "t3.id", "where", "t3.year", ">", "1980", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "cars_data", "as", "t3", "on", "t2.makeid", "=", "t3.id", "where", "t3.year", ">", "1980", ";"], "ru": ["select", "distinct", "t1.model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "cars_data", "as", "t3", "on", "t2.makeid", "=", "t3.id", "where", "t3.year", ">", "1980", ";"]}}, {"id": "D_0106", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "ru": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;"}, "question": {"en": "How many car makers are there in each continents? List the continent name and the count.", "ru": "Сколько автопроизводителей существует на каждом континенте? Указывать название континента и количество."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "car", "makers", "are", "there", "in", "each", "continents", "?", "List", "the", "continent", "name", "and", "the", "count", "."], "ru": ["Сколько", "автопроизводителей", "существует", "на", "каждом", "континенте", "?", "Указывать", "название", "континента", "и", "количество", "."]}, "query_toks": {"en": ["select", "t1.continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "join", "car_makers", "as", "t3", "on", "t2.countryid", "=", "t3.country", "group", "by", "t1.continent", ";"], "ru": ["select", "t1.continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "join", "car_makers", "as", "t3", "on", "t2.countryid", "=", "t3.country", "group", "by", "t1.continent", ";"]}, "query_toks_no_values": {"en": ["select", "t1.continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "join", "car_makers", "as", "t3", "on", "t2.countryid", "=", "t3.country", "group", "by", "t1.continent", ";"], "ru": ["select", "t1.continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "join", "car_makers", "as", "t3", "on", "t2.countryid", "=", "t3.country", "group", "by", "t1.continent", ";"]}}, {"id": "D_0107", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "ru": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;"}, "question": {"en": "What is the name of each continent and how many car makers are there in each one?", "ru": "Как называется каждый континент и сколько производителей автомобилей на каждом из них?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "each", "continent", "and", "how", "many", "car", "makers", "are", "there", "in", "each", "one", "?"], "ru": ["Как", "называется", "каждый", "континент", "и", "сколько", "производителей", "автомобилей", "на", "каждом", "из", "них", "?"]}, "query_toks": {"en": ["select", "t1.continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "join", "car_makers", "as", "t3", "on", "t2.countryid", "=", "t3.country", "group", "by", "t1.continent", ";"], "ru": ["select", "t1.continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "join", "car_makers", "as", "t3", "on", "t2.countryid", "=", "t3.country", "group", "by", "t1.continent", ";"]}, "query_toks_no_values": {"en": ["select", "t1.continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "join", "car_makers", "as", "t3", "on", "t2.countryid", "=", "t3.country", "group", "by", "t1.continent", ";"], "ru": ["select", "t1.continent", ",", "count", "(", "*", ")", "from", "continents", "as", "t1", "join", "countries", "as", "t2", "on", "t1.contid", "=", "t2.continent", "join", "car_makers", "as", "t3", "on", "t2.countryid", "=", "t3.country", "group", "by", "t1.continent", ";"]}}, {"id": "D_0108", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "ru": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;"}, "question": {"en": "Which of the countries has the most car makers? List the country name.", "ru": "В какой из стран больше всего автопроизводителей? Укажите название страны."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "of", "the", "countries", "has", "the", "most", "car", "makers", "?", "List", "the", "country", "name", "."], "ru": ["В", "какой", "из", "стран", "больше", "всего", "автопроизводителей", "?", "Укажите", "название", "страны", "."]}, "query_toks": {"en": ["select", "t2.countryname", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1.country", "=", "t2.countryid", "group", "by", "t1.country", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.countryname", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1.country", "=", "t2.countryid", "group", "by", "t1.country", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.countryname", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1.country", "=", "t2.countryid", "group", "by", "t1.country", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.countryname", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1.country", "=", "t2.countryid", "group", "by", "t1.country", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0109", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "ru": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;"}, "question": {"en": "What is the name of the country with the most car makers?", "ru": "Как называется страна с наибольшим количеством производителей автомобилей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "country", "with", "the", "most", "car", "makers", "?"], "ru": ["Как", "называется", "страна", "с", "наибольшим", "количеством", "производителей", "автомобилей", "?"]}, "query_toks": {"en": ["select", "t2.countryname", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1.country", "=", "t2.countryid", "group", "by", "t1.country", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.countryname", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1.country", "=", "t2.countryid", "group", "by", "t1.country", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.countryname", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1.country", "=", "t2.countryid", "group", "by", "t1.country", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.countryname", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1.country", "=", "t2.countryid", "group", "by", "t1.country", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0110", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;", "ru": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;"}, "question": {"en": "How many car models are produced by each maker ? Only list the count and the maker full name .", "ru": "Сколько моделей автомобилей выпускает каждый производитель? Укажите только количество и полное имя производителя."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "car", "models", "are", "produced", "by", "each", "maker", "?", "Only", "list", "the", "count", "and", "the", "maker", "full", "name", "."], "ru": ["Сколько", "моделей", "автомобилей", "выпускает", "каждый", "производитель", "?", "Укажите", "только", "количество", "и", "полное", "имя", "производителя", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "t2.fullname", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "group", "by", "t2.id", ";"], "ru": ["select", "count", "(", "*", ")", ",", "t2.fullname", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "group", "by", "t2.id", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "t2.fullname", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "group", "by", "t2.id", ";"], "ru": ["select", "count", "(", "*", ")", ",", "t2.fullname", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "group", "by", "t2.id", ";"]}}, {"id": "D_0111", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;", "ru": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;"}, "question": {"en": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?", "ru": "Какое количество моделей автомобилей выпускает каждый производитель, и каковы id и полное название каждого производителя?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "number", "of", "car", "models", "that", "are", "produced", "by", "each", "maker", "and", "what", "is", "the", "id", "and", "full", "name", "of", "each", "maker", "?"], "ru": ["Какое", "количество", "моделей", "автомобилей", "выпускает", "каждый", "производитель", ",", "и", "каковы", "id", "и", "полное", "название", "каждого", "производителя", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "t2.fullname", ",", "t2.id", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "group", "by", "t2.id", ";"], "ru": ["select", "count", "(", "*", ")", ",", "t2.fullname", ",", "t2.id", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "group", "by", "t2.id", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "t2.fullname", ",", "t2.id", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "group", "by", "t2.id", ";"], "ru": ["select", "count", "(", "*", ")", ",", "t2.fullname", ",", "t2.id", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "group", "by", "t2.id", ";"]}}, {"id": "D_0112", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';", "ru": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';"}, "question": {"en": "What is the accelerate of the car make amc hornet sportabout (sw)?", "ru": "С каким ускорением разгоняется модель amc hornet sportabout (sw)?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"amc hornet sportabout (sw)\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"amc hornet sportabout (sw)\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "accelerate", "of", "the", "car", "make", "amc", "hornet", "sportabout", "(", "sw", ")", "?"], "ru": ["С", "каким", "ускорением", "разгоняется", "модель", "amc", "hornet", "sportabout", "(", "sw", ")", "?"]}, "query_toks": {"en": ["select", "t1.accelerate", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.make", "=", "\"amc hornet sportabout (sw)\"", ";"], "ru": ["select", "t1.accelerate", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.make", "=", "\"amc hornet sportabout (sw)\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.accelerate", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.make", "=", "value", ";"], "ru": ["select", "t1.accelerate", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.make", "=", "value", ";"]}}, {"id": "D_0113", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';", "ru": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';"}, "question": {"en": "How much does the car accelerate that makes amc hornet sportabout (sw)?", "ru": "Насколько может разогнаться модель amc hornet sportabout (sw)?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"amc hornet sportabout (sw)\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"amc hornet sportabout (sw)\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "much", "does", "the", "car", "accelerate", "that", "makes", "amc", "hornet", "sportabout", "(", "sw", ")", "?"], "ru": ["Насколько", "может", "разогнаться", "модель", "amc", "hornet", "sportabout", "(", "sw", ")", "?"]}, "query_toks": {"en": ["select", "t1.accelerate", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.make", "=", "\"amc hornet sportabout (sw)\"", ";"], "ru": ["select", "t1.accelerate", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.make", "=", "\"amc hornet sportabout (sw)\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.accelerate", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.make", "=", "value", ";"], "ru": ["select", "t1.accelerate", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.make", "=", "value", ";"]}}, {"id": "D_0114", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "ru": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'Китай';"}, "question": {"en": "How many car makers are there in france?", "ru": "Сколько автопроизводителей в Китае?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"france\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Китай\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "car", "makers", "are", "there", "in", "france", "?"], "ru": ["Сколько", "автопроизводителей", "в", "Китае", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1.country", "=", "t2.countryid", "where", "t2.countryname", "=", "\"france\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1.country", "=", "t2.countryid", "where", "t2.countryname", "=", "\"Китай\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1.country", "=", "t2.countryid", "where", "t2.countryname", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1.country", "=", "t2.countryid", "where", "t2.countryname", "=", "value", ";"]}}, {"id": "D_0115", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "ru": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'Китай';"}, "question": {"en": "What is the number of makers of care in France?", "ru": "Сколько производителей автомобилей есть в Китае?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"france\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Китай\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "number", "of", "makers", "of", "care", "in", "France", "?"], "ru": ["Сколько", "производителей", "автомобилей", "есть", "в", "Китае", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1.country", "=", "t2.countryid", "where", "t2.countryname", "=", "\"france\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1.country", "=", "t2.countryid", "where", "t2.countryname", "=", "\"Китай\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1.country", "=", "t2.countryid", "where", "t2.countryname", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "countries", "as", "t2", "on", "t1.country", "=", "t2.countryid", "where", "t2.countryname", "=", "value", ";"]}}, {"id": "D_0116", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';", "ru": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'Чехия';"}, "question": {"en": "How many car models are produced in the usa?", "ru": "Сколько моделей автомобилей производится в Чехии?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"usa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Чехия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "car", "models", "are", "produced", "in", "the", "usa", "?"], "ru": ["Сколько", "моделей", "автомобилей", "производится", "в", "Чехии", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "join", "countries", "as", "t3", "on", "t2.country", "=", "t3.countryid", "where", "t3.countryname", "=", "\"usa\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "join", "countries", "as", "t3", "on", "t2.country", "=", "t3.countryid", "where", "t3.countryname", "=", "\"Чехия\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "join", "countries", "as", "t3", "on", "t2.country", "=", "t3.countryid", "where", "t3.countryname", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "join", "countries", "as", "t3", "on", "t2.country", "=", "t3.countryid", "where", "t3.countryname", "=", "value", ";"]}}, {"id": "D_0117", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';", "ru": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'Чехия';"}, "question": {"en": "What is the count of the car models produced in the United States?", "ru": "Сколько моделей автомобилей произведено в Чехии?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"usa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Чехия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "count", "of", "the", "car", "models", "produced", "in", "the", "United", "States", "?"], "ru": ["Сколько", "моделей", "автомобилей", "произведено", "в", "Чехии", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "join", "countries", "as", "t3", "on", "t2.country", "=", "t3.countryid", "where", "t3.countryname", "=", "\"usa\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "join", "countries", "as", "t3", "on", "t2.country", "=", "t3.countryid", "where", "t3.countryname", "=", "\"Чехия\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "join", "countries", "as", "t3", "on", "t2.country", "=", "t3.countryid", "where", "t3.countryname", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "model_list", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.maker", "=", "t2.id", "join", "countries", "as", "t3", "on", "t2.country", "=", "t3.countryid", "where", "t3.countryname", "=", "value", ";"]}}, {"id": "D_0118", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "ru": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;"}, "question": {"en": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?", "ru": "Сколько в среднем расходуется км на литр (км/л) у автомобилей с 4 цилиндрами?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "miles", "per", "gallon", "(", "mpg", ")", "of", "the", "cars", "with", "4", "cylinders", "?"], "ru": ["Сколько", "в", "среднем", "расходуется", "км", "на", "литр", "(", "км/л", ")", "у", "автомобилей", "с", "4", "цилиндрами", "?"]}, "query_toks": {"en": ["select", "avg", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "4", ";"], "ru": ["select", "avg", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "4", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "4", ";"], "ru": ["select", "avg", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "4", ";"]}}, {"id": "D_0119", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "ru": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;"}, "question": {"en": "What is the average miles per gallon of all the cards with 4 cylinders?", "ru": "Какое среднее значение километров на литр для всех автомобилей с 4 цилиндрами?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "miles", "per", "gallon", "of", "all", "the", "cards", "with", "4", "cylinders", "?"], "ru": ["Какое", "среднее", "значение", "километров", "на", "литр", "для", "всех", "автомобилей", "с", "4", "цилиндрами", "?"]}, "query_toks": {"en": ["select", "avg", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "4", ";"], "ru": ["select", "avg", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "4", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "4", ";"], "ru": ["select", "avg", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "4", ";"]}}, {"id": "D_0120", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974;", "ru": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974;"}, "question": {"en": "What is the smallest weight of the car produced with 8 cylinders on 1974 ?", "ru": "Какой наименьший вес у автомобиля с 8 цилиндрами, выпущенного в 1974 году?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 8.0, null], "and", [false, 2, [0, [0, 23, false], null], 1974.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 8.0, null], "and", [false, 2, [0, [0, 23, false], null], 1974.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "smallest", "weight", "of", "the", "car", "produced", "with", "8", "cylinders", "on", "1974", "?"], "ru": ["Какой", "наименьший", "вес", "у", "автомобиля", "с", "8", "цилиндрами", ",", "выпущенного", "в", "1974", "году", "?"]}, "query_toks": {"en": ["select", "min", "(", "weight", ")", "from", "cars_data", "where", "cylinders", "=", "8", "and", "year", "=", "1974", ";"], "ru": ["select", "min", "(", "weight", ")", "from", "cars_data", "where", "cylinders", "=", "8", "and", "year", "=", "1974", ";"]}, "query_toks_no_values": {"en": ["select", "min", "(", "weight", ")", "from", "cars_data", "where", "cylinders", "=", "8", "and", "year", "=", "1974", ";"], "ru": ["select", "min", "(", "weight", ")", "from", "cars_data", "where", "cylinders", "=", "8", "and", "year", "=", "1974", ";"]}}, {"id": "D_0121", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974;", "ru": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974;"}, "question": {"en": "What is the minimum weight of the car with 8 cylinders produced in 1974 ?", "ru": "Какой минимальный вес у автомобиля с 8 цилиндрами 1974 года выпуска?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 8.0, null], "and", [false, 2, [0, [0, 23, false], null], 1974.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 21, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 8.0, null], "and", [false, 2, [0, [0, 23, false], null], 1974.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "minimum", "weight", "of", "the", "car", "with", "8", "cylinders", "produced", "in", "1974", "?"], "ru": ["Какой", "минимальный", "вес", "у", "автомобиля", "с", "8", "цилиндрами", "1974", "года", "выпуска", "?"]}, "query_toks": {"en": ["select", "min", "(", "weight", ")", "from", "cars_data", "where", "cylinders", "=", "8", "and", "year", "=", "1974", ";"], "ru": ["select", "min", "(", "weight", ")", "from", "cars_data", "where", "cylinders", "=", "8", "and", "year", "=", "1974", ";"]}, "query_toks_no_values": {"en": ["select", "min", "(", "weight", ")", "from", "cars_data", "where", "cylinders", "=", "8", "and", "year", "=", "1974", ";"], "ru": ["select", "min", "(", "weight", ")", "from", "cars_data", "where", "cylinders", "=", "8", "and", "year", "=", "1974", ";"]}}, {"id": "D_0122", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Maker ,  Model FROM MODEL_LIST;", "ru": "SELECT Maker ,  Model FROM MODEL_LIST;"}, "question": {"en": "What are all the makers and models?", "ru": "Какие все производители и модели?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "all", "the", "makers", "and", "models", "?"], "ru": ["Какие", "все", "производители", "и", "модели", "?"]}, "query_toks": {"en": ["select", "maker", ",", "model", "from", "model_list", ";"], "ru": ["select", "maker", ",", "model", "from", "model_list", ";"]}, "query_toks_no_values": {"en": ["select", "maker", ",", "model", "from", "model_list", ";"], "ru": ["select", "maker", ",", "model", "from", "model_list", ";"]}}, {"id": "D_0123", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Maker ,  Model FROM MODEL_LIST;", "ru": "SELECT Maker ,  Model FROM MODEL_LIST;"}, "question": {"en": "What are the makers and models?", "ru": "Какие производители и модели?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "makers", "and", "models", "?"], "ru": ["Какие", "производители", "и", "модели", "?"]}, "query_toks": {"en": ["select", "maker", ",", "model", "from", "model_list", ";"], "ru": ["select", "maker", ",", "model", "from", "model_list", ";"]}, "query_toks_no_values": {"en": ["select", "maker", ",", "model", "from", "model_list", ";"], "ru": ["select", "maker", ",", "model", "from", "model_list", ";"]}}, {"id": "D_0124", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "ru": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;"}, "question": {"en": "What are the countries having at least one car maker? List name and id.", "ru": "В каких странах есть хотя бы один производитель автомобилей? Показать название и id."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "countries", "having", "at", "least", "one", "car", "maker", "?", "List", "name", "and", "id", "."], "ru": ["В", "каких", "странах", "есть", "хотя", "бы", "один", "производитель", "автомобилей", "?", "Показать", "название", "и", "id", "."]}, "query_toks": {"en": ["select", "t1.countryname", ",", "t1.countryid", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">=", "1", ";"], "ru": ["select", "t1.countryname", ",", "t1.countryid", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">=", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.countryname", ",", "t1.countryid", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">=", "1", ";"], "ru": ["select", "t1.countryname", ",", "t1.countryid", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">=", "1", ";"]}}, {"id": "D_0125", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "ru": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;"}, "question": {"en": "What are the names and ids of all countries with at least one car maker?", "ru": "Какие названия и id всех стран, где есть хотя бы один производитель автомобилей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "and", "ids", "of", "all", "countries", "with", "at", "least", "one", "car", "maker", "?"], "ru": ["Какие", "названия", "и", "id", "всех", "стран", ",", "где", "есть", "хотя", "бы", "один", "производитель", "автомобилей", "?"]}, "query_toks": {"en": ["select", "t1.countryname", ",", "t1.countryid", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">=", "1", ";"], "ru": ["select", "t1.countryname", ",", "t1.countryid", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">=", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.countryname", ",", "t1.countryid", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">=", "1", ";"], "ru": ["select", "t1.countryname", ",", "t1.countryid", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">=", "1", ";"]}}, {"id": "D_0126", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "ru": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;"}, "question": {"en": "What is the number of the cars with horsepower more than 150?", "ru": "Сколько всего автомобилей мощностью более 150 лошадиных сил?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 20, false], null], 150.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 20, false], null], 150.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "number", "of", "the", "cars", "with", "horsepower", "more", "than", "150", "?"], "ru": ["Сколько", "всего", "автомобилей", "мощностью", "более", "150", "лошадиных", "сил", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "horsepower", ">", "150", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "horsepower", ">", "150", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "horsepower", ">", "150", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "horsepower", ">", "150", ";"]}}, {"id": "D_0127", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "ru": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;"}, "question": {"en": "What is the number of cars with a horsepower greater than 150?", "ru": "Какое количество машин мощностью более 150 лошадиных сил?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 20, false], null], 150.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 20, false], null], 150.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "number", "of", "cars", "with", "a", "horsepower", "greater", "than", "150", "?"], "ru": ["Какое", "количество", "машин", "мощностью", "более", "150", "лошадиных", "сил", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "horsepower", ">", "150", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "horsepower", ">", "150", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "horsepower", ">", "150", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "horsepower", ">", "150", ";"]}}, {"id": "D_0128", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "ru": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;"}, "question": {"en": "What is the average weight of cars each year?", "ru": "Каков средний вес автомобилей каждый год?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]], [0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]], [0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "weight", "of", "cars", "each", "year", "?"], "ru": ["Каков", "средний", "вес", "автомобилей", "каждый", "год", "?"]}, "query_toks": {"en": ["select", "avg", "(", "weight", ")", ",", "year", "from", "cars_data", "group", "by", "year", ";"], "ru": ["select", "avg", "(", "weight", ")", ",", "year", "from", "cars_data", "group", "by", "year", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "weight", ")", ",", "year", "from", "cars_data", "group", "by", "year", ";"], "ru": ["select", "avg", "(", "weight", ")", ",", "year", "from", "cars_data", "group", "by", "year", ";"]}}, {"id": "D_0129", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "ru": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;"}, "question": {"en": "What is the average weight and year for each year?", "ru": "Каков средний вес и год для каждого года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]], [0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 21, false], null]], [0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "weight", "and", "year", "for", "each", "year", "?"], "ru": ["Каков", "средний", "вес", "и", "год", "для", "каждого", "года", "?"]}, "query_toks": {"en": ["select", "avg", "(", "weight", ")", ",", "year", "from", "cars_data", "group", "by", "year", ";"], "ru": ["select", "avg", "(", "weight", ")", ",", "year", "from", "cars_data", "group", "by", "year", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "weight", ")", ",", "year", "from", "cars_data", "group", "by", "year", ";"], "ru": ["select", "avg", "(", "weight", ")", ",", "year", "from", "cars_data", "group", "by", "year", ";"]}}, {"id": "D_0130", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "ru": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'Южная Америка' GROUP BY T1.CountryName HAVING count(*)  >=  3;"}, "question": {"en": "Which countries in europe have at least 3 car manufacturers?", "ru": "В каких странах Южной Америки есть как минимум 3 производителя автомобилей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"europe\"", null]], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Южная Америка\"", null]], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "countries", "in", "europe", "have", "at", "least", "3", "car", "manufacturers", "?"], "ru": ["В", "каких", "странах", "Южной", "Америки", "есть", "как", "минимум", "3", "производителя", "автомобилей", "?"]}, "query_toks": {"en": ["select", "t1.countryname", "from", "countries", "as", "t1", "join", "continents", "as", "t2", "on", "t1.continent", "=", "t2.contid", "join", "car_makers", "as", "t3", "on", "t1.countryid", "=", "t3.country", "where", "t2.continent", "=", "\"europe\"", "group", "by", "t1.countryname", "having", "count", "(", "*", ")", ">=", "3", ";"], "ru": ["select", "t1.countryname", "from", "countries", "as", "t1", "join", "continents", "as", "t2", "on", "t1.continent", "=", "t2.contid", "join", "car_makers", "as", "t3", "on", "t1.countryid", "=", "t3.country", "where", "t2.continent", "=", "\"Южная Америка\"", "group", "by", "t1.countryname", "having", "count", "(", "*", ")", ">=", "3", ";"]}, "query_toks_no_values": {"en": ["select", "t1.countryname", "from", "countries", "as", "t1", "join", "continents", "as", "t2", "on", "t1.continent", "=", "t2.contid", "join", "car_makers", "as", "t3", "on", "t1.countryid", "=", "t3.country", "where", "t2.continent", "=", "value", "group", "by", "t1.countryname", "having", "count", "(", "*", ")", ">=", "3", ";"], "ru": ["select", "t1.countryname", "from", "countries", "as", "t1", "join", "continents", "as", "t2", "on", "t1.continent", "=", "t2.contid", "join", "car_makers", "as", "t3", "on", "t1.countryid", "=", "t3.country", "where", "t2.continent", "=", "value", "group", "by", "t1.countryname", "having", "count", "(", "*", ")", ">=", "3", ";"]}}, {"id": "D_0131", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "ru": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'Южная Америка' GROUP BY T1.CountryName HAVING count(*)  >=  3;"}, "question": {"en": "What are the names of all European countries with at least 3 manufacturers?", "ru": "Как называются все южноамериканские страны, в которых есть как минимум 3 производителя?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"europe\"", null]], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Южная Америка\"", null]], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "all", "European", "countries", "with", "at", "least", "3", "manufacturers", "?"], "ru": ["Как", "называются", "все", "южноамериканские", "страны", ",", "в", "которых", "есть", "как", "минимум", "3", "производителя", "?"]}, "query_toks": {"en": ["select", "t1.countryname", "from", "countries", "as", "t1", "join", "continents", "as", "t2", "on", "t1.continent", "=", "t2.contid", "join", "car_makers", "as", "t3", "on", "t1.countryid", "=", "t3.country", "where", "t2.continent", "=", "\"europe\"", "group", "by", "t1.countryname", "having", "count", "(", "*", ")", ">=", "3", ";"], "ru": ["select", "t1.countryname", "from", "countries", "as", "t1", "join", "continents", "as", "t2", "on", "t1.continent", "=", "t2.contid", "join", "car_makers", "as", "t3", "on", "t1.countryid", "=", "t3.country", "where", "t2.continent", "=", "\"Южная Америка\"", "group", "by", "t1.countryname", "having", "count", "(", "*", ")", ">=", "3", ";"]}, "query_toks_no_values": {"en": ["select", "t1.countryname", "from", "countries", "as", "t1", "join", "continents", "as", "t2", "on", "t1.continent", "=", "t2.contid", "join", "car_makers", "as", "t3", "on", "t1.countryid", "=", "t3.country", "where", "t2.continent", "=", "value", "group", "by", "t1.countryname", "having", "count", "(", "*", ")", ">=", "3", ";"], "ru": ["select", "t1.countryname", "from", "countries", "as", "t1", "join", "continents", "as", "t2", "on", "t1.continent", "=", "t2.contid", "join", "car_makers", "as", "t3", "on", "t1.countryid", "=", "t3.country", "where", "t2.continent", "=", "value", "group", "by", "t1.countryname", "having", "count", "(", "*", ")", ">=", "3", ";"]}}, {"id": "D_0132", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "ru": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;"}, "question": {"en": "What is the maximum horsepower and the make of the car models with 3 cylinders?", "ru": "Какая максимальная мощность и марка у моделей автомобилей с 3 цилиндрами?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "maximum", "horsepower", "and", "the", "make", "of", "the", "car", "models", "with", "3", "cylinders", "?"], "ru": ["Какая", "максимальная", "мощность", "и", "марка", "у", "моделей", "автомобилей", "с", "3", "цилиндрами", "?"]}, "query_toks": {"en": ["select", "t2.horsepower", ",", "t1.make", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.cylinders", "=", "3", "order", "by", "t2.horsepower", "desc", "limit", "1", ";"], "ru": ["select", "t2.horsepower", ",", "t1.make", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.cylinders", "=", "3", "order", "by", "t2.horsepower", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.horsepower", ",", "t1.make", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.cylinders", "=", "3", "order", "by", "t2.horsepower", "desc", "limit", "1", ";"], "ru": ["select", "t2.horsepower", ",", "t1.make", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.cylinders", "=", "3", "order", "by", "t2.horsepower", "desc", "limit", "1", ";"]}}, {"id": "D_0133", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "ru": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;"}, "question": {"en": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?", "ru": "Какая максимальная мощность у моделей с 3 цилиндрами и какой они марки?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "largest", "amount", "of", "horsepower", "for", "the", "models", "with", "3", "cylinders", "and", "what", "make", "is", "it", "?"], "ru": ["Какая", "максимальная", "мощность", "у", "моделей", "с", "3", "цилиндрами", "и", "какой", "они", "марки", "?"]}, "query_toks": {"en": ["select", "t2.horsepower", ",", "t1.make", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.cylinders", "=", "3", "order", "by", "t2.horsepower", "desc", "limit", "1", ";"], "ru": ["select", "t2.horsepower", ",", "t1.make", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.cylinders", "=", "3", "order", "by", "t2.horsepower", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.horsepower", ",", "t1.make", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.cylinders", "=", "3", "order", "by", "t2.horsepower", "desc", "limit", "1", ";"], "ru": ["select", "t2.horsepower", ",", "t1.make", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.cylinders", "=", "3", "order", "by", "t2.horsepower", "desc", "limit", "1", ";"]}}, {"id": "D_0134", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;", "ru": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;"}, "question": {"en": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.", "ru": "Какая модель экономит бензин больше всего? То есть имеет максимальное количество километров на литр."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 17, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 17, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "model", "saves", "the", "most", "gasoline", "?", "That", "is", "to", "say", ",", "have", "the", "maximum", "miles", "per", "gallon", "."], "ru": ["Какая", "модель", "экономит", "бензин", "больше", "всего", "?", "То", "есть", "имеет", "максимальное", "количество", "километров", "на", "литр", "."]}, "query_toks": {"en": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.mpg", "desc", "limit", "1", ";"], "ru": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.mpg", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.mpg", "desc", "limit", "1", ";"], "ru": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.mpg", "desc", "limit", "1", ";"]}}, {"id": "D_0135", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;", "ru": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;"}, "question": {"en": "What is the car model with the highest mpg ?", "ru": "Какая модель автомобиля с максимальным расходом топлива на литр?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 17, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 17, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "car", "model", "with", "the", "highest", "mpg", "?"], "ru": ["Какая", "модель", "автомобиля", "с", "максимальным", "расходом", "топлива", "на", "литр", "?"]}, "query_toks": {"en": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.mpg", "desc", "limit", "1", ";"], "ru": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.mpg", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.mpg", "desc", "limit", "1", ";"], "ru": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "order", "by", "t2.mpg", "desc", "limit", "1", ";"]}}, {"id": "D_0136", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;", "ru": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;"}, "question": {"en": "What is the average horsepower of the cars before 1980?", "ru": "Какова средняя мощность автомобилей до 1980 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 20, false], null]]]], "where": [[false, 4, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 20, false], null]]]], "where": [[false, 4, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "horsepower", "of", "the", "cars", "before", "1980", "?"], "ru": ["Какова", "средняя", "мощность", "автомобилей", "до", "1980", "года", "?"]}, "query_toks": {"en": ["select", "avg", "(", "horsepower", ")", "from", "cars_data", "where", "year", "<", "1980", ";"], "ru": ["select", "avg", "(", "horsepower", ")", "from", "cars_data", "where", "year", "<", "1980", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "horsepower", ")", "from", "cars_data", "where", "year", "<", "1980", ";"], "ru": ["select", "avg", "(", "horsepower", ")", "from", "cars_data", "where", "year", "<", "1980", ";"]}}, {"id": "D_0137", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "select avg(horsepower) from cars_data where year  <  1980;", "ru": "select avg(horsepower) from cars_data where year  <  1980;"}, "question": {"en": "What is the average horsepower for all cars produced before 1980 ?", "ru": "Какая средняя мощность в лошадиных силах у всех автомобилей, выпущенных до 1980 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 20, false], null]]]], "where": [[false, 4, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 20, false], null]]]], "where": [[false, 4, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "horsepower", "for", "all", "cars", "produced", "before", "1980", "?"], "ru": ["Какая", "средняя", "мощность", "в", "лошадиных", "силах", "у", "всех", "автомобилей", ",", "выпущенных", "до", "1980", "года", "?"]}, "query_toks": {"en": ["select", "avg", "(", "horsepower", ")", "from", "cars_data", "where", "year", "<", "1980", ";"], "ru": ["select", "avg", "(", "horsepower", ")", "from", "cars_data", "where", "year", "<", "1980", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "horsepower", ")", "from", "cars_data", "where", "year", "<", "1980", ";"], "ru": ["select", "avg", "(", "horsepower", ")", "from", "cars_data", "where", "year", "<", "1980", ";"]}}, {"id": "D_0138", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';", "ru": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';"}, "question": {"en": "What is the average edispl of the cars of model volvo?", "ru": "Какой средний edispl у автомобилей модели Volvo?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[5, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"volvo\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[5, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"volvo\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "edispl", "of", "the", "cars", "of", "model", "volvo", "?"], "ru": ["Какой", "средний", "edispl", "у", "автомобилей", "модели", "Volvo", "?"]}, "query_toks": {"en": ["select", "avg", "(", "t2.edispl", ")", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t1.model", "=", "\"volvo\"", ";"], "ru": ["select", "avg", "(", "t2.edispl", ")", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t1.model", "=", "\"volvo\"", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "t2.edispl", ")", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t1.model", "=", "value", ";"], "ru": ["select", "avg", "(", "t2.edispl", ")", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t1.model", "=", "value", ";"]}}, {"id": "D_0139", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';", "ru": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';"}, "question": {"en": "What is the average edispl for all volvos?", "ru": "Какое среднее значение edispl для всех автомобилей Volvo?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[5, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"volvo\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[5, [0, [0, 19, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"volvo\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "edispl", "for", "all", "volvos", "?"], "ru": ["Какое", "среднее", "значение", "edispl", "для", "всех", "автомобилей", "Volvo", "?"]}, "query_toks": {"en": ["select", "avg", "(", "t2.edispl", ")", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t1.model", "=", "\"volvo\"", ";"], "ru": ["select", "avg", "(", "t2.edispl", ")", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t1.model", "=", "\"volvo\"", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "t2.edispl", ")", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t1.model", "=", "value", ";"], "ru": ["select", "avg", "(", "t2.edispl", ")", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t1.model", "=", "value", ";"]}}, {"id": "D_0140", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "ru": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;"}, "question": {"en": "What is the maximum accelerate for different number of cylinders?", "ru": "Какое максимальное ускорение для разного количества цилиндров?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 22, false], null]], [0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 22, false], null]], [0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "maximum", "accelerate", "for", "different", "number", "of", "cylinders", "?"], "ru": ["Какое", "максимальное", "ускорение", "для", "разного", "количества", "цилиндров", "?"]}, "query_toks": {"en": ["select", "max", "(", "accelerate", ")", ",", "cylinders", "from", "cars_data", "group", "by", "cylinders", ";"], "ru": ["select", "max", "(", "accelerate", ")", ",", "cylinders", "from", "cars_data", "group", "by", "cylinders", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "accelerate", ")", ",", "cylinders", "from", "cars_data", "group", "by", "cylinders", ";"], "ru": ["select", "max", "(", "accelerate", ")", ",", "cylinders", "from", "cars_data", "group", "by", "cylinders", ";"]}}, {"id": "D_0141", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "ru": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;"}, "question": {"en": "What is the maximum accelerate for all the different cylinders?", "ru": "Какое максимальное ускорение для всех цилиндров?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 22, false], null]], [0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 22, false], null]], [0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "maximum", "accelerate", "for", "all", "the", "different", "cylinders", "?"], "ru": ["Какое", "максимальное", "ускорение", "для", "всех", "цилиндров", "?"]}, "query_toks": {"en": ["select", "max", "(", "accelerate", ")", ",", "cylinders", "from", "cars_data", "group", "by", "cylinders", ";"], "ru": ["select", "max", "(", "accelerate", ")", ",", "cylinders", "from", "cars_data", "group", "by", "cylinders", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "accelerate", ")", ",", "cylinders", "from", "cars_data", "group", "by", "cylinders", ";"], "ru": ["select", "max", "(", "accelerate", ")", ",", "cylinders", "from", "cars_data", "group", "by", "cylinders", ";"]}}, {"id": "D_0142", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which model has the most version(make) of cars?", "ru": "Какая модель имеет наибольшее количество версий (марок) автомобилей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "model", "has", "the", "most", "version", "(", "make", ")", "of", "cars", "?"], "ru": ["Какая", "модель", "имеет", "наибольшее", "количество", "версий", "(", "марок", ")", "автомобилей", "?"]}, "query_toks": {"en": ["select", "model", "from", "car_names", "group", "by", "model", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "model", "from", "car_names", "group", "by", "model", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "model", "from", "car_names", "group", "by", "model", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "model", "from", "car_names", "group", "by", "model", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0143", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What model has the most different versions?", "ru": "Какая модель имеет самые разные версии?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "model", "has", "the", "most", "different", "versions", "?"], "ru": ["Какая", "модель", "имеет", "самые", "разные", "версии", "?"]}, "query_toks": {"en": ["select", "model", "from", "car_names", "group", "by", "model", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "model", "from", "car_names", "group", "by", "model", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "model", "from", "car_names", "group", "by", "model", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "model", "from", "car_names", "group", "by", "model", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0144", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "ru": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;"}, "question": {"en": "How many cars have more than 4 cylinders?", "ru": "Сколько автомобилей имеют более 4 цилиндров?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "cars", "have", "more", "than", "4", "cylinders", "?"], "ru": ["Сколько", "автомобилей", "имеют", "более", "4", "цилиндров", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "4", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "4", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "4", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "4", ";"]}}, {"id": "D_0145", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "ru": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;"}, "question": {"en": "What is the number of cars with more than 4 cylinders?", "ru": "Какое количество автомобилей с более чем 4 цилиндрами?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "number", "of", "cars", "with", "more", "than", "4", "cylinders", "?"], "ru": ["Какое", "количество", "автомобилей", "с", "более", "чем", "4", "цилиндрами", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "4", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "4", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "4", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "4", ";"]}}, {"id": "D_0146", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "ru": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;"}, "question": {"en": "how many cars were produced in 1980?", "ru": "сколько машин было выпущено в 1980 году?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["how", "many", "cars", "were", "produced", "in", "1980", "?"], "ru": ["сколько", "машин", "было", "выпущено", "в", "1980", "году", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "year", "=", "1980", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "year", "=", "1980", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "year", "=", "1980", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "year", "=", "1980", ";"]}}, {"id": "D_0147", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "ru": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;"}, "question": {"en": "In 1980, how many cars were made?", "ru": "Сколько машин было произведено в 1980 году?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["In", "1980", ",", "how", "many", "cars", "were", "made", "?"], "ru": ["Сколько", "машин", "было", "произведено", "в", "1980", "году", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "year", "=", "1980", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "year", "=", "1980", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "year", "=", "1980", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "year", "=", "1980", ";"]}}, {"id": "D_0148", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "ru": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'АвтоВАЗ';"}, "question": {"en": "How many car models were produced by the maker with full name American Motor Company?", "ru": "Сколько моделей автомобилей выпустил производитель с полным названием АвтоВАЗ?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"American Motor Company\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"АвтоВАЗ\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "car", "models", "were", "produced", "by", "the", "maker", "with", "full", "name", "American", "Motor", "Company", "?"], "ru": ["Сколько", "моделей", "автомобилей", "выпустил", "производитель", "с", "полным", "названием", "АвтоВАЗ", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "where", "t1.fullname", "=", "\"American Motor Company\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "where", "t1.fullname", "=", "\"АвтоВАЗ\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "where", "t1.fullname", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "where", "t1.fullname", "=", "value", ";"]}}, {"id": "D_0149", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "ru": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'АвтоВАЗ';"}, "question": {"en": "What is the number of car models created by the car maker American Motor Company?", "ru": "Сколько моделей автомобилей выпускает автопроизводитель АвтоВАЗ?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"American Motor Company\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"АвтоВАЗ\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "number", "of", "car", "models", "created", "by", "the", "car", "maker", "American", "Motor", "Company", "?"], "ru": ["Сколько", "моделей", "автомобилей", "выпускает", "автопроизводитель", "АвтоВАЗ", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "where", "t1.fullname", "=", "\"American Motor Company\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "where", "t1.fullname", "=", "\"АвтоВАЗ\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "where", "t1.fullname", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "where", "t1.fullname", "=", "value", ";"]}}, {"id": "D_0150", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "ru": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;"}, "question": {"en": "Which makers designed more than 3 car models? List full name and the id.", "ru": "Какие производители разработали более трех моделей автомобилей? Показать полное имя и id."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "makers", "designed", "more", "than", "3", "car", "models", "?", "List", "full", "name", "and", "the", "id", "."], "ru": ["Какие", "производители", "разработали", "более", "трех", "моделей", "автомобилей", "?", "Показать", "полное", "имя", "и", "id", "."]}, "query_toks": {"en": ["select", "t1.fullname", ",", "t1.id", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"], "ru": ["select", "t1.fullname", ",", "t1.id", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"]}, "query_toks_no_values": {"en": ["select", "t1.fullname", ",", "t1.id", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"], "ru": ["select", "t1.fullname", ",", "t1.id", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"]}}, {"id": "D_0151", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "ru": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;"}, "question": {"en": "What are the names and ids of all makers with more than 3 models?", "ru": "Как называются и какие id у всех производителей, выпускающих более трех моделей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "and", "ids", "of", "all", "makers", "with", "more", "than", "3", "models", "?"], "ru": ["Как", "называются", "и", "какие", "id", "у", "всех", "производителей", ",", "выпускающих", "более", "трех", "моделей", "?"]}, "query_toks": {"en": ["select", "t1.fullname", ",", "t1.id", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"], "ru": ["select", "t1.fullname", ",", "t1.id", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"]}, "query_toks_no_values": {"en": ["select", "t1.fullname", ",", "t1.id", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"], "ru": ["select", "t1.fullname", ",", "t1.id", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"]}}, {"id": "D_0152", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;", "ru": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;"}, "question": {"en": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?", "ru": "Какие разные модели выпускает производитель с полным названием General Motors или которые весят более 3500?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3], ["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"General Motors\"", null], "or", [false, 3, [0, [0, 21, false], null], 3500.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3], ["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"General Motors\"", null], "or", [false, 3, [0, [0, 21, false], null], 3500.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "distinctive", "models", "are", "produced", "by", "maker", "with", "the", "full", "name", "General", "Motors", "or", "weighing", "more", "than", "3500", "?"], "ru": ["Какие", "разные", "модели", "выпускает", "производитель", "с", "полным", "названием", "General", "Motors", "или", "которые", "весят", "более", "3500", "?"]}, "query_toks": {"en": ["select", "distinct", "t2.model", "from", "car_names", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "car_makers", "as", "t3", "on", "t2.maker", "=", "t3.id", "join", "cars_data", "as", "t4", "on", "t1.makeid", "=", "t4.id", "where", "t3.fullname", "=", "\"General Motors\"", "or", "t4.weight", ">", "3500", ";"], "ru": ["select", "distinct", "t2.model", "from", "car_names", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "car_makers", "as", "t3", "on", "t2.maker", "=", "t3.id", "join", "cars_data", "as", "t4", "on", "t1.makeid", "=", "t4.id", "where", "t3.fullname", "=", "\"General Motors\"", "or", "t4.weight", ">", "3500", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t2.model", "from", "car_names", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "car_makers", "as", "t3", "on", "t2.maker", "=", "t3.id", "join", "cars_data", "as", "t4", "on", "t1.makeid", "=", "t4.id", "where", "t3.fullname", "=", "value", "or", "t4.weight", ">", "3500", ";"], "ru": ["select", "distinct", "t2.model", "from", "car_names", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "car_makers", "as", "t3", "on", "t2.maker", "=", "t3.id", "join", "cars_data", "as", "t4", "on", "t1.makeid", "=", "t4.id", "where", "t3.fullname", "=", "value", "or", "t4.weight", ">", "3500", ";"]}}, {"id": "D_0153", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;", "ru": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;"}, "question": {"en": "What are the different models created by either the car maker General Motors or weighed more than 3500?", "ru": "Какие разные модели созданы автопроизводителем General Motors или весят более 3500?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3], ["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"General Motors\"", null], "or", [false, 3, [0, [0, 21, false], null], 3500.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3], ["table_unit", 2], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"General Motors\"", null], "or", [false, 3, [0, [0, 21, false], null], 3500.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "different", "models", "created", "by", "either", "the", "car", "maker", "General", "Motors", "or", "weighed", "more", "than", "3500", "?"], "ru": ["Какие", "разные", "модели", "созданы", "автопроизводителем", "General", "Motors", "или", "весят", "более", "3500", "?"]}, "query_toks": {"en": ["select", "distinct", "t2.model", "from", "car_names", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "car_makers", "as", "t3", "on", "t2.maker", "=", "t3.id", "join", "cars_data", "as", "t4", "on", "t1.makeid", "=", "t4.id", "where", "t3.fullname", "=", "\"General Motors\"", "or", "t4.weight", ">", "3500", ";"], "ru": ["select", "distinct", "t2.model", "from", "car_names", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "car_makers", "as", "t3", "on", "t2.maker", "=", "t3.id", "join", "cars_data", "as", "t4", "on", "t1.makeid", "=", "t4.id", "where", "t3.fullname", "=", "\"General Motors\"", "or", "t4.weight", ">", "3500", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t2.model", "from", "car_names", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "car_makers", "as", "t3", "on", "t2.maker", "=", "t3.id", "join", "cars_data", "as", "t4", "on", "t1.makeid", "=", "t4.id", "where", "t3.fullname", "=", "value", "or", "t4.weight", ">", "3500", ";"], "ru": ["select", "distinct", "t2.model", "from", "car_names", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "car_makers", "as", "t3", "on", "t2.maker", "=", "t3.id", "join", "cars_data", "as", "t4", "on", "t1.makeid", "=", "t4.id", "where", "t3.fullname", "=", "value", "or", "t4.weight", ">", "3500", ";"]}}, {"id": "D_0154", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "select distinct year from cars_data where weight between 3000 and 4000;", "ru": "select distinct year from cars_data where weight between 3000 and 4000;"}, "question": {"en": "In which years cars were produced weighing no less than 3000 and no more than 4000 ?", "ru": "В какие годы выпускались автомобили массой не менее 3000 и не более 4000?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [[false, 1, [0, [0, 21, false], null], 3000.0, 4000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [[false, 1, [0, [0, 21, false], null], 3000.0, 4000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["In", "which", "years", "cars", "were", "produced", "weighing", "no", "less", "than", "3000", "and", "no", "more", "than", "4000", "?"], "ru": ["В", "какие", "годы", "выпускались", "автомобили", "массой", "не", "менее", "3000", "и", "не", "более", "4000", "?"]}, "query_toks": {"en": ["select", "distinct", "year", "from", "cars_data", "where", "weight", "between", "3000", "and", "4000", ";"], "ru": ["select", "distinct", "year", "from", "cars_data", "where", "weight", "between", "3000", "and", "4000", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "year", "from", "cars_data", "where", "weight", "between", "3000", "and", "4000", ";"], "ru": ["select", "distinct", "year", "from", "cars_data", "where", "weight", "between", "3000", "and", "4000", ";"]}}, {"id": "D_0155", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "select distinct year from cars_data where weight between 3000 and 4000;", "ru": "select distinct year from cars_data where weight between 3000 and 4000;"}, "question": {"en": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?", "ru": "В какие разные годы выпускались автомобили весом менее 4000, а также автомобили весом более 3000?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [[false, 1, [0, [0, 21, false], null], 3000.0, 4000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [[false, 1, [0, [0, 21, false], null], 3000.0, 4000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "different", "years", "in", "which", "there", "were", "cars", "produced", "that", "weighed", "less", "than", "4000", "and", "also", "cars", "that", "weighted", "more", "than", "3000", "?"], "ru": ["В", "какие", "разные", "годы", "выпускались", "автомобили", "весом", "менее", "4000", ",", "а", "также", "автомобили", "весом", "более", "3000", "?"]}, "query_toks": {"en": ["select", "distinct", "year", "from", "cars_data", "where", "weight", "between", "3000", "and", "4000", ";"], "ru": ["select", "distinct", "year", "from", "cars_data", "where", "weight", "between", "3000", "and", "4000", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "year", "from", "cars_data", "where", "weight", "between", "3000", "and", "4000", ";"], "ru": ["select", "distinct", "year", "from", "cars_data", "where", "weight", "between", "3000", "and", "4000", ";"]}}, {"id": "D_0156", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "ru": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;"}, "question": {"en": "What is the horsepower of the car with the largest accelerate?", "ru": "Какая мощность у машины с наибольшим разгоном?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 22, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 22, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "horsepower", "of", "the", "car", "with", "the", "largest", "accelerate", "?"], "ru": ["Какая", "мощность", "у", "машины", "с", "наибольшим", "разгоном", "?"]}, "query_toks": {"en": ["select", "t1.horsepower", "from", "cars_data", "as", "t1", "order", "by", "t1.accelerate", "desc", "limit", "1", ";"], "ru": ["select", "t1.horsepower", "from", "cars_data", "as", "t1", "order", "by", "t1.accelerate", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.horsepower", "from", "cars_data", "as", "t1", "order", "by", "t1.accelerate", "desc", "limit", "1", ";"], "ru": ["select", "t1.horsepower", "from", "cars_data", "as", "t1", "order", "by", "t1.accelerate", "desc", "limit", "1", ";"]}}, {"id": "D_0157", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "ru": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;"}, "question": {"en": "What is the horsepower of the car with the greatest accelerate?", "ru": "Какая мощность у машины с наибольшим разгоном?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 22, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 22, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "horsepower", "of", "the", "car", "with", "the", "greatest", "accelerate", "?"], "ru": ["Какая", "мощность", "у", "машины", "с", "наибольшим", "разгоном", "?"]}, "query_toks": {"en": ["select", "t1.horsepower", "from", "cars_data", "as", "t1", "order", "by", "t1.accelerate", "desc", "limit", "1", ";"], "ru": ["select", "t1.horsepower", "from", "cars_data", "as", "t1", "order", "by", "t1.accelerate", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.horsepower", "from", "cars_data", "as", "t1", "order", "by", "t1.accelerate", "desc", "limit", "1", ";"], "ru": ["select", "t1.horsepower", "from", "cars_data", "as", "t1", "order", "by", "t1.accelerate", "desc", "limit", "1", ";"]}}, {"id": "D_0158", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;", "ru": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;"}, "question": {"en": "For model volvo, how many cylinders does the car with the least accelerate have?", "ru": "Для модели Volvo, сколько цилиндров у автомобиля с наименьшим ускорением?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"volvo\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 22, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"volvo\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 22, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["For", "model", "volvo", ",", "how", "many", "cylinders", "does", "the", "car", "with", "the", "least", "accelerate", "have", "?"], "ru": ["Для", "модели", "Volvo", ",", "сколько", "цилиндров", "у", "автомобиля", "с", "наименьшим", "ускорением", "?"]}, "query_toks": {"en": ["select", "t1.cylinders", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.model", "=", "\"volvo\"", "order", "by", "t1.accelerate", "asc", "limit", "1", ";"], "ru": ["select", "t1.cylinders", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.model", "=", "\"volvo\"", "order", "by", "t1.accelerate", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.cylinders", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.model", "=", "value", "order", "by", "t1.accelerate", "asc", "limit", "1", ";"], "ru": ["select", "t1.cylinders", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.model", "=", "value", "order", "by", "t1.accelerate", "asc", "limit", "1", ";"]}}, {"id": "D_0159", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;", "ru": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;"}, "question": {"en": "For a volvo model, how many cylinders does the version with least accelerate have?", "ru": "Сколько цилиндров у модели Volvo с наименьшим ускорением?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"volvo\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 22, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"volvo\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 22, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["For", "a", "volvo", "model", ",", "how", "many", "cylinders", "does", "the", "version", "with", "least", "accelerate", "have", "?"], "ru": ["Сколько", "цилиндров", "у", "модели", "Volvo", "с", "наименьшим", "ускорением", "?"]}, "query_toks": {"en": ["select", "t1.cylinders", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.model", "=", "\"volvo\"", "order", "by", "t1.accelerate", "asc", "limit", "1", ";"], "ru": ["select", "t1.cylinders", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.model", "=", "\"volvo\"", "order", "by", "t1.accelerate", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.cylinders", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.model", "=", "value", "order", "by", "t1.accelerate", "asc", "limit", "1", ";"], "ru": ["select", "t1.cylinders", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.model", "=", "value", "order", "by", "t1.accelerate", "asc", "limit", "1", ";"]}}, {"id": "D_0160", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );", "ru": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );"}, "question": {"en": "How many cars have a larger accelerate than the car with the largest horsepower?", "ru": "Сколько автомобилей имеют больший разгон, чем автомобиль с самой большой мощностью?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 22, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 22, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "cars", "have", "a", "larger", "accelerate", "than", "the", "car", "with", "the", "largest", "horsepower", "?"], "ru": ["Сколько", "автомобилей", "имеют", "больший", "разгон", ",", "чем", "автомобиль", "с", "самой", "большой", "мощностью", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "accelerate", ">", "(", "select", "accelerate", "from", "cars_data", "order", "by", "horsepower", "desc", "limit", "1", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "accelerate", ">", "(", "select", "accelerate", "from", "cars_data", "order", "by", "horsepower", "desc", "limit", "1", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "accelerate", ">", "(", "select", "accelerate", "from", "cars_data", "order", "by", "horsepower", "desc", "limit", "1", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "accelerate", ">", "(", "select", "accelerate", "from", "cars_data", "order", "by", "horsepower", "desc", "limit", "1", ")", ";"]}}, {"id": "D_0161", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );", "ru": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );"}, "question": {"en": "What is the number of cars with a greater accelerate than the one with the most horsepower?", "ru": "Какое количество автомобилей демонстрирует более высокий разгон, чем автомобиль с наибольшим количеством лошадиных сил?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 22, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 22, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "number", "of", "cars", "with", "a", "greater", "accelerate", "than", "the", "one", "with", "the", "most", "horsepower", "?"], "ru": ["Какое", "количество", "автомобилей", "демонстрирует", "более", "высокий", "разгон", ",", "чем", "автомобиль", "с", "наибольшим", "количеством", "лошадиных", "сил", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "accelerate", ">", "(", "select", "accelerate", "from", "cars_data", "order", "by", "horsepower", "desc", "limit", "1", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "accelerate", ">", "(", "select", "accelerate", "from", "cars_data", "order", "by", "horsepower", "desc", "limit", "1", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "accelerate", ">", "(", "select", "accelerate", "from", "cars_data", "order", "by", "horsepower", "desc", "limit", "1", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "accelerate", ">", "(", "select", "accelerate", "from", "cars_data", "order", "by", "horsepower", "desc", "limit", "1", ")", ";"]}}, {"id": "D_0162", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2;", "ru": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2;"}, "question": {"en": "How many countries has more than 2 car makers ?", "ru": "В скольких странах более двух автопроизводителей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "countries", "has", "more", "than", "2", "car", "makers", "?"], "ru": ["В", "скольких", "странах", "более", "двух", "автопроизводителей", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "2", ";"], "ru": ["select", "count", "(", "*", ")", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "2", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "2", ";"], "ru": ["select", "count", "(", "*", ")", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "2", ";"]}}, {"id": "D_0163", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2;", "ru": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2;"}, "question": {"en": "What is the number of countries with more than 2 car makers ?", "ru": "В каком количестве стран имеется более двух автопроизводителей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "number", "of", "countries", "with", "more", "than", "2", "car", "makers", "?"], "ru": ["В", "каком", "количестве", "стран", "имеется", "более", "двух", "автопроизводителей", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "2", ";"], "ru": ["select", "count", "(", "*", ")", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "2", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "2", ";"], "ru": ["select", "count", "(", "*", ")", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "2", ";"]}}, {"id": "D_0164", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "ru": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;"}, "question": {"en": "How many cars has over 6 cylinders?", "ru": "Сколько автомобилей имеет более 6 цилиндров?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 6.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 6.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "cars", "has", "over", "6", "cylinders", "?"], "ru": ["Сколько", "автомобилей", "имеет", "более", "6", "цилиндров", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "6", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "6", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "6", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "6", ";"]}}, {"id": "D_0165", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "ru": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;"}, "question": {"en": "What is the number of carsw ith over 6 cylinders?", "ru": "Сколько автомобилей с более чем 6 цилиндрами?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 6.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 18, false], null], 6.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "number", "of", "carsw", "ith", "over", "6", "cylinders", "?"], "ru": ["Сколько", "автомобилей", "с", "более", "чем", "6", "цилиндрами", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "6", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "6", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "6", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cars_data", "where", "cylinders", ">", "6", ";"]}}, {"id": "D_0166", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "ru": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;"}, "question": {"en": "For the cars with 4 cylinders, which model has the largest horsepower?", "ru": "Какая модель имеет самую большую мощность для автомобилей с 4 цилиндрами?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["For", "the", "cars", "with", "4", "cylinders", ",", "which", "model", "has", "the", "largest", "horsepower", "?"], "ru": ["Какая", "модель", "имеет", "самую", "большую", "мощность", "для", "автомобилей", "с", "4", "цилиндрами", "?"]}, "query_toks": {"en": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.cylinders", "=", "4", "order", "by", "t2.horsepower", "desc", "limit", "1", ";"], "ru": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.cylinders", "=", "4", "order", "by", "t2.horsepower", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.cylinders", "=", "4", "order", "by", "t2.horsepower", "desc", "limit", "1", ";"], "ru": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.cylinders", "=", "4", "order", "by", "t2.horsepower", "desc", "limit", "1", ";"]}}, {"id": "D_0167", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "ru": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;"}, "question": {"en": "For all of the 4 cylinder cars, which model has the most horsepower?", "ru": "Какая модель из всех 4-цилиндровых автомобилей имеет наибольшую мощность?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["For", "all", "of", "the", "4", "cylinder", "cars", ",", "which", "model", "has", "the", "most", "horsepower", "?"], "ru": ["Какая", "модель", "из", "всех", "4-цилиндровых", "автомобилей", "имеет", "наибольшую", "мощность", "?"]}, "query_toks": {"en": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.cylinders", "=", "4", "order", "by", "t2.horsepower", "desc", "limit", "1", ";"], "ru": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.cylinders", "=", "4", "order", "by", "t2.horsepower", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.cylinders", "=", "4", "order", "by", "t2.horsepower", "desc", "limit", "1", ";"], "ru": ["select", "t1.model", "from", "car_names", "as", "t1", "join", "cars_data", "as", "t2", "on", "t1.makeid", "=", "t2.id", "where", "t2.cylinders", "=", "4", "order", "by", "t2.horsepower", "desc", "limit", "1", ";"]}}, {"id": "D_0168", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;", "ru": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;"}, "question": {"en": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.", "ru": "Среди автомобилей с более чем самой низкой мощностью у каких не более 3 цилиндров? Покажи марку автомобиля и id производителя."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 3, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 6, [0, [0, 18, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 3, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 6, [0, [0, 18, false], null], 3.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Among", "the", "cars", "with", "more", "than", "lowest", "horsepower", ",", "which", "ones", "do", "not", "have", "more", "than", "3", "cylinders", "?", "List", "the", "car", "makeid", "and", "make", "name", "."], "ru": ["Среди", "автомобилей", "с", "более", "чем", "самой", "низкой", "мощностью", "у", "каких", "не", "более", "3", "цилиндров", "?", "Покажи", "марку", "автомобиля", "и", "id", "производителя", "."]}, "query_toks": {"en": ["select", "t2.makeid", ",", "t2.make", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.horsepower", ">", "(", "select", "min", "(", "horsepower", ")", "from", "cars_data", ")", "and", "t1.cylinders", "<=", "3", ";"], "ru": ["select", "t2.makeid", ",", "t2.make", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.horsepower", ">", "(", "select", "min", "(", "horsepower", ")", "from", "cars_data", ")", "and", "t1.cylinders", "<=", "3", ";"]}, "query_toks_no_values": {"en": ["select", "t2.makeid", ",", "t2.make", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.horsepower", ">", "(", "select", "min", "(", "horsepower", ")", "from", "cars_data", ")", "and", "t1.cylinders", "<=", "3", ";"], "ru": ["select", "t2.makeid", ",", "t2.make", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.horsepower", ">", "(", "select", "min", "(", "horsepower", ")", "from", "cars_data", ")", "and", "t1.cylinders", "<=", "3", ";"]}}, {"id": "D_0169", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;", "ru": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;"}, "question": {"en": "Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?", "ru": "Среди автомобилей, которые не имеют минимальной мощности, каковы id производителей и названия всех автомобилей с менее чем 4 цилиндрами?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 3, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 4, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 3, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[2, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 4, [0, [0, 18, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Among", "the", "cars", "that", "do", "not", "have", "the", "minimum", "horsepower", ",", "what", "are", "the", "make", "ids", "and", "names", "of", "all", "those", "with", "less", "than", "4", "cylinders", "?"], "ru": ["Среди", "автомобилей", ",", "которые", "не", "имеют", "минимальной", "мощности", ",", "каковы", "id", "производителей", "и", "названия", "всех", "автомобилей", "с", "менее", "чем", "4", "цилиндрами", "?"]}, "query_toks": {"en": ["select", "t2.makeid", ",", "t2.make", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.horsepower", ">", "(", "select", "min", "(", "horsepower", ")", "from", "cars_data", ")", "and", "t1.cylinders", "<", "4", ";"], "ru": ["select", "t2.makeid", ",", "t2.make", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.horsepower", ">", "(", "select", "min", "(", "horsepower", ")", "from", "cars_data", ")", "and", "t1.cylinders", "<", "4", ";"]}, "query_toks_no_values": {"en": ["select", "t2.makeid", ",", "t2.make", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.horsepower", ">", "(", "select", "min", "(", "horsepower", ")", "from", "cars_data", ")", "and", "t1.cylinders", "<", "4", ";"], "ru": ["select", "t2.makeid", ",", "t2.make", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t1.horsepower", ">", "(", "select", "min", "(", "horsepower", ")", "from", "cars_data", ")", "and", "t1.cylinders", "<", "4", ";"]}}, {"id": "D_0170", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980;", "ru": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980;"}, "question": {"en": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?", "ru": "Какое максимальное количество километров на литр у автомобиля с 8 цилиндрами или произведенного до 1980 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 8.0, null], "or", [false, 4, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 8.0, null], "or", [false, 4, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "maximum", "miles", "per", "gallon", "of", "the", "car", "with", "8", "cylinders", "or", "produced", "before", "1980", "?"], "ru": ["Какое", "максимальное", "количество", "километров", "на", "литр", "у", "автомобиля", "с", "8", "цилиндрами", "или", "произведенного", "до", "1980", "года", "?"]}, "query_toks": {"en": ["select", "max", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "8", "or", "year", "<", "1980", ";"], "ru": ["select", "max", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "8", "or", "year", "<", "1980", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "8", "or", "year", "<", "1980", ";"], "ru": ["select", "max", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "8", "or", "year", "<", "1980", ";"]}}, {"id": "D_0171", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980;", "ru": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980;"}, "question": {"en": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?", "ru": "Каков максимальный расход топлива для автомобилей с 8 цилиндрами или автомобилей, выпущенных до 1980 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 8.0, null], "or", [false, 4, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], 8.0, null], "or", [false, 4, [0, [0, 23, false], null], 1980.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "maximum", "mpg", "of", "the", "cars", "that", "had", "8", "cylinders", "or", "that", "were", "produced", "before", "1980", "?"], "ru": ["Каков", "максимальный", "расход", "топлива", "для", "автомобилей", "с", "8", "цилиндрами", "или", "автомобилей", ",", "выпущенных", "до", "1980", "года", "?"]}, "query_toks": {"en": ["select", "max", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "8", "or", "year", "<", "1980", ";"], "ru": ["select", "max", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "8", "or", "year", "<", "1980", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "8", "or", "year", "<", "1980", ";"], "ru": ["select", "max", "(", "mpg", ")", "from", "cars_data", "where", "cylinders", "=", "8", "or", "year", "<", "1980", ";"]}}, {"id": "D_0172", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';", "ru": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';"}, "question": {"en": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?", "ru": "Какие модели легче 3500, но не производятся Ford Motor Company?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], 3500.0, null], "and", [false, 7, [0, [0, 8, false], null], "\"Ford Motor Company\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], 3500.0, null], "and", [false, 7, [0, [0, 8, false], null], "\"Ford Motor Company\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "models", "are", "lighter", "than", "3500", "but", "not", "built", "by", "the", "'Ford", "Motor", "Company", "'", "?"], "ru": ["Какие", "модели", "легче", "3500", ",", "но", "не", "производятся", "Ford", "Motor", "Company", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "cars_data", "as", "t3", "on", "t2.makeid", "=", "t3.id", "join", "car_makers", "as", "t4", "on", "t1.maker", "=", "t4.id", "where", "t3.weight", "<", "3500", "and", "t4.fullname", "!=", "\"Ford Motor Company\"", ";"], "ru": ["select", "distinct", "t1.model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "cars_data", "as", "t3", "on", "t2.makeid", "=", "t3.id", "join", "car_makers", "as", "t4", "on", "t1.maker", "=", "t4.id", "where", "t3.weight", "<", "3500", "and", "t4.fullname", "!=", "\"Ford Motor Company\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "cars_data", "as", "t3", "on", "t2.makeid", "=", "t3.id", "join", "car_makers", "as", "t4", "on", "t1.maker", "=", "t4.id", "where", "t3.weight", "<", "3500", "and", "t4.fullname", "!=", "value", ";"], "ru": ["select", "distinct", "t1.model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "cars_data", "as", "t3", "on", "t2.makeid", "=", "t3.id", "join", "car_makers", "as", "t4", "on", "t1.maker", "=", "t4.id", "where", "t3.weight", "<", "3500", "and", "t4.fullname", "!=", "value", ";"]}}, {"id": "D_0173", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';", "ru": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';"}, "question": {"en": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?", "ru": "Какие модели легче 3500, но не были произведены Ford Motor Company?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], 3500.0, null], "and", [false, 7, [0, [0, 8, false], null], "\"Ford Motor Company\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 4], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 16, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [true, [[0, [0, [0, 12, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], 3500.0, null], "and", [false, 7, [0, [0, 8, false], null], "\"Ford Motor Company\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "different", "models", "wthat", "are", "lighter", "than", "3500", "but", "were", "not", "built", "by", "the", "Ford", "Motor", "Company", "?"], "ru": ["Какие", "модели", "легче", "3500", ",", "но", "не", "были", "произведены", "Ford", "Motor", "Company", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "cars_data", "as", "t3", "on", "t2.makeid", "=", "t3.id", "join", "car_makers", "as", "t4", "on", "t1.maker", "=", "t4.id", "where", "t3.weight", "<", "3500", "and", "t4.fullname", "!=", "\"Ford Motor Company\"", ";"], "ru": ["select", "distinct", "t1.model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "cars_data", "as", "t3", "on", "t2.makeid", "=", "t3.id", "join", "car_makers", "as", "t4", "on", "t1.maker", "=", "t4.id", "where", "t3.weight", "<", "3500", "and", "t4.fullname", "!=", "\"Ford Motor Company\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "cars_data", "as", "t3", "on", "t2.makeid", "=", "t3.id", "join", "car_makers", "as", "t4", "on", "t1.maker", "=", "t4.id", "where", "t3.weight", "<", "3500", "and", "t4.fullname", "!=", "value", ";"], "ru": ["select", "distinct", "t1.model", "from", "model_list", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.model", "=", "t2.model", "join", "cars_data", "as", "t3", "on", "t2.makeid", "=", "t3.id", "join", "car_makers", "as", "t4", "on", "t1.maker", "=", "t4.id", "where", "t3.weight", "<", "3500", "and", "t4.fullname", "!=", "value", ";"]}}, {"id": "D_0174", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "ru": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;"}, "question": {"en": "What are the name of the countries where there is not a single car maker?", "ru": "Как называются страны, где нет ни одного автопроизводителя?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["What", "are", "the", "name", "of", "the", "countries", "where", "there", "is", "not", "a", "single", "car", "maker", "?"], "ru": ["Как", "называются", "страны", ",", "где", "нет", "ни", "одного", "автопроизводителя", "?"]}, "query_toks": {"en": ["select", "countryname", "from", "countries", "except", "select", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", ";"], "ru": ["select", "countryname", "from", "countries", "except", "select", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", ";"]}, "query_toks_no_values": {"en": ["select", "countryname", "from", "countries", "except", "select", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", ";"], "ru": ["select", "countryname", "from", "countries", "except", "select", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", ";"]}}, {"id": "D_0175", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "ru": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;"}, "question": {"en": "What are the names of the countries with no car makers?", "ru": "Как называются страны, в которых нет производителей автомобилей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "countries", "with", "no", "car", "makers", "?"], "ru": ["Как", "называются", "страны", ",", "в", "которых", "нет", "производителей", "автомобилей", "?"]}, "query_toks": {"en": ["select", "countryname", "from", "countries", "except", "select", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", ";"], "ru": ["select", "countryname", "from", "countries", "except", "select", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", ";"]}, "query_toks_no_values": {"en": ["select", "countryname", "from", "countries", "except", "select", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", ";"], "ru": ["select", "countryname", "from", "countries", "except", "select", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", ";"]}}, {"id": "D_0176", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;", "ru": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;"}, "question": {"en": "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .", "ru": "Какие производители автомобилей производят не менее 2 моделей и более 3 автомобилей? Показать id и марку машины."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Which", "are", "the", "car", "makers", "which", "produce", "at", "least", "2", "models", "and", "more", "than", "3", "car", "makers", "?", "List", "the", "id", "and", "the", "maker", "."], "ru": ["Какие", "производители", "автомобилей", "производят", "не", "менее", "2", "моделей", "и", "более", "3", "автомобилей", "?", "Показать", "id", "и", "марку", "машины", "."]}, "query_toks": {"en": ["select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">=", "2", "intersect", "select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"], "ru": ["select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">=", "2", "intersect", "select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"]}, "query_toks_no_values": {"en": ["select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">=", "2", "intersect", "select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"], "ru": ["select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">=", "2", "intersect", "select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"]}}, {"id": "D_0177", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;", "ru": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;"}, "question": {"en": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?", "ru": "Каковы id и марки машин всех автопроизводителей, которые производят как минимум 2 модели и более 3 автомобилей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "ids", "and", "makers", "of", "all", "car", "makers", "that", "produce", "at", "least", "2", "models", "and", "make", "more", "than", "3", "cars", "?"], "ru": ["Каковы", "id", "и", "марки", "машин", "всех", "автопроизводителей", ",", "которые", "производят", "как", "минимум", "2", "модели", "и", "более", "3", "автомобилей", "?"]}, "query_toks": {"en": ["select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">=", "2", "intersect", "select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"], "ru": ["select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">=", "2", "intersect", "select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"]}, "query_toks_no_values": {"en": ["select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">=", "2", "intersect", "select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"], "ru": ["select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">=", "2", "intersect", "select", "t1.id", ",", "t1.maker", "from", "car_makers", "as", "t1", "join", "model_list", "as", "t2", "on", "t1.id", "=", "t2.maker", "join", "car_names", "as", "t3", "on", "t2.model", "=", "t3.model", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "3", ";"]}}, {"id": "D_0178", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';", "ru": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';"}, "question": {"en": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?", "ru": "Каковы id и названия стран, в которых имеется более 3 производителей автомобилей или которые производят модель «Fiat»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"fiat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"fiat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}}, "question_toks": {"en": ["What", "are", "the", "id", "and", "names", "of", "the", "countries", "which", "have", "more", "than", "3", "car", "makers", "or", "produce", "the", "'fiat", "'", "model", "?"], "ru": ["Каковы", "id", "и", "названия", "стран", ",", "в", "которых", "имеется", "более", "3", "производителей", "автомобилей", "или", "которые", "производят", "модель", "«", "Fiat", "»", "?"]}, "query_toks": {"en": ["select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "3", "union", "select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "join", "model_list", "as", "t3", "on", "t2.id", "=", "t3.maker", "where", "t3.model", "=", "\"fiat\"", ";"], "ru": ["select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "3", "union", "select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "join", "model_list", "as", "t3", "on", "t2.id", "=", "t3.maker", "where", "t3.model", "=", "\"fiat\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "3", "union", "select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "join", "model_list", "as", "t3", "on", "t2.id", "=", "t3.maker", "where", "t3.model", "=", "value", ";"], "ru": ["select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "3", "union", "select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "join", "model_list", "as", "t3", "on", "t2.id", "=", "t3.maker", "where", "t3.model", "=", "value", ";"]}}, {"id": "D_0179", "db_id": "car_1", "source": "spider-dev", "type": "dev", "query": {"en": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';", "ru": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';"}, "question": {"en": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?", "ru": "Каковы id и названия всех стран, в которых либо более трех производителей автомобилей, либо производятся модели Fiat?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"fiat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 6, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"fiat\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}}, "question_toks": {"en": ["What", "are", "the", "ids", "and", "names", "of", "all", "countries", "that", "either", "have", "more", "than", "3", "car", "makers", "or", "produce", "fiat", "model", "?"], "ru": ["Каковы", "id", "и", "названия", "всех", "стран", ",", "в", "которых", "либо", "более", "трех", "производителей", "автомобилей", ",", "либо", "производятся", "модели", "Fiat", "?"]}, "query_toks": {"en": ["select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "3", "union", "select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "join", "model_list", "as", "t3", "on", "t2.id", "=", "t3.maker", "where", "t3.model", "=", "\"fiat\"", ";"], "ru": ["select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "3", "union", "select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "join", "model_list", "as", "t3", "on", "t2.id", "=", "t3.maker", "where", "t3.model", "=", "\"fiat\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "3", "union", "select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "join", "model_list", "as", "t3", "on", "t2.id", "=", "t3.maker", "where", "t3.model", "=", "value", ";"], "ru": ["select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "group", "by", "t1.countryid", "having", "count", "(", "*", ")", ">", "3", "union", "select", "t1.countryid", ",", "t1.countryname", "from", "countries", "as", "t1", "join", "car_makers", "as", "t2", "on", "t1.countryid", "=", "t2.country", "join", "model_list", "as", "t3", "on", "t2.id", "=", "t3.maker", "where", "t3.model", "=", "value", ";"]}}, {"id": "D_0180", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\";", "ru": "SELECT Country FROM AIRLINES WHERE Airline  =  \"S7\";"}, "question": {"en": "Which country does Airline \"JetBlue Airways\" belong to?", "ru": "К какой стране принадлежит авиакомпания S7?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"S7\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "country", "does", "Airline", "``", "JetBlue", "Airways", "''", "belong", "to", "?"], "ru": ["К", "какой", "стране", "принадлежит", "авиакомпания", "S7", "?"]}, "query_toks": {"en": ["select", "country", "from", "airlines", "where", "airline", "=", "\"JetBlue Airways\"", ";"], "ru": ["select", "country", "from", "airlines", "where", "airline", "=", "\"S7\"", ";"]}, "query_toks_no_values": {"en": ["select", "country", "from", "airlines", "where", "airline", "=", "value", ";"], "ru": ["select", "country", "from", "airlines", "where", "airline", "=", "value", ";"]}}, {"id": "D_0181", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\";", "ru": "SELECT Country FROM AIRLINES WHERE Airline  =  \"S7\";"}, "question": {"en": "What country is Jetblue Airways affiliated with?", "ru": "Из какой страны авиакомпания S7?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"S7\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "country", "is", "Jetblue", "Airways", "affiliated", "with", "?"], "ru": ["Из", "какой", "страны", "авиакомпания", "S7", "?"]}, "query_toks": {"en": ["select", "country", "from", "airlines", "where", "airline", "=", "\"JetBlue Airways\"", ";"], "ru": ["select", "country", "from", "airlines", "where", "airline", "=", "\"S7\"", ";"]}, "query_toks_no_values": {"en": ["select", "country", "from", "airlines", "where", "airline", "=", "value", ";"], "ru": ["select", "country", "from", "airlines", "where", "airline", "=", "value", ";"]}}, {"id": "D_0182", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\";", "ru": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\";"}, "question": {"en": "What is the abbreviation of Airline \"JetBlue Airways\"?", "ru": "Какое сокращение у авиакомпании JetBlue Airways?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "abbreviation", "of", "Airline", "``", "JetBlue", "Airways", "''", "?"], "ru": ["Какое", "сокращение", "у", "авиакомпании", "JetBlue", "Airways", "?"]}, "query_toks": {"en": ["select", "abbreviation", "from", "airlines", "where", "airline", "=", "\"JetBlue Airways\"", ";"], "ru": ["select", "abbreviation", "from", "airlines", "where", "airline", "=", "\"JetBlue Airways\"", ";"]}, "query_toks_no_values": {"en": ["select", "abbreviation", "from", "airlines", "where", "airline", "=", "value", ";"], "ru": ["select", "abbreviation", "from", "airlines", "where", "airline", "=", "value", ";"]}}, {"id": "D_0183", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\";", "ru": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\";"}, "question": {"en": "Which abbreviation corresponds to Jetblue Airways?", "ru": "Какая аббревиатура соответствует Jetblue Airways?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "abbreviation", "corresponds", "to", "Jetblue", "Airways", "?"], "ru": ["Какая", "аббревиатура", "соответствует", "Jetblue", "Airways", "?"]}, "query_toks": {"en": ["select", "abbreviation", "from", "airlines", "where", "airline", "=", "\"JetBlue Airways\"", ";"], "ru": ["select", "abbreviation", "from", "airlines", "where", "airline", "=", "\"JetBlue Airways\"", ";"]}, "query_toks_no_values": {"en": ["select", "abbreviation", "from", "airlines", "where", "airline", "=", "value", ";"], "ru": ["select", "abbreviation", "from", "airlines", "where", "airline", "=", "value", ";"]}}, {"id": "D_0184", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\";", "ru": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"Россия\";"}, "question": {"en": "List all airline names and their abbreviations in \"USA\".", "ru": "Перечислите все названия авиакомпаний и их сокращения в «России»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Россия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "all", "airline", "names", "and", "their", "abbreviations", "in", "``", "USA", "''", "."], "ru": ["Перечислите", "все", "названия", "авиакомпаний", "и", "их", "сокращения", "в", "«", "России", "»", "."]}, "query_toks": {"en": ["select", "airline", ",", "abbreviation", "from", "airlines", "where", "country", "=", "\"USA\"", ";"], "ru": ["select", "airline", ",", "abbreviation", "from", "airlines", "where", "country", "=", "\"Россия\"", ";"]}, "query_toks_no_values": {"en": ["select", "airline", ",", "abbreviation", "from", "airlines", "where", "country", "=", "value", ";"], "ru": ["select", "airline", ",", "abbreviation", "from", "airlines", "where", "country", "=", "value", ";"]}}, {"id": "D_0185", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\";", "ru": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"Россия\";"}, "question": {"en": "What are the airline names and abbreviations for airlines in the USA?", "ru": "Какие названия авиакомпаний и аббревиатуры авиакомпаний в России?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Россия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "airline", "names", "and", "abbreviations", "for", "airlines", "in", "the", "USA", "?"], "ru": ["Какие", "названия", "авиакомпаний", "и", "аббревиатуры", "авиакомпаний", "в", "России", "?"]}, "query_toks": {"en": ["select", "airline", ",", "abbreviation", "from", "airlines", "where", "country", "=", "\"USA\"", ";"], "ru": ["select", "airline", ",", "abbreviation", "from", "airlines", "where", "country", "=", "\"Россия\"", ";"]}, "query_toks_no_values": {"en": ["select", "airline", ",", "abbreviation", "from", "airlines", "where", "country", "=", "value", ";"], "ru": ["select", "airline", ",", "abbreviation", "from", "airlines", "where", "country", "=", "value", ";"]}}, {"id": "D_0186", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\";", "ru": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Анапа\";"}, "question": {"en": "List the airport code and name in the city of Anthony.", "ru": "Укажите код и название аэропорта в городе Анапа."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Anthony\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Анапа\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "airport", "code", "and", "name", "in", "the", "city", "of", "Anthony", "."], "ru": ["Укажите", "код", "и", "название", "аэропорта", "в", "городе", "Анапа", "."]}, "query_toks": {"en": ["select", "airportcode", ",", "airportname", "from", "airports", "where", "city", "=", "\"Anthony\"", ";"], "ru": ["select", "airportcode", ",", "airportname", "from", "airports", "where", "city", "=", "\"Анапа\"", ";"]}, "query_toks_no_values": {"en": ["select", "airportcode", ",", "airportname", "from", "airports", "where", "city", "=", "value", ";"], "ru": ["select", "airportcode", ",", "airportname", "from", "airports", "where", "city", "=", "value", ";"]}}, {"id": "D_0187", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\";", "ru": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Анапа\";"}, "question": {"en": "Give the airport code and airport name corresonding to the city Anthony.", "ru": "Укажите код аэропорта и название аэропорта, соответствующие городу Анапа."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Anthony\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Анапа\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "airport", "code", "and", "airport", "name", "corresonding", "to", "the", "city", "Anthony", "."], "ru": ["Укажите", "код", "аэропорта", "и", "название", "аэропорта", ",", "соответствующие", "городу", "Анапа", "."]}, "query_toks": {"en": ["select", "airportcode", ",", "airportname", "from", "airports", "where", "city", "=", "\"Anthony\"", ";"], "ru": ["select", "airportcode", ",", "airportname", "from", "airports", "where", "city", "=", "\"Анапа\"", ";"]}, "query_toks_no_values": {"en": ["select", "airportcode", ",", "airportname", "from", "airports", "where", "city", "=", "value", ";"], "ru": ["select", "airportcode", ",", "airportname", "from", "airports", "where", "city", "=", "value", ";"]}}, {"id": "D_0188", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM AIRLINES;", "ru": "SELECT count(*) FROM AIRLINES;"}, "question": {"en": "How many airlines do we have?", "ru": "Сколько у нас авиакомпаний?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "airlines", "do", "we", "have", "?"], "ru": ["Сколько", "у", "нас", "авиакомпаний", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "airlines", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airlines", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "airlines", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airlines", ";"]}}, {"id": "D_0189", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM AIRLINES;", "ru": "SELECT count(*) FROM AIRLINES;"}, "question": {"en": "What is the total number of airlines?", "ru": "Какое общее количество авиакомпаний?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "total", "number", "of", "airlines", "?"], "ru": ["Какое", "общее", "количество", "авиакомпаний", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "airlines", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airlines", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "airlines", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airlines", ";"]}}, {"id": "D_0190", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM AIRPORTS;", "ru": "SELECT count(*) FROM AIRPORTS;"}, "question": {"en": "How many airports do we have?", "ru": "Сколько у нас аэропортов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "airports", "do", "we", "have", "?"], "ru": ["Сколько", "у", "нас", "аэропортов", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "airports", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airports", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "airports", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airports", ";"]}}, {"id": "D_0191", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM AIRPORTS;", "ru": "SELECT count(*) FROM AIRPORTS;"}, "question": {"en": "Return the number of  airports.", "ru": "Показать количество аэропортов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "number", "of", "airports", "."], "ru": ["Показать", "количество", "аэропортов", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "airports", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airports", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "airports", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airports", ";"]}}, {"id": "D_0192", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM FLIGHTS;", "ru": "SELECT count(*) FROM FLIGHTS;"}, "question": {"en": "How many flights do we have?", "ru": "Сколько у нас рейсов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "flights", "do", "we", "have", "?"], "ru": ["Сколько", "у", "нас", "рейсов", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", ";"]}}, {"id": "D_0193", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM FLIGHTS;", "ru": "SELECT count(*) FROM FLIGHTS;"}, "question": {"en": "Return the number of flights.", "ru": "Показать количество рейсов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "number", "of", "flights", "."], "ru": ["Показать", "количество", "рейсов", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", ";"]}}, {"id": "D_0194", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\";", "ru": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\";"}, "question": {"en": "Which airline has abbreviation 'UAL'?", "ru": "У какой авиакомпании есть аббревиатура UAL?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"UAL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"UAL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "airline", "has", "abbreviation", "'UAL", "'", "?"], "ru": ["У", "какой", "авиакомпании", "есть", "аббревиатура", "UAL", "?"]}, "query_toks": {"en": ["select", "airline", "from", "airlines", "where", "abbreviation", "=", "\"UAL\"", ";"], "ru": ["select", "airline", "from", "airlines", "where", "abbreviation", "=", "\"UAL\"", ";"]}, "query_toks_no_values": {"en": ["select", "airline", "from", "airlines", "where", "abbreviation", "=", "value", ";"], "ru": ["select", "airline", "from", "airlines", "where", "abbreviation", "=", "value", ";"]}}, {"id": "D_0195", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\";", "ru": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\";"}, "question": {"en": "Give the airline with abbreviation 'UAL'.", "ru": "Укажите авиакомпанию с сокращением «UAL»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"UAL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"UAL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "airline", "with", "abbreviation", "'UAL", "'", "."], "ru": ["Укажите", "авиакомпанию", "с", "сокращением", "«", "UAL", "»", "."]}, "query_toks": {"en": ["select", "airline", "from", "airlines", "where", "abbreviation", "=", "\"UAL\"", ";"], "ru": ["select", "airline", "from", "airlines", "where", "abbreviation", "=", "\"UAL\"", ";"]}, "query_toks_no_values": {"en": ["select", "airline", "from", "airlines", "where", "abbreviation", "=", "value", ";"], "ru": ["select", "airline", "from", "airlines", "where", "abbreviation", "=", "value", ";"]}}, {"id": "D_0196", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\";", "ru": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"Россия\";"}, "question": {"en": "How many airlines are from USA?", "ru": "Сколько авиакомпаний из России?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Россия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "airlines", "are", "from", "USA", "?"], "ru": ["Сколько", "авиакомпаний", "из", "России", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "\"USA\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "\"Россия\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "value", ";"]}}, {"id": "D_0197", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\";", "ru": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"Россия\";"}, "question": {"en": "Return the number of airlines in the USA.", "ru": "Показать количество авиакомпаний в России."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Россия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "number", "of", "airlines", "in", "the", "USA", "."], "ru": ["Показать", "количество", "авиакомпаний", "в", "России", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "\"USA\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "\"Россия\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "value", ";"]}}, {"id": "D_0198", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\";", "ru": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Внуково\";"}, "question": {"en": "Which city and country is the Alton airport at?", "ru": "В каком городе и стране находится аэропорт Внуково?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alton\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Внуково\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "city", "and", "country", "is", "the", "Alton", "airport", "at", "?"], "ru": ["В", "каком", "городе", "и", "стране", "находится", "аэропорт", "Внуково", "?"]}, "query_toks": {"en": ["select", "city", ",", "country", "from", "airports", "where", "airportname", "=", "\"Alton\"", ";"], "ru": ["select", "city", ",", "country", "from", "airports", "where", "airportname", "=", "\"Внуково\"", ";"]}, "query_toks_no_values": {"en": ["select", "city", ",", "country", "from", "airports", "where", "airportname", "=", "value", ";"], "ru": ["select", "city", ",", "country", "from", "airports", "where", "airportname", "=", "value", ";"]}}, {"id": "D_0199", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\";", "ru": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Внуково\";"}, "question": {"en": "Give the city and country for the Alton airport.", "ru": "Указать город и страну для аэропорта Внуково."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alton\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Внуково\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "city", "and", "country", "for", "the", "Alton", "airport", "."], "ru": ["Указать", "город", "и", "страну", "для", "аэропорта", "Внуково", "."]}, "query_toks": {"en": ["select", "city", ",", "country", "from", "airports", "where", "airportname", "=", "\"Alton\"", ";"], "ru": ["select", "city", ",", "country", "from", "airports", "where", "airportname", "=", "\"Внуково\"", ";"]}, "query_toks_no_values": {"en": ["select", "city", ",", "country", "from", "airports", "where", "airportname", "=", "value", ";"], "ru": ["select", "city", ",", "country", "from", "airports", "where", "airportname", "=", "value", ";"]}}, {"id": "D_0200", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\";", "ru": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"VKO\";"}, "question": {"en": "What is the airport name for airport 'AKO'?", "ru": "Как называется аэропорт VKO?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"AKO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"VKO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "airport", "name", "for", "airport", "'AKO", "'", "?"], "ru": ["Как", "называется", "аэропорт", "VKO", "?"]}, "query_toks": {"en": ["select", "airportname", "from", "airports", "where", "airportcode", "=", "\"AKO\"", ";"], "ru": ["select", "airportname", "from", "airports", "where", "airportcode", "=", "\"VKO\"", ";"]}, "query_toks_no_values": {"en": ["select", "airportname", "from", "airports", "where", "airportcode", "=", "value", ";"], "ru": ["select", "airportname", "from", "airports", "where", "airportcode", "=", "value", ";"]}}, {"id": "D_0201", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\";", "ru": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"VKO\";"}, "question": {"en": "Return the name of the airport with code 'AKO'.", "ru": "Верните название аэропорта с кодом «VКО»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"AKO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"VKO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "name", "of", "the", "airport", "with", "code", "'AKO", "'", "."], "ru": ["Верните", "название", "аэропорта", "с", "кодом", "«", "VКО", "»", "."]}, "query_toks": {"en": ["select", "airportname", "from", "airports", "where", "airportcode", "=", "\"AKO\"", ";"], "ru": ["select", "airportname", "from", "airports", "where", "airportcode", "=", "\"VKO\"", ";"]}, "query_toks_no_values": {"en": ["select", "airportname", "from", "airports", "where", "airportcode", "=", "value", ";"], "ru": ["select", "airportname", "from", "airports", "where", "airportcode", "=", "value", ";"]}}, {"id": "D_0202", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\";", "ru": "SELECT AirportName FROM AIRPORTS WHERE City = \"Москва\";"}, "question": {"en": "What are airport names at City 'Aberdeen'?", "ru": "Как называются аэропорты в городе Москва?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Москва\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "airport", "names", "at", "City", "'Aberdeen", "'", "?"], "ru": ["Как", "называются", "аэропорты", "в", "городе", "Москва", "?"]}, "query_toks": {"en": ["select", "airportname", "from", "airports", "where", "city", "=", "\"Aberdeen\"", ";"], "ru": ["select", "airportname", "from", "airports", "where", "city", "=", "\"Москва\"", ";"]}, "query_toks_no_values": {"en": ["select", "airportname", "from", "airports", "where", "city", "=", "value", ";"], "ru": ["select", "airportname", "from", "airports", "where", "city", "=", "value", ";"]}}, {"id": "D_0203", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\";", "ru": "SELECT AirportName FROM AIRPORTS WHERE City = \"Москва\";"}, "question": {"en": "What are the names of airports in Aberdeen?", "ru": "Как называются аэропорты в Москве?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Москва\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "airports", "in", "Aberdeen", "?"], "ru": ["Как", "называются", "аэропорты", "в", "Москве", "?"]}, "query_toks": {"en": ["select", "airportname", "from", "airports", "where", "city", "=", "\"Aberdeen\"", ";"], "ru": ["select", "airportname", "from", "airports", "where", "city", "=", "\"Москва\"", ";"]}, "query_toks_no_values": {"en": ["select", "airportname", "from", "airports", "where", "city", "=", "value", ";"], "ru": ["select", "airportname", "from", "airports", "where", "city", "=", "value", ";"]}}, {"id": "D_0204", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\";", "ru": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\";"}, "question": {"en": "How many flights depart from 'APG'?", "ru": "Сколько рейсов отправляется из APG?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "flights", "depart", "from", "'APG", "'", "?"], "ru": ["Сколько", "рейсов", "отправляется", "из", "APG", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", "where", "sourceairport", "=", "\"APG\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "where", "sourceairport", "=", "\"APG\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", "where", "sourceairport", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "where", "sourceairport", "=", "value", ";"]}}, {"id": "D_0205", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\";", "ru": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\";"}, "question": {"en": "Count the number of flights departing from 'APG'.", "ru": "Подсчитайте количество рейсов, вылетающих из «APG»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "flights", "departing", "from", "'APG", "'", "."], "ru": ["Подсчитайте", "количество", "рейсов", ",", "вылетающих", "из", "«", "APG", "»", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", "where", "sourceairport", "=", "\"APG\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "where", "sourceairport", "=", "\"APG\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", "where", "sourceairport", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "where", "sourceairport", "=", "value", ";"]}}, {"id": "D_0206", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\";", "ru": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\";"}, "question": {"en": "How many flights have destination ATO?", "ru": "Сколько рейсов имеет пункт назначения ATO?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"ATO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"ATO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "flights", "have", "destination", "ATO", "?"], "ru": ["Сколько", "рейсов", "имеет", "пункт", "назначения", "ATO", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", "where", "destairport", "=", "\"ATO\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "where", "destairport", "=", "\"ATO\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", "where", "destairport", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "where", "destairport", "=", "value", ";"]}}, {"id": "D_0207", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\";", "ru": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\";"}, "question": {"en": "Count the number of flights into ATO.", "ru": "Подсчитайте количество рейсов в АТО."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"ATO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"ATO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "flights", "into", "ATO", "."], "ru": ["Подсчитайте", "количество", "рейсов", "в", "АТО", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", "where", "destairport", "=", "\"ATO\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "where", "destairport", "=", "\"ATO\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", "where", "destairport", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "where", "destairport", "=", "value", ";"]}}, {"id": "D_0208", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\";", "ru": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Челябинск\";"}, "question": {"en": "How many flights depart from City Aberdeen?", "ru": "Сколько рейсов вылетает из города Челябинск?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Челябинск\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "flights", "depart", "from", "City", "Aberdeen", "?"], "ru": ["Сколько", "рейсов", "вылетает", "из", "города", "Челябинск", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.sourceairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Aberdeen\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.sourceairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Челябинск\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.sourceairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.sourceairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", ";"]}}, {"id": "D_0209", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\";", "ru": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Челябинск\";"}, "question": {"en": "Return the number of flights departing from Aberdeen.", "ru": "Показать количество рейсов, вылетающих из Челябинска."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Челябинск\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "number", "of", "flights", "departing", "from", "Aberdeen", "."], "ru": ["Показать", "количество", "рейсов", ",", "вылетающих", "из", "Челябинска", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.sourceairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Aberdeen\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.sourceairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Челябинск\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.sourceairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.sourceairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", ";"]}}, {"id": "D_0210", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\";", "ru": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Челябинск\";"}, "question": {"en": "How many flights arriving in Aberdeen city?", "ru": "Сколько рейсов прибывает в город Челябинск?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Челябинск\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "flights", "arriving", "in", "Aberdeen", "city", "?"], "ru": ["Сколько", "рейсов", "прибывает", "в", "город", "Челябинск", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Aberdeen\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Челябинск\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", ";"]}}, {"id": "D_0211", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\";", "ru": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Челябинск\";"}, "question": {"en": "Return the number of flights arriving in Aberdeen.", "ru": "Показать количество рейсов, прибывающих в Челябинск."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Челябинск\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "number", "of", "flights", "arriving", "in", "Aberdeen", "."], "ru": ["Показать", "количество", "рейсов", ",", "прибывающих", "в", "Челябинск", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Aberdeen\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Челябинск\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", ";"]}}, {"id": "D_0212", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\";", "ru": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Калининград\" AND T3.City  =  \"Воронеж\";"}, "question": {"en": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?", "ru": "Сколько рейсов отправляется из города Воронеж в город Калининград?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Ashley\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Калининград\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Воронеж\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "flights", "depart", "from", "City", "'Aberdeen", "'", "and", "have", "destination", "City", "'Ashley", "'", "?"], "ru": ["Сколько", "рейсов", "отправляется", "из", "города", "Воронеж", "в", "город", "Калининград", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "join", "airports", "as", "t3", "on", "t1.sourceairport", "=", "t3.airportcode", "where", "t2.city", "=", "\"Ashley\"", "and", "t3.city", "=", "\"Aberdeen\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "join", "airports", "as", "t3", "on", "t1.sourceairport", "=", "t3.airportcode", "where", "t2.city", "=", "\"Калининград\"", "and", "t3.city", "=", "\"Воронеж\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "join", "airports", "as", "t3", "on", "t1.sourceairport", "=", "t3.airportcode", "where", "t2.city", "=", "value", "and", "t3.city", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "join", "airports", "as", "t3", "on", "t1.sourceairport", "=", "t3.airportcode", "where", "t2.city", "=", "value", "and", "t3.city", "=", "value", ";"]}}, {"id": "D_0213", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\";", "ru": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Калининград\" AND T3.City  =  \"Воронеж\";"}, "question": {"en": "How many flights fly from Aberdeen to Ashley?", "ru": "Сколько рейсов летают по направлению Воронеж - Калининград?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Ashley\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Калининград\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Воронеж\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "flights", "fly", "from", "Aberdeen", "to", "Ashley", "?"], "ru": ["Сколько", "рейсов", "летают", "по", "направлению", "Воронеж", "-", "Калининград", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "join", "airports", "as", "t3", "on", "t1.sourceairport", "=", "t3.airportcode", "where", "t2.city", "=", "\"Ashley\"", "and", "t3.city", "=", "\"Aberdeen\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "join", "airports", "as", "t3", "on", "t1.sourceairport", "=", "t3.airportcode", "where", "t2.city", "=", "\"Калининград\"", "and", "t3.city", "=", "\"Воронеж\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "join", "airports", "as", "t3", "on", "t1.sourceairport", "=", "t3.airportcode", "where", "t2.city", "=", "value", "and", "t3.city", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "join", "airports", "as", "t3", "on", "t1.sourceairport", "=", "t3.airportcode", "where", "t2.city", "=", "value", "and", "t3.city", "=", "value", ";"]}}, {"id": "D_0214", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\";", "ru": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"Аэрофлот\";"}, "question": {"en": "How many flights does airline 'JetBlue Airways' have?", "ru": "Сколько рейсов выполняет авиакомпания Аэрофлот?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Аэрофлот\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "flights", "does", "airline", "'JetBlue", "Airways", "'", "have", "?"], "ru": ["Сколько", "рейсов", "выполняет", "авиакомпания", "Аэрофлот", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t1.airline", "=", "t2.uid", "where", "t2.airline", "=", "\"JetBlue Airways\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t1.airline", "=", "t2.uid", "where", "t2.airline", "=", "\"Аэрофлот\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t1.airline", "=", "t2.uid", "where", "t2.airline", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t1.airline", "=", "t2.uid", "where", "t2.airline", "=", "value", ";"]}}, {"id": "D_0215", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\";", "ru": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"Аэрофлот\";"}, "question": {"en": "Give the number of Jetblue Airways flights.", "ru": "Укажите количество рейсов Аэрофлота."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Аэрофлот\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "number", "of", "Jetblue", "Airways", "flights", "."], "ru": ["Укажите", "количество", "рейсов", "Аэрофлота", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t1.airline", "=", "t2.uid", "where", "t2.airline", "=", "\"JetBlue Airways\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t1.airline", "=", "t2.uid", "where", "t2.airline", "=", "\"Аэрофлот\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t1.airline", "=", "t2.uid", "where", "t2.airline", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t1.airline", "=", "t2.uid", "where", "t2.airline", "=", "value", ";"]}}, {"id": "D_0216", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\";", "ru": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"Аэрофлот\" AND T2.DestAirport  =  \"KGD\";"}, "question": {"en": "How many 'United Airlines' flights go to Airport 'ASY'?", "ru": "Сколько рейсов Аэрофлота летает в аэропорт KGD?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"ASY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Аэрофлот\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"KGD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "'United", "Airlines", "'", "flights", "go", "to", "Airport", "'ASY", "'", "?"], "ru": ["Сколько", "рейсов", "Аэрофлота", "летает", "в", "аэропорт", "KGD", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2.airline", "=", "t1.uid", "where", "t1.airline", "=", "\"United Airlines\"", "and", "t2.destairport", "=", "\"ASY\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2.airline", "=", "t1.uid", "where", "t1.airline", "=", "\"Аэрофлот\"", "and", "t2.destairport", "=", "\"KGD\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2.airline", "=", "t1.uid", "where", "t1.airline", "=", "value", "and", "t2.destairport", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2.airline", "=", "t1.uid", "where", "t1.airline", "=", "value", "and", "t2.destairport", "=", "value", ";"]}}, {"id": "D_0217", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\";", "ru": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"Аэрофлот\" AND T2.DestAirport  =  \"KGD\";"}, "question": {"en": "Count the number of United Airlines flights arriving in ASY Airport.", "ru": "Подсчитайте количество рейсов Аэрофлота, прибывающих в аэропорт KGD."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"ASY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Аэрофлот\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"KGD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "United", "Airlines", "flights", "arriving", "in", "ASY", "Airport", "."], "ru": ["Подсчитайте", "количество", "рейсов", "Аэрофлота", ",", "прибывающих", "в", "аэропорт", "KGD", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2.airline", "=", "t1.uid", "where", "t1.airline", "=", "\"United Airlines\"", "and", "t2.destairport", "=", "\"ASY\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2.airline", "=", "t1.uid", "where", "t1.airline", "=", "\"Аэрофлот\"", "and", "t2.destairport", "=", "\"KGD\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2.airline", "=", "t1.uid", "where", "t1.airline", "=", "value", "and", "t2.destairport", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2.airline", "=", "t1.uid", "where", "t1.airline", "=", "value", "and", "t2.destairport", "=", "value", ";"]}}, {"id": "D_0218", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\";", "ru": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"Победа\" AND T2.SourceAirport  =  \"CEK\";"}, "question": {"en": "How many 'United Airlines' flights depart from Airport 'AHD'?", "ru": "Сколько рейсов Победа отправляется из аэропорта CEK?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Победа\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"CEK\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "'United", "Airlines", "'", "flights", "depart", "from", "Airport", "'AHD", "'", "?"], "ru": ["Сколько", "рейсов", "Победа", "отправляется", "из", "аэропорта", "CEK", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2.airline", "=", "t1.uid", "where", "t1.airline", "=", "\"United Airlines\"", "and", "t2.sourceairport", "=", "\"AHD\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2.airline", "=", "t1.uid", "where", "t1.airline", "=", "\"Победа\"", "and", "t2.sourceairport", "=", "\"CEK\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2.airline", "=", "t1.uid", "where", "t1.airline", "=", "value", "and", "t2.sourceairport", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2.airline", "=", "t1.uid", "where", "t1.airline", "=", "value", "and", "t2.sourceairport", "=", "value", ";"]}}, {"id": "D_0219", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\";", "ru": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"Аэрофлот\" AND T2.SourceAirport  =  \"KGD\";"}, "question": {"en": "Return the number of United Airlines flights leaving from AHD Airport.", "ru": "Показать количество рейсов Аэрофлота, вылетающих из аэропорта KGD."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Аэрофлот\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"KGD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "number", "of", "United", "Airlines", "flights", "leaving", "from", "AHD", "Airport", "."], "ru": ["Показать", "количество", "рейсов", "Аэрофлота", ",", "вылетающих", "из", "аэропорта", "KGD", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2.airline", "=", "t1.uid", "where", "t1.airline", "=", "\"United Airlines\"", "and", "t2.sourceairport", "=", "\"AHD\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2.airline", "=", "t1.uid", "where", "t1.airline", "=", "\"Аэрофлот\"", "and", "t2.sourceairport", "=", "\"KGD\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2.airline", "=", "t1.uid", "where", "t1.airline", "=", "value", "and", "t2.sourceairport", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2.airline", "=", "t1.uid", "where", "t1.airline", "=", "value", "and", "t2.sourceairport", "=", "value", ";"]}}, {"id": "D_0220", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\";", "ru": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Челябинск\" AND T3.Airline  =  \"S7\";"}, "question": {"en": "How many United Airlines flights go to City 'Aberdeen'?", "ru": "Сколько рейсов S7 летает в город Челябинск?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Челябинск\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"S7\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "United", "Airlines", "flights", "go", "to", "City", "'Aberdeen", "'", "?"], "ru": ["Сколько", "рейсов", "S7", "летает", "в", "город", "Челябинск", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "join", "airlines", "as", "t3", "on", "t3.uid", "=", "t1.airline", "where", "t2.city", "=", "\"Aberdeen\"", "and", "t3.airline", "=", "\"United Airlines\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "join", "airlines", "as", "t3", "on", "t3.uid", "=", "t1.airline", "where", "t2.city", "=", "\"Челябинск\"", "and", "t3.airline", "=", "\"S7\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "join", "airlines", "as", "t3", "on", "t3.uid", "=", "t1.airline", "where", "t2.city", "=", "value", "and", "t3.airline", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "join", "airlines", "as", "t3", "on", "t3.uid", "=", "t1.airline", "where", "t2.city", "=", "value", "and", "t3.airline", "=", "value", ";"]}}, {"id": "D_0221", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\";", "ru": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Москва\" AND T3.Airline  =  \"S7\";"}, "question": {"en": "Count the number of United Airlines flights that arrive in Aberdeen.", "ru": "Подсчитайте количество рейсов S7, прибывающих в Москву."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Москва\"", null], "and", [false, 2, [0, [0, 2, false], null], "\"S7\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "United", "Airlines", "flights", "that", "arrive", "in", "Aberdeen", "."], "ru": ["Подсчитайте", "количество", "рейсов", "S7", ",", "прибывающих", "в", "Москву", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "join", "airlines", "as", "t3", "on", "t3.uid", "=", "t1.airline", "where", "t2.city", "=", "\"Aberdeen\"", "and", "t3.airline", "=", "\"United Airlines\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "join", "airlines", "as", "t3", "on", "t3.uid", "=", "t1.airline", "where", "t2.city", "=", "\"Москва\"", "and", "t3.airline", "=", "\"S7\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "join", "airlines", "as", "t3", "on", "t3.uid", "=", "t1.airline", "where", "t2.city", "=", "value", "and", "t3.airline", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "join", "airlines", "as", "t3", "on", "t3.uid", "=", "t1.airline", "where", "t2.city", "=", "value", "and", "t3.airline", "=", "value", ";"]}}, {"id": "D_0222", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which city has most number of arriving flights?", "ru": "В какой город прибывает больше всего рейсов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "city", "has", "most", "number", "of", "arriving", "flights", "?"], "ru": ["В", "какой", "город", "прибывает", "больше", "всего", "рейсов", "?"]}, "query_toks": {"en": ["select", "t1.city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "group", "by", "t1.city", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "group", "by", "t1.city", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "group", "by", "t1.city", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "group", "by", "t1.city", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0223", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which city has the most frequent destination airport?", "ru": "В какой аэропорт города чаще всего прибывают рейсы?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "city", "has", "the", "most", "frequent", "destination", "airport", "?"], "ru": ["В", "какой", "аэропорт", "города", "чаще", "всего", "прибывают", "рейсы", "?"]}, "query_toks": {"en": ["select", "t1.city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "group", "by", "t1.city", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "group", "by", "t1.city", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "group", "by", "t1.city", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "group", "by", "t1.city", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0224", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which city has most number of departing flights?", "ru": "Из какого города вылетает больше всего рейсов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "city", "has", "most", "number", "of", "departing", "flights", "?"], "ru": ["Из", "какого", "города", "вылетает", "больше", "всего", "рейсов", "?"]}, "query_toks": {"en": ["select", "t1.city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.city", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.city", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.city", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.city", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0225", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which city is the most frequent source airport?", "ru": "Из аэропорта какого города чаще всего отправляются рейсы?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "city", "is", "the", "most", "frequent", "source", "airport", "?"], "ru": ["Из", "аэропорта", "какого", "города", "чаще", "всего", "отправляются", "рейсы", "?"]}, "query_toks": {"en": ["select", "t1.city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.city", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.city", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.city", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.city", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0226", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the code of airport that has the highest number of flights?", "ru": "Каков код аэропорта, в котором больше всего рейсов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "code", "of", "airport", "that", "has", "the", "highest", "number", "of", "flights", "?"], "ru": ["Каков", "код", "аэропорта", ",", "в", "котором", "больше", "всего", "рейсов", "?"]}, "query_toks": {"en": ["select", "t1.airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "or", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.airportcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "or", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.airportcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "or", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.airportcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "or", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.airportcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0227", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the airport code of the airport with the most flights?", "ru": "Каков код аэропорта с наибольшим количеством рейсов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "airport", "code", "of", "the", "airport", "with", "the", "most", "flights", "?"], "ru": ["Каков", "код", "аэропорта", "с", "наибольшим", "количеством", "рейсов", "?"]}, "query_toks": {"en": ["select", "t1.airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "or", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.airportcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "or", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.airportcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "or", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.airportcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "or", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.airportcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0228", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1;", "ru": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1;"}, "question": {"en": "What is the code of airport that has fewest number of flights?", "ru": "Каков код аэропорта, в котором меньше всего рейсов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "code", "of", "airport", "that", "has", "fewest", "number", "of", "flights", "?"], "ru": ["Каков", "код", "аэропорта", ",", "в", "котором", "меньше", "всего", "рейсов", "?"]}, "query_toks": {"en": ["select", "t1.airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "or", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.airportcode", "order", "by", "count", "(", "*", ")", "limit", "1", ";"], "ru": ["select", "t1.airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "or", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.airportcode", "order", "by", "count", "(", "*", ")", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "or", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.airportcode", "order", "by", "count", "(", "*", ")", "limit", "1", ";"], "ru": ["select", "t1.airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "or", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.airportcode", "order", "by", "count", "(", "*", ")", "limit", "1", ";"]}}, {"id": "D_0229", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1;", "ru": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1;"}, "question": {"en": "Give the code of the airport with the least flights.", "ru": "Укажите код аэропорта с наименьшим количеством рейсов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "code", "of", "the", "airport", "with", "the", "least", "flights", "."], "ru": ["Укажите", "код", "аэропорта", "с", "наименьшим", "количеством", "рейсов", "."]}, "query_toks": {"en": ["select", "t1.airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "or", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.airportcode", "order", "by", "count", "(", "*", ")", "limit", "1", ";"], "ru": ["select", "t1.airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "or", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.airportcode", "order", "by", "count", "(", "*", ")", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "or", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.airportcode", "order", "by", "count", "(", "*", ")", "limit", "1", ";"], "ru": ["select", "t1.airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1.airportcode", "=", "t2.destairport", "or", "t1.airportcode", "=", "t2.sourceairport", "group", "by", "t1.airportcode", "order", "by", "count", "(", "*", ")", "limit", "1", ";"]}}, {"id": "D_0230", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which airline has most number of flights?", "ru": "У какой авиакомпании больше всего рейсов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "airline", "has", "most", "number", "of", "flights", "?"], "ru": ["У", "какой", "авиакомпании", "больше", "всего", "рейсов", "?"]}, "query_toks": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0231", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What airline serves the most flights?", "ru": "Какая авиакомпания обслуживает больше всего рейсов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "airline", "serves", "the", "most", "flights", "?"], "ru": ["Какая", "авиакомпания", "обслуживает", "больше", "всего", "рейсов", "?"]}, "query_toks": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0232", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1;", "ru": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1;"}, "question": {"en": "Find the abbreviation and country of the airline that has fewest number of flights?", "ru": "Найдите аббревиатуру и страну авиакомпании, у которой меньше всего рейсов"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "abbreviation", "and", "country", "of", "the", "airline", "that", "has", "fewest", "number", "of", "flights", "?"], "ru": ["Найдите", "аббревиатуру", "и", "страну", "авиакомпании", ",", "у", "которой", "меньше", "всего", "рейсов"]}, "query_toks": {"en": ["select", "t1.abbreviation", ",", "t1.country", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "order", "by", "count", "(", "*", ")", "limit", "1", ";"], "ru": ["select", "t1.abbreviation", ",", "t1.country", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "order", "by", "count", "(", "*", ")", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.abbreviation", ",", "t1.country", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "order", "by", "count", "(", "*", ")", "limit", "1", ";"], "ru": ["select", "t1.abbreviation", ",", "t1.country", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "order", "by", "count", "(", "*", ")", "limit", "1", ";"]}}, {"id": "D_0233", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1;", "ru": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1;"}, "question": {"en": "What is the abbreviation of the airilne has the fewest flights and what country is it in?", "ru": "Какая аббревиатура авиакомпании имеет наименьшее количество рейсов и в какой стране она находится?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "abbreviation", "of", "the", "airilne", "has", "the", "fewest", "flights", "and", "what", "country", "is", "it", "in", "?"], "ru": ["Какая", "аббревиатура", "авиакомпании", "имеет", "наименьшее", "количество", "рейсов", "и", "в", "какой", "стране", "она", "находится", "?"]}, "query_toks": {"en": ["select", "t1.abbreviation", ",", "t1.country", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "order", "by", "count", "(", "*", ")", "limit", "1", ";"], "ru": ["select", "t1.abbreviation", ",", "t1.country", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "order", "by", "count", "(", "*", ")", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.abbreviation", ",", "t1.country", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "order", "by", "count", "(", "*", ")", "limit", "1", ";"], "ru": ["select", "t1.abbreviation", ",", "t1.country", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "order", "by", "count", "(", "*", ")", "limit", "1", ";"]}}, {"id": "D_0234", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\";", "ru": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\";"}, "question": {"en": "What are airlines that have some flight departing from airport 'AHD'?", "ru": "Какие авиакомпании вылетают некоторыми рейсами из аэропорта AHD?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "airlines", "that", "have", "some", "flight", "departing", "from", "airport", "'AHD", "'", "?"], "ru": ["Какие", "авиакомпании", "вылетают", "некоторыми", "рейсами", "из", "аэропорта", "AHD", "?"]}, "query_toks": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"AHD\"", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"AHD\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", ";"]}}, {"id": "D_0235", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\";", "ru": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\";"}, "question": {"en": "Which airlines have a flight with source airport AHD?", "ru": "Какие авиакомпании летают из аэропорта AHD?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "airlines", "have", "a", "flight", "with", "source", "airport", "AHD", "?"], "ru": ["Какие", "авиакомпании", "летают", "из", "аэропорта", "AHD", "?"]}, "query_toks": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"AHD\"", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"AHD\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", ";"]}}, {"id": "D_0236", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\";", "ru": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\";"}, "question": {"en": "What are airlines that have flights arriving at airport 'AHD'?", "ru": "Какие авиакомпании имеют рейсы, прибывающие в аэропорт AHD?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "airlines", "that", "have", "flights", "arriving", "at", "airport", "'AHD", "'", "?"], "ru": ["Какие", "авиакомпании", "имеют", "рейсы", ",", "прибывающие", "в", "аэропорт", "AHD", "?"]}, "query_toks": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.destairport", "=", "\"AHD\"", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.destairport", "=", "\"AHD\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.destairport", "=", "value", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.destairport", "=", "value", ";"]}}, {"id": "D_0237", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\";", "ru": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\";"}, "question": {"en": "Which airlines have a flight with destination airport AHD?", "ru": "Какие авиакомпании летают в аэропорт назначения AHD?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "airlines", "have", "a", "flight", "with", "destination", "airport", "AHD", "?"], "ru": ["Какие", "авиакомпании", "летают", "в", "аэропорт", "назначения", "AHD", "?"]}, "query_toks": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.destairport", "=", "\"AHD\"", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.destairport", "=", "\"AHD\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.destairport", "=", "value", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.destairport", "=", "value", ";"]}}, {"id": "D_0238", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\";", "ru": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\";"}, "question": {"en": "Find all airlines that have flights from both airports 'APG' and 'CVO'.", "ru": "Найдите все авиакомпании, у которых есть рейсы из обоих аэропортов \"APG\" и \"CVO\"."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Find", "all", "airlines", "that", "have", "flights", "from", "both", "airports", "'APG", "'", "and", "'CVO", "'", "."], "ru": ["Найдите", "все", "авиакомпании", ",", "у", "которых", "есть", "рейсы", "из", "обоих", "аэропортов", "``", "APG", "''", "и", "``", "CVO", "''", "."]}, "query_toks": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"APG\"", "intersect", "select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"CVO\"", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"APG\"", "intersect", "select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"CVO\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", "intersect", "select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", "intersect", "select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", ";"]}}, {"id": "D_0239", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\";", "ru": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\";"}, "question": {"en": "Which airlines have departing flights from both APG and CVO airports?", "ru": "Какие авиакомпании вылетают из аэропортов APG и CVO?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Which", "airlines", "have", "departing", "flights", "from", "both", "APG", "and", "CVO", "airports", "?"], "ru": ["Какие", "авиакомпании", "вылетают", "из", "аэропортов", "APG", "и", "CVO", "?"]}, "query_toks": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"APG\"", "intersect", "select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"CVO\"", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"APG\"", "intersect", "select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"CVO\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", "intersect", "select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", "intersect", "select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", ";"]}}, {"id": "D_0240", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\";", "ru": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\";"}, "question": {"en": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.", "ru": "Найдите все авиакомпании, у которых есть рейсы из аэропорта \"CVO\", но не из аэропорта \"APG\"."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["Find", "all", "airlines", "that", "have", "flights", "from", "airport", "'CVO", "'", "but", "not", "from", "'APG", "'", "."], "ru": ["Найдите", "все", "авиакомпании", ",", "у", "которых", "есть", "рейсы", "из", "аэропорта", "``", "CVO", "''", ",", "но", "не", "из", "аэропорта", "``", "APG", "''", "."]}, "query_toks": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"CVO\"", "except", "select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"APG\"", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"CVO\"", "except", "select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"APG\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", "except", "select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", "except", "select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", ";"]}}, {"id": "D_0241", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\";", "ru": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\";"}, "question": {"en": "Which airlines have departures from CVO but not from APG airports?", "ru": "Какие авиакомпании вылетают из CVO, но не из аэропортов APG?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"CVO\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["Which", "airlines", "have", "departures", "from", "CVO", "but", "not", "from", "APG", "airports", "?"], "ru": ["Какие", "авиакомпании", "вылетают", "из", "CVO", ",", "но", "не", "из", "аэропортов", "APG", "?"]}, "query_toks": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"CVO\"", "except", "select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"APG\"", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"CVO\"", "except", "select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "\"APG\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", "except", "select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", "except", "select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "where", "t2.sourceairport", "=", "value", ";"]}}, {"id": "D_0242", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10;", "ru": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10;"}, "question": {"en": "Find all airlines that have at least 10 flights.", "ru": "Найдите все авиакомпании, у которых есть не менее 10 рейсов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "all", "airlines", "that", "have", "at", "least", "10", "flights", "."], "ru": ["Найдите", "все", "авиакомпании", ",", "у", "которых", "есть", "не", "менее", "10", "рейсов", "."]}, "query_toks": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "having", "count", "(", "*", ")", ">", "10", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "having", "count", "(", "*", ")", ">", "10", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "having", "count", "(", "*", ")", ">", "10", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "having", "count", "(", "*", ")", ">", "10", ";"]}}, {"id": "D_0243", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10;", "ru": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10;"}, "question": {"en": "Which airlines have at least 10 flights?", "ru": "У каких авиакомпаний есть не менее 10 рейсов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "airlines", "have", "at", "least", "10", "flights", "?"], "ru": ["У", "каких", "авиакомпаний", "есть", "не", "менее", "10", "рейсов", "?"]}, "query_toks": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "having", "count", "(", "*", ")", ">", "10", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "having", "count", "(", "*", ")", ">", "10", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "having", "count", "(", "*", ")", ">", "10", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "having", "count", "(", "*", ")", ">", "10", ";"]}}, {"id": "D_0244", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200;", "ru": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200;"}, "question": {"en": "Find all airlines that have fewer than 200 flights.", "ru": "Найдите все авиакомпании, у которых меньше 200 рейсов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 4, [0, [3, 0, false], null], 200.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 4, [0, [3, 0, false], null], 200.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "all", "airlines", "that", "have", "fewer", "than", "200", "flights", "."], "ru": ["Найдите", "все", "авиакомпании", ",", "у", "которых", "меньше", "200", "рейсов", "."]}, "query_toks": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "having", "count", "(", "*", ")", "<", "200", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "having", "count", "(", "*", ")", "<", "200", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "having", "count", "(", "*", ")", "<", "200", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "having", "count", "(", "*", ")", "<", "200", ";"]}}, {"id": "D_0245", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200;", "ru": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200;"}, "question": {"en": "Which airlines have less than 200 flights?", "ru": "У каких авиакомпаний меньше 200 рейсов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 4, [0, [3, 0, false], null], 200.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 4, [0, [3, 0, false], null], 200.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "airlines", "have", "less", "than", "200", "flights", "?"], "ru": ["У", "каких", "авиакомпаний", "меньше", "200", "рейсов", "?"]}, "query_toks": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "having", "count", "(", "*", ")", "<", "200", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "having", "count", "(", "*", ")", "<", "200", ";"]}, "query_toks_no_values": {"en": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "having", "count", "(", "*", ")", "<", "200", ";"], "ru": ["select", "t1.airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1.uid", "=", "t2.airline", "group", "by", "t1.airline", "having", "count", "(", "*", ")", "<", "200", ";"]}}, {"id": "D_0246", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\";", "ru": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"Победа\";"}, "question": {"en": "What are flight numbers of Airline \"United Airlines\"?", "ru": "Какие номера рейсов у авиакомпании Победа?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Победа\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "flight", "numbers", "of", "Airline", "``", "United", "Airlines", "''", "?"], "ru": ["Какие", "номера", "рейсов", "у", "авиакомпании", "Победа", "?"]}, "query_toks": {"en": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t2.uid", "=", "t1.airline", "where", "t2.airline", "=", "\"United Airlines\"", ";"], "ru": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t2.uid", "=", "t1.airline", "where", "t2.airline", "=", "\"Победа\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t2.uid", "=", "t1.airline", "where", "t2.airline", "=", "value", ";"], "ru": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t2.uid", "=", "t1.airline", "where", "t2.airline", "=", "value", ";"]}}, {"id": "D_0247", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\";", "ru": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"Победа\";"}, "question": {"en": "Which flight numbers correspond to United Airlines flights?", "ru": "Какие номера рейсов соответствуют рейсам Победа?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Победа\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "flight", "numbers", "correspond", "to", "United", "Airlines", "flights", "?"], "ru": ["Какие", "номера", "рейсов", "соответствуют", "рейсам", "Победа", "?"]}, "query_toks": {"en": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t2.uid", "=", "t1.airline", "where", "t2.airline", "=", "\"United Airlines\"", ";"], "ru": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t2.uid", "=", "t1.airline", "where", "t2.airline", "=", "\"Победа\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t2.uid", "=", "t1.airline", "where", "t2.airline", "=", "value", ";"], "ru": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t2.uid", "=", "t1.airline", "where", "t2.airline", "=", "value", ";"]}}, {"id": "D_0248", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\";", "ru": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\";"}, "question": {"en": "What are flight numbers of flights departing from Airport \"APG\"?", "ru": "Какие номера рейсов вылетают из аэропорта «APG»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "flight", "numbers", "of", "flights", "departing", "from", "Airport", "``", "APG", "''", "?"], "ru": ["Какие", "номера", "рейсов", "вылетают", "из", "аэропорта", "«", "APG", "»", "?"]}, "query_toks": {"en": ["select", "flightno", "from", "flights", "where", "sourceairport", "=", "\"APG\"", ";"], "ru": ["select", "flightno", "from", "flights", "where", "sourceairport", "=", "\"APG\"", ";"]}, "query_toks_no_values": {"en": ["select", "flightno", "from", "flights", "where", "sourceairport", "=", "value", ";"], "ru": ["select", "flightno", "from", "flights", "where", "sourceairport", "=", "value", ";"]}}, {"id": "D_0249", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\";", "ru": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\";"}, "question": {"en": "Give the flight numbers of flights leaving from APG.", "ru": "Укажите номера рейсов вылетающих из APG."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "flight", "numbers", "of", "flights", "leaving", "from", "APG", "."], "ru": ["Укажите", "номера", "рейсов", "вылетающих", "из", "APG", "."]}, "query_toks": {"en": ["select", "flightno", "from", "flights", "where", "sourceairport", "=", "\"APG\"", ";"], "ru": ["select", "flightno", "from", "flights", "where", "sourceairport", "=", "\"APG\"", ";"]}, "query_toks_no_values": {"en": ["select", "flightno", "from", "flights", "where", "sourceairport", "=", "value", ";"], "ru": ["select", "flightno", "from", "flights", "where", "sourceairport", "=", "value", ";"]}}, {"id": "D_0250", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\";", "ru": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\";"}, "question": {"en": "What are flight numbers of flights arriving at Airport \"APG\"?", "ru": "Какие номера рейсов прибывают в аэропорт «APG»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "flight", "numbers", "of", "flights", "arriving", "at", "Airport", "``", "APG", "''", "?"], "ru": ["Какие", "номера", "рейсов", "прибывают", "в", "аэропорт", "«", "APG", "»", "?"]}, "query_toks": {"en": ["select", "flightno", "from", "flights", "where", "destairport", "=", "\"APG\"", ";"], "ru": ["select", "flightno", "from", "flights", "where", "destairport", "=", "\"APG\"", ";"]}, "query_toks_no_values": {"en": ["select", "flightno", "from", "flights", "where", "destairport", "=", "value", ";"], "ru": ["select", "flightno", "from", "flights", "where", "destairport", "=", "value", ";"]}}, {"id": "D_0251", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\";", "ru": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\";"}, "question": {"en": "Give the flight numbers of flights landing at APG.", "ru": "Приведите номера рейсов, прилетающих в APG."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "flight", "numbers", "of", "flights", "landing", "at", "APG", "."], "ru": ["Приведите", "номера", "рейсов", ",", "прилетающих", "в", "APG", "."]}, "query_toks": {"en": ["select", "flightno", "from", "flights", "where", "destairport", "=", "\"APG\"", ";"], "ru": ["select", "flightno", "from", "flights", "where", "destairport", "=", "\"APG\"", ";"]}, "query_toks_no_values": {"en": ["select", "flightno", "from", "flights", "where", "destairport", "=", "value", ";"], "ru": ["select", "flightno", "from", "flights", "where", "destairport", "=", "value", ";"]}}, {"id": "D_0252", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\";", "ru": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Калининград\";"}, "question": {"en": "What are flight numbers of flights departing from City \"Aberdeen \"?", "ru": "Какие номера рейсов вылетают из города «Калининград»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Калининград\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "flight", "numbers", "of", "flights", "departing", "from", "City", "``", "Aberdeen", "``", "?"], "ru": ["Какие", "номера", "рейсов", "вылетают", "из", "города", "«", "Калининград", "»", "?"]}, "query_toks": {"en": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.sourceairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Aberdeen\"", ";"], "ru": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.sourceairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Калининград\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.sourceairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", ";"], "ru": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.sourceairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", ";"]}}, {"id": "D_0253", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\";", "ru": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Калининград\";"}, "question": {"en": "Give the flight numbers of flights leaving from Aberdeen.", "ru": "Сообщите номера рейсов, вылетающих из Калининграда."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Калининград\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "flight", "numbers", "of", "flights", "leaving", "from", "Aberdeen", "."], "ru": ["Сообщите", "номера", "рейсов", ",", "вылетающих", "из", "Калининграда", "."]}, "query_toks": {"en": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.sourceairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Aberdeen\"", ";"], "ru": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.sourceairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Калининград\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.sourceairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", ";"], "ru": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.sourceairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", ";"]}}, {"id": "D_0254", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\";", "ru": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Москва\";"}, "question": {"en": "What are flight numbers of flights arriving at City \"Aberdeen\"?", "ru": "Какие номера рейсов прибывают в город \"Москва\"?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Москва\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "flight", "numbers", "of", "flights", "arriving", "at", "City", "``", "Aberdeen", "''", "?"], "ru": ["Какие", "номера", "рейсов", "прибывают", "в", "город", "``", "Москва", "''", "?"]}, "query_toks": {"en": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Aberdeen\"", ";"], "ru": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Москва\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", ";"], "ru": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", ";"]}}, {"id": "D_0255", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\";", "ru": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Москва\";"}, "question": {"en": "Give the flight numbers of flights arriving in Aberdeen.", "ru": "Сообщите номера рейсов, прибывающих в Москву."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Москва\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "flight", "numbers", "of", "flights", "arriving", "in", "Aberdeen", "."], "ru": ["Сообщите", "номера", "рейсов", ",", "прибывающих", "в", "Москву", "."]}, "query_toks": {"en": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Aberdeen\"", ";"], "ru": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Москва\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", ";"], "ru": ["select", "t1.flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", ";"]}}, {"id": "D_0256", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\";", "ru": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Анапа\" OR T2.city  =  \"Воронеж\";"}, "question": {"en": "Find the number of flights landing in the city of Aberdeen or Abilene.", "ru": "Найдите количество рейсов, которые приземляются в городе Анапа или Воронеж."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Abilene\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Анапа\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Воронеж\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "flights", "landing", "in", "the", "city", "of", "Aberdeen", "or", "Abilene", "."], "ru": ["Найдите", "количество", "рейсов", ",", "которые", "приземляются", "в", "городе", "Анапа", "или", "Воронеж", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Aberdeen\"", "or", "t2.city", "=", "\"Abilene\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Анапа\"", "or", "t2.city", "=", "\"Воронеж\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", "or", "t2.city", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", "or", "t2.city", "=", "value", ";"]}}, {"id": "D_0257", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\";", "ru": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Анапа\" OR T2.city  =  \"Воронеж\";"}, "question": {"en": "How many flights land in Aberdeen or Abilene?", "ru": "Сколько рейсов приземляется в Анапе или Воронеже?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Abilene\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Анапа\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Воронеж\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "flights", "land", "in", "Aberdeen", "or", "Abilene", "?"], "ru": ["Сколько", "рейсов", "приземляется", "в", "Анапе", "или", "Воронеже", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Aberdeen\"", "or", "t2.city", "=", "\"Abilene\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "\"Анапа\"", "or", "t2.city", "=", "\"Воронеж\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", "or", "t2.city", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1.destairport", "=", "t2.airportcode", "where", "t2.city", "=", "value", "or", "t2.city", "=", "value", ";"]}}, {"id": "D_0258", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights);", "ru": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights);"}, "question": {"en": "Find the name of airports which do not have any flight in and out.", "ru": "Найдите названия аэропортов, в которые нет рейсов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "name", "of", "airports", "which", "do", "not", "have", "any", "flight", "in", "and", "out", "."], "ru": ["Найдите", "названия", "аэропортов", ",", "в", "которые", "нет", "рейсов", "."]}, "query_toks": {"en": ["select", "airportname", "from", "airports", "where", "airportcode", "not", "in", "(", "select", "sourceairport", "from", "flights", "union", "select", "destairport", "from", "flights", ")", ";"], "ru": ["select", "airportname", "from", "airports", "where", "airportcode", "not", "in", "(", "select", "sourceairport", "from", "flights", "union", "select", "destairport", "from", "flights", ")", ";"]}, "query_toks_no_values": {"en": ["select", "airportname", "from", "airports", "where", "airportcode", "not", "in", "(", "select", "sourceairport", "from", "flights", "union", "select", "destairport", "from", "flights", ")", ";"], "ru": ["select", "airportname", "from", "airports", "where", "airportcode", "not", "in", "(", "select", "sourceairport", "from", "flights", "union", "select", "destairport", "from", "flights", ")", ";"]}}, {"id": "D_0259", "db_id": "flight_2", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights);", "ru": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights);"}, "question": {"en": "Which airports do not have departing or arriving flights?", "ru": "В какие аэропорты не отправляются и не прилетают рейсы?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "airports", "do", "not", "have", "departing", "or", "arriving", "flights", "?"], "ru": ["В", "какие", "аэропорты", "не", "отправляются", "и", "не", "прилетают", "рейсы", "?"]}, "query_toks": {"en": ["select", "airportname", "from", "airports", "where", "airportcode", "not", "in", "(", "select", "sourceairport", "from", "flights", "union", "select", "destairport", "from", "flights", ")", ";"], "ru": ["select", "airportname", "from", "airports", "where", "airportcode", "not", "in", "(", "select", "sourceairport", "from", "flights", "union", "select", "destairport", "from", "flights", ")", ";"]}, "query_toks_no_values": {"en": ["select", "airportname", "from", "airports", "where", "airportcode", "not", "in", "(", "select", "sourceairport", "from", "flights", "union", "select", "destairport", "from", "flights", ")", ";"], "ru": ["select", "airportname", "from", "airports", "where", "airportcode", "not", "in", "(", "select", "sourceairport", "from", "flights", "union", "select", "destairport", "from", "flights", ")", ";"]}}, {"id": "D_0260", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM employee;", "ru": "SELECT count(*) FROM employee;"}, "question": {"en": "How many employees are there?", "ru": "Сколько там сотрудников?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "employees", "are", "there", "?"], "ru": ["Сколько", "там", "сотрудников", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "employee", ";"], "ru": ["select", "count", "(", "*", ")", "from", "employee", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "employee", ";"], "ru": ["select", "count", "(", "*", ")", "from", "employee", ";"]}}, {"id": "D_0261", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM employee;", "ru": "SELECT count(*) FROM employee;"}, "question": {"en": "Count the number of employees", "ru": "Подсчитайте количество сотрудников"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "employees"], "ru": ["Подсчитайте", "количество", "сотрудников"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "employee", ";"], "ru": ["select", "count", "(", "*", ")", "from", "employee", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "employee", ";"], "ru": ["select", "count", "(", "*", ")", "from", "employee", ";"]}}, {"id": "D_0262", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM employee ORDER BY age;", "ru": "SELECT name FROM employee ORDER BY age;"}, "question": {"en": "Sort employee names by their age in ascending order.", "ru": "Отсортируйте имена сотрудников по возрасту в порядке возрастания."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Sort", "employee", "names", "by", "their", "age", "in", "ascending", "order", "."], "ru": ["Отсортируйте", "имена", "сотрудников", "по", "возрасту", "в", "порядке", "возрастания", "."]}, "query_toks": {"en": ["select", "name", "from", "employee", "order", "by", "age", ";"], "ru": ["select", "name", "from", "employee", "order", "by", "age", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "employee", "order", "by", "age", ";"], "ru": ["select", "name", "from", "employee", "order", "by", "age", ";"]}}, {"id": "D_0263", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM employee ORDER BY age;", "ru": "SELECT name FROM employee ORDER BY age;"}, "question": {"en": "List the names of employees and sort in ascending order of age.", "ru": "Перечислите имена сотрудников и отсортируйте их в порядке возрастания возраста."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "names", "of", "employees", "and", "sort", "in", "ascending", "order", "of", "age", "."], "ru": ["Перечислите", "имена", "сотрудников", "и", "отсортируйте", "их", "в", "порядке", "возрастания", "возраста", "."]}, "query_toks": {"en": ["select", "name", "from", "employee", "order", "by", "age", ";"], "ru": ["select", "name", "from", "employee", "order", "by", "age", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "employee", "order", "by", "age", ";"], "ru": ["select", "name", "from", "employee", "order", "by", "age", ";"]}}, {"id": "D_0264", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  city FROM employee GROUP BY city;", "ru": "SELECT count(*) ,  city FROM employee GROUP BY city;"}, "question": {"en": "What is the number of employees from each city?", "ru": "Какое количество сотрудников из каждого города?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "number", "of", "employees", "from", "each", "city", "?"], "ru": ["Какое", "количество", "сотрудников", "из", "каждого", "города", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "city", "from", "employee", "group", "by", "city", ";"], "ru": ["select", "count", "(", "*", ")", ",", "city", "from", "employee", "group", "by", "city", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "city", "from", "employee", "group", "by", "city", ";"], "ru": ["select", "count", "(", "*", ")", ",", "city", "from", "employee", "group", "by", "city", ";"]}}, {"id": "D_0265", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  city FROM employee GROUP BY city;", "ru": "SELECT count(*) ,  city FROM employee GROUP BY city;"}, "question": {"en": "Count the number of employees for each city.", "ru": "Подсчитайте количество сотрудников в каждом городе."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "employees", "for", "each", "city", "."], "ru": ["Подсчитайте", "количество", "сотрудников", "в", "каждом", "городе", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "city", "from", "employee", "group", "by", "city", ";"], "ru": ["select", "count", "(", "*", ")", ",", "city", "from", "employee", "group", "by", "city", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "city", "from", "employee", "group", "by", "city", ";"], "ru": ["select", "count", "(", "*", ")", ",", "city", "from", "employee", "group", "by", "city", ";"]}}, {"id": "D_0266", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1;", "ru": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1;"}, "question": {"en": "Which cities do more than one employee under age 30 come from?", "ru": "Из каких городов приезжает более одного сотрудника в возрасте до 30 лет?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 30.0, null]], "groupBy": [[0, 4, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 30.0, null]], "groupBy": [[0, 4, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "cities", "do", "more", "than", "one", "employee", "under", "age", "30", "come", "from", "?"], "ru": ["Из", "каких", "городов", "приезжает", "более", "одного", "сотрудника", "в", "возрасте", "до", "30", "лет", "?"]}, "query_toks": {"en": ["select", "city", "from", "employee", "where", "age", "<", "30", "group", "by", "city", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "city", "from", "employee", "where", "age", "<", "30", "group", "by", "city", "having", "count", "(", "*", ")", ">", "1", ";"]}, "query_toks_no_values": {"en": ["select", "city", "from", "employee", "where", "age", "<", "30", "group", "by", "city", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "city", "from", "employee", "where", "age", "<", "30", "group", "by", "city", "having", "count", "(", "*", ")", ">", "1", ";"]}}, {"id": "D_0267", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1;", "ru": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1;"}, "question": {"en": "Find the cities that have more than one employee under age 30.", "ru": "Найдите города, в которых работает более одного сотрудника младше 30 лет."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 30.0, null]], "groupBy": [[0, 4, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 30.0, null]], "groupBy": [[0, 4, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "cities", "that", "have", "more", "than", "one", "employee", "under", "age", "30", "."], "ru": ["Найдите", "города", ",", "в", "которых", "работает", "более", "одного", "сотрудника", "младше", "30", "лет", "."]}, "query_toks": {"en": ["select", "city", "from", "employee", "where", "age", "<", "30", "group", "by", "city", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "city", "from", "employee", "where", "age", "<", "30", "group", "by", "city", "having", "count", "(", "*", ")", ">", "1", ";"]}, "query_toks_no_values": {"en": ["select", "city", "from", "employee", "where", "age", "<", "30", "group", "by", "city", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "city", "from", "employee", "where", "age", "<", "30", "group", "by", "city", "having", "count", "(", "*", ")", ">", "1", ";"]}}, {"id": "D_0268", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION;", "ru": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION;"}, "question": {"en": "Find the number of shops in each location.", "ru": "Найдите количество магазинов в каждом месте."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "shops", "in", "each", "location", "."], "ru": ["Найдите", "количество", "магазинов", "в", "каждом", "месте", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "location", "from", "shop", "group", "by", "location", ";"], "ru": ["select", "count", "(", "*", ")", ",", "location", "from", "shop", "group", "by", "location", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "location", "from", "shop", "group", "by", "location", ";"], "ru": ["select", "count", "(", "*", ")", ",", "location", "from", "shop", "group", "by", "location", ";"]}}, {"id": "D_0269", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION;", "ru": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION;"}, "question": {"en": "How many shops are there in each location?", "ru": "Сколько магазинов в каждом месте?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "shops", "are", "there", "in", "each", "location", "?"], "ru": ["Сколько", "магазинов", "в", "каждом", "месте", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "location", "from", "shop", "group", "by", "location", ";"], "ru": ["select", "count", "(", "*", ")", ",", "location", "from", "shop", "group", "by", "location", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "location", "from", "shop", "group", "by", "location", ";"], "ru": ["select", "count", "(", "*", ")", ",", "location", "from", "shop", "group", "by", "location", ";"]}}, {"id": "D_0270", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1;", "ru": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1;"}, "question": {"en": "Find the manager name and district of the shop whose number of products is the largest.", "ru": "Найдите имя менеджера и район магазина, в котором больше всего товаров."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "manager", "name", "and", "district", "of", "the", "shop", "whose", "number", "of", "products", "is", "the", "largest", "."], "ru": ["Найдите", "имя", "менеджера", "и", "район", "магазина", ",", "в", "котором", "больше", "всего", "товаров", "."]}, "query_toks": {"en": ["select", "manager_name", ",", "district", "from", "shop", "order", "by", "number_products", "desc", "limit", "1", ";"], "ru": ["select", "manager_name", ",", "district", "from", "shop", "order", "by", "number_products", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "manager_name", ",", "district", "from", "shop", "order", "by", "number_products", "desc", "limit", "1", ";"], "ru": ["select", "manager_name", ",", "district", "from", "shop", "order", "by", "number_products", "desc", "limit", "1", ";"]}}, {"id": "D_0271", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1;", "ru": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1;"}, "question": {"en": "What are the manager name and district of the shop that sells the largest number of products?", "ru": "Как зовут менеджера и какой район у магазина, в котором продается наибольшее количество товаров?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "manager", "name", "and", "district", "of", "the", "shop", "that", "sells", "the", "largest", "number", "of", "products", "?"], "ru": ["Как", "зовут", "менеджера", "и", "какой", "район", "у", "магазина", ",", "в", "котором", "продается", "наибольшее", "количество", "товаров", "?"]}, "query_toks": {"en": ["select", "manager_name", ",", "district", "from", "shop", "order", "by", "number_products", "desc", "limit", "1", ";"], "ru": ["select", "manager_name", ",", "district", "from", "shop", "order", "by", "number_products", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "manager_name", ",", "district", "from", "shop", "order", "by", "number_products", "desc", "limit", "1", ";"], "ru": ["select", "manager_name", ",", "district", "from", "shop", "order", "by", "number_products", "desc", "limit", "1", ";"]}}, {"id": "D_0272", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT min(Number_products) ,  max(Number_products) FROM shop;", "ru": "SELECT min(Number_products) ,  max(Number_products) FROM shop;"}, "question": {"en": "find the minimum and maximum number of products of all stores.", "ru": "найти минимальное и максимальное количество товаров во всех магазинах."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 9, false], null]], [1, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 9, false], null]], [1, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["find", "the", "minimum", "and", "maximum", "number", "of", "products", "of", "all", "stores", "."], "ru": ["найти", "минимальное", "и", "максимальное", "количество", "товаров", "во", "всех", "магазинах", "."]}, "query_toks": {"en": ["select", "min", "(", "number_products", ")", ",", "max", "(", "number_products", ")", "from", "shop", ";"], "ru": ["select", "min", "(", "number_products", ")", ",", "max", "(", "number_products", ")", "from", "shop", ";"]}, "query_toks_no_values": {"en": ["select", "min", "(", "number_products", ")", ",", "max", "(", "number_products", ")", "from", "shop", ";"], "ru": ["select", "min", "(", "number_products", ")", ",", "max", "(", "number_products", ")", "from", "shop", ";"]}}, {"id": "D_0273", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT min(Number_products) ,  max(Number_products) FROM shop;", "ru": "SELECT min(Number_products) ,  max(Number_products) FROM shop;"}, "question": {"en": "What are the minimum and maximum number of products across all the shops?", "ru": "Какое минимальное и максимальное количество товаров во всех магазинах?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 9, false], null]], [1, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 9, false], null]], [1, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "minimum", "and", "maximum", "number", "of", "products", "across", "all", "the", "shops", "?"], "ru": ["Какое", "минимальное", "и", "максимальное", "количество", "товаров", "во", "всех", "магазинах", "?"]}, "query_toks": {"en": ["select", "min", "(", "number_products", ")", ",", "max", "(", "number_products", ")", "from", "shop", ";"], "ru": ["select", "min", "(", "number_products", ")", ",", "max", "(", "number_products", ")", "from", "shop", ";"]}, "query_toks_no_values": {"en": ["select", "min", "(", "number_products", ")", ",", "max", "(", "number_products", ")", "from", "shop", ";"], "ru": ["select", "min", "(", "number_products", ")", ",", "max", "(", "number_products", ")", "from", "shop", ";"]}}, {"id": "D_0274", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC;", "ru": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC;"}, "question": {"en": "Return the name, location and district of all shops in descending order of number of products.", "ru": "Покажи название, местонахождение и район всех магазинов в порядке убывания количества товаров."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "name", ",", "location", "and", "district", "of", "all", "shops", "in", "descending", "order", "of", "number", "of", "products", "."], "ru": ["Покажи", "название", ",", "местонахождение", "и", "район", "всех", "магазинов", "в", "порядке", "убывания", "количества", "товаров", "."]}, "query_toks": {"en": ["select", "name", ",", "location", ",", "district", "from", "shop", "order", "by", "number_products", "desc", ";"], "ru": ["select", "name", ",", "location", ",", "district", "from", "shop", "order", "by", "number_products", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "location", ",", "district", "from", "shop", "order", "by", "number_products", "desc", ";"], "ru": ["select", "name", ",", "location", ",", "district", "from", "shop", "order", "by", "number_products", "desc", ";"]}}, {"id": "D_0275", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC;", "ru": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC;"}, "question": {"en": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.", "ru": "Отсортируй все магазины по количеству товаров в порядке убывания и покажи название, местонахождение и район каждого магазина."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Sort", "all", "the", "shops", "by", "number", "products", "in", "descending", "order", ",", "and", "return", "the", "name", ",", "location", "and", "district", "of", "each", "shop", "."], "ru": ["Отсортируй", "все", "магазины", "по", "количеству", "товаров", "в", "порядке", "убывания", "и", "покажи", "название", ",", "местонахождение", "и", "район", "каждого", "магазина", "."]}, "query_toks": {"en": ["select", "name", ",", "location", ",", "district", "from", "shop", "order", "by", "number_products", "desc", ";"], "ru": ["select", "name", ",", "location", ",", "district", "from", "shop", "order", "by", "number_products", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "location", ",", "district", "from", "shop", "order", "by", "number_products", "desc", ";"], "ru": ["select", "name", ",", "location", ",", "district", "from", "shop", "order", "by", "number_products", "desc", ";"]}}, {"id": "D_0276", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop);", "ru": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop);"}, "question": {"en": "Find the names of stores whose number products is more than the average number of products.", "ru": "Найти названия магазинов, количество товаров которых превышает среднее количество товаров."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "names", "of", "stores", "whose", "number", "products", "is", "more", "than", "the", "average", "number", "of", "products", "."], "ru": ["Найти", "названия", "магазинов", ",", "количество", "товаров", "которых", "превышает", "среднее", "количество", "товаров", "."]}, "query_toks": {"en": ["select", "name", "from", "shop", "where", "number_products", ">", "(", "select", "avg", "(", "number_products", ")", "from", "shop", ")", ";"], "ru": ["select", "name", "from", "shop", "where", "number_products", ">", "(", "select", "avg", "(", "number_products", ")", "from", "shop", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "shop", "where", "number_products", ">", "(", "select", "avg", "(", "number_products", ")", "from", "shop", ")", ";"], "ru": ["select", "name", "from", "shop", "where", "number_products", ">", "(", "select", "avg", "(", "number_products", ")", "from", "shop", ")", ";"]}}, {"id": "D_0277", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop);", "ru": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop);"}, "question": {"en": "Which shops' number products is above the average? Give me the shop names.", "ru": "Количество товаров в каких магазинах выше среднего? Отобразить названия магазинов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "shops", "'", "number", "products", "is", "above", "the", "average", "?", "Give", "me", "the", "shop", "names", "."], "ru": ["Количество", "товаров", "в", "каких", "магазинах", "выше", "среднего", "?", "Отобразить", "названия", "магазинов", "."]}, "query_toks": {"en": ["select", "name", "from", "shop", "where", "number_products", ">", "(", "select", "avg", "(", "number_products", ")", "from", "shop", ")", ";"], "ru": ["select", "name", "from", "shop", "where", "number_products", ">", "(", "select", "avg", "(", "number_products", ")", "from", "shop", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "shop", "where", "number_products", ">", "(", "select", "avg", "(", "number_products", ")", "from", "shop", ")", ";"], "ru": ["select", "name", "from", "shop", "where", "number_products", ">", "(", "select", "avg", "(", "number_products", ")", "from", "shop", ")", ";"]}}, {"id": "D_0278", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "find the name of employee who was awarded the most times in the evaluation.", "ru": "найдите имя сотрудника, который получил наибольшее количество наград при оценке."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["find", "the", "name", "of", "employee", "who", "was", "awarded", "the", "most", "times", "in", "the", "evaluation", "."], "ru": ["найдите", "имя", "сотрудника", ",", "который", "получил", "наибольшее", "количество", "наград", "при", "оценке", "."]}, "query_toks": {"en": ["select", "t1.name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1.employee_id", "=", "t2.employee_id", "group", "by", "t2.employee_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1.employee_id", "=", "t2.employee_id", "group", "by", "t2.employee_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1.employee_id", "=", "t2.employee_id", "group", "by", "t2.employee_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1.employee_id", "=", "t2.employee_id", "group", "by", "t2.employee_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0279", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which employee received the most awards in evaluations? Give me the employee name.", "ru": "Какой сотрудник получил больше всего наград в результате оценки? Показать имя сотрудника."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "employee", "received", "the", "most", "awards", "in", "evaluations", "?", "Give", "me", "the", "employee", "name", "."], "ru": ["Какой", "сотрудник", "получил", "больше", "всего", "наград", "в", "результате", "оценки", "?", "Показать", "имя", "сотрудника", "."]}, "query_toks": {"en": ["select", "t1.name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1.employee_id", "=", "t2.employee_id", "group", "by", "t2.employee_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1.employee_id", "=", "t2.employee_id", "group", "by", "t2.employee_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1.employee_id", "=", "t2.employee_id", "group", "by", "t2.employee_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1.employee_id", "=", "t2.employee_id", "group", "by", "t2.employee_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0280", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1;", "ru": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1;"}, "question": {"en": "Find the name of the employee who got the highest one time bonus.", "ru": "Найдите имя сотрудника, получившего самый высокий разовый бонус."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 17, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 17, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "name", "of", "the", "employee", "who", "got", "the", "highest", "one", "time", "bonus", "."], "ru": ["Найдите", "имя", "сотрудника", ",", "получившего", "самый", "высокий", "разовый", "бонус", "."]}, "query_toks": {"en": ["select", "t1.name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1.employee_id", "=", "t2.employee_id", "order", "by", "t2.bonus", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1.employee_id", "=", "t2.employee_id", "order", "by", "t2.bonus", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1.employee_id", "=", "t2.employee_id", "order", "by", "t2.bonus", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1.employee_id", "=", "t2.employee_id", "order", "by", "t2.bonus", "desc", "limit", "1", ";"]}}, {"id": "D_0281", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1;", "ru": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1;"}, "question": {"en": "Which employee received the biggest bonus? Give me the employee name.", "ru": "Какой сотрудник получил самый большой бонус? Имя сотрудника."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 17, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 17, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "employee", "received", "the", "biggest", "bonus", "?", "Give", "me", "the", "employee", "name", "."], "ru": ["Какой", "сотрудник", "получил", "самый", "большой", "бонус", "?", "Имя", "сотрудника", "."]}, "query_toks": {"en": ["select", "t1.name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1.employee_id", "=", "t2.employee_id", "order", "by", "t2.bonus", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1.employee_id", "=", "t2.employee_id", "order", "by", "t2.bonus", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1.employee_id", "=", "t2.employee_id", "order", "by", "t2.bonus", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", "from", "employee", "as", "t1", "join", "evaluation", "as", "t2", "on", "t1.employee_id", "=", "t2.employee_id", "order", "by", "t2.bonus", "desc", "limit", "1", ";"]}}, {"id": "D_0282", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation);", "ru": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation);"}, "question": {"en": "Find the names of employees who never won any award in the evaluation.", "ru": "Имена сотрудников, которые никогда не получали награды в результате оценки персонала."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "names", "of", "employees", "who", "never", "won", "any", "award", "in", "the", "evaluation", "."], "ru": ["Имена", "сотрудников", ",", "которые", "никогда", "не", "получали", "награды", "в", "результате", "оценки", "персонала", "."]}, "query_toks": {"en": ["select", "name", "from", "employee", "where", "employee_id", "not", "in", "(", "select", "employee_id", "from", "evaluation", ")", ";"], "ru": ["select", "name", "from", "employee", "where", "employee_id", "not", "in", "(", "select", "employee_id", "from", "evaluation", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "employee", "where", "employee_id", "not", "in", "(", "select", "employee_id", "from", "evaluation", ")", ";"], "ru": ["select", "name", "from", "employee", "where", "employee_id", "not", "in", "(", "select", "employee_id", "from", "evaluation", ")", ";"]}}, {"id": "D_0283", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation);", "ru": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation);"}, "question": {"en": "What are the names of the employees who never received any evaluation?", "ru": "Как зовут сотрудников, которые никогда не получали оценок?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "employees", "who", "never", "received", "any", "evaluation", "?"], "ru": ["Как", "зовут", "сотрудников", ",", "которые", "никогда", "не", "получали", "оценок", "?"]}, "query_toks": {"en": ["select", "name", "from", "employee", "where", "employee_id", "not", "in", "(", "select", "employee_id", "from", "evaluation", ")", ";"], "ru": ["select", "name", "from", "employee", "where", "employee_id", "not", "in", "(", "select", "employee_id", "from", "evaluation", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "employee", "where", "employee_id", "not", "in", "(", "select", "employee_id", "from", "evaluation", ")", ";"], "ru": ["select", "name", "from", "employee", "where", "employee_id", "not", "in", "(", "select", "employee_id", "from", "evaluation", ")", ";"]}}, {"id": "D_0284", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the name of the shop that is hiring the largest number of employees?", "ru": "Как называется магазин, в котором работает больше всего сотрудников?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "shop", "that", "is", "hiring", "the", "largest", "number", "of", "employees", "?"], "ru": ["Как", "называется", "магазин", ",", "в", "котором", "работает", "больше", "всего", "сотрудников", "?"]}, "query_toks": {"en": ["select", "t2.name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1.shop_id", "=", "t2.shop_id", "group", "by", "t1.shop_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1.shop_id", "=", "t2.shop_id", "group", "by", "t1.shop_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1.shop_id", "=", "t2.shop_id", "group", "by", "t1.shop_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1.shop_id", "=", "t2.shop_id", "group", "by", "t1.shop_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0285", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which shop has the most employees? Give me the shop name.", "ru": "В каком магазине больше всего сотрудников? Название магазина."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "shop", "has", "the", "most", "employees", "?", "Give", "me", "the", "shop", "name", "."], "ru": ["В", "каком", "магазине", "больше", "всего", "сотрудников", "?", "Название", "магазина", "."]}, "query_toks": {"en": ["select", "t2.name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1.shop_id", "=", "t2.shop_id", "group", "by", "t1.shop_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1.shop_id", "=", "t2.shop_id", "group", "by", "t1.shop_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1.shop_id", "=", "t2.shop_id", "group", "by", "t1.shop_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1.shop_id", "=", "t2.shop_id", "group", "by", "t1.shop_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0286", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring);", "ru": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring);"}, "question": {"en": "Find the name of the shops that do not hire any employee.", "ru": "Найти названия магазинов, в которых нет сотрудников."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "name", "of", "the", "shops", "that", "do", "not", "hire", "any", "employee", "."], "ru": ["Найти", "названия", "магазинов", ",", "в", "которых", "нет", "сотрудников", "."]}, "query_toks": {"en": ["select", "name", "from", "shop", "where", "shop_id", "not", "in", "(", "select", "shop_id", "from", "hiring", ")", ";"], "ru": ["select", "name", "from", "shop", "where", "shop_id", "not", "in", "(", "select", "shop_id", "from", "hiring", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "shop", "where", "shop_id", "not", "in", "(", "select", "shop_id", "from", "hiring", ")", ";"], "ru": ["select", "name", "from", "shop", "where", "shop_id", "not", "in", "(", "select", "shop_id", "from", "hiring", ")", ";"]}}, {"id": "D_0287", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring);", "ru": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring);"}, "question": {"en": "Which shops run with no employees? Find the shop names", "ru": "Какие магазины работают без сотрудников? Найди названия магазинов"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "shops", "run", "with", "no", "employees", "?", "Find", "the", "shop", "names"], "ru": ["Какие", "магазины", "работают", "без", "сотрудников", "?", "Найди", "названия", "магазинов"]}, "query_toks": {"en": ["select", "name", "from", "shop", "where", "shop_id", "not", "in", "(", "select", "shop_id", "from", "hiring", ")", ";"], "ru": ["select", "name", "from", "shop", "where", "shop_id", "not", "in", "(", "select", "shop_id", "from", "hiring", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "shop", "where", "shop_id", "not", "in", "(", "select", "shop_id", "from", "hiring", ")", ";"], "ru": ["select", "name", "from", "shop", "where", "shop_id", "not", "in", "(", "select", "shop_id", "from", "hiring", ")", ";"]}}, {"id": "D_0288", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name;", "ru": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name;"}, "question": {"en": "Find the number of employees hired in each shop; show the shop name as well.", "ru": "Количество сотрудников, нанятых в каждом магазине; также указать название магазина."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "employees", "hired", "in", "each", "shop", ";", "show", "the", "shop", "name", "as", "well", "."], "ru": ["Количество", "сотрудников", ",", "нанятых", "в", "каждом", "магазине", ";", "также", "указать", "название", "магазина", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "t2.name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1.shop_id", "=", "t2.shop_id", "group", "by", "t2.name", ";"], "ru": ["select", "count", "(", "*", ")", ",", "t2.name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1.shop_id", "=", "t2.shop_id", "group", "by", "t2.name", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "t2.name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1.shop_id", "=", "t2.shop_id", "group", "by", "t2.name", ";"], "ru": ["select", "count", "(", "*", ")", ",", "t2.name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1.shop_id", "=", "t2.shop_id", "group", "by", "t2.name", ";"]}}, {"id": "D_0289", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name;", "ru": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name;"}, "question": {"en": "For each shop, return the number of employees working there and the name of the shop.", "ru": "Для каждого магазина показать количество работающих в нем сотрудников и название магазина."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 5, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["For", "each", "shop", ",", "return", "the", "number", "of", "employees", "working", "there", "and", "the", "name", "of", "the", "shop", "."], "ru": ["Для", "каждого", "магазина", "показать", "количество", "работающих", "в", "нем", "сотрудников", "и", "название", "магазина", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "t2.name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1.shop_id", "=", "t2.shop_id", "group", "by", "t2.name", ";"], "ru": ["select", "count", "(", "*", ")", ",", "t2.name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1.shop_id", "=", "t2.shop_id", "group", "by", "t2.name", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "t2.name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1.shop_id", "=", "t2.shop_id", "group", "by", "t2.name", ";"], "ru": ["select", "count", "(", "*", ")", ",", "t2.name", "from", "hiring", "as", "t1", "join", "shop", "as", "t2", "on", "t1.shop_id", "=", "t2.shop_id", "group", "by", "t2.name", ";"]}}, {"id": "D_0290", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(bonus) FROM evaluation;", "ru": "SELECT sum(bonus) FROM evaluation;"}, "question": {"en": "What is total bonus given in all evaluations?", "ru": "Какой общий бонус предоставляется во всех оценках?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[4, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[4, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "total", "bonus", "given", "in", "all", "evaluations", "?"], "ru": ["Какой", "общий", "бонус", "предоставляется", "во", "всех", "оценках", "?"]}, "query_toks": {"en": ["select", "sum", "(", "bonus", ")", "from", "evaluation", ";"], "ru": ["select", "sum", "(", "bonus", ")", "from", "evaluation", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "bonus", ")", "from", "evaluation", ";"], "ru": ["select", "sum", "(", "bonus", ")", "from", "evaluation", ";"]}}, {"id": "D_0291", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(bonus) FROM evaluation;", "ru": "SELECT sum(bonus) FROM evaluation;"}, "question": {"en": "Find the total amount of bonus given in all the evaluations.", "ru": "Найдите общую сумму бонуса, полученного во всех оценках."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[4, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[4, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "total", "amount", "of", "bonus", "given", "in", "all", "the", "evaluations", "."], "ru": ["Найдите", "общую", "сумму", "бонуса", ",", "полученного", "во", "всех", "оценках", "."]}, "query_toks": {"en": ["select", "sum", "(", "bonus", ")", "from", "evaluation", ";"], "ru": ["select", "sum", "(", "bonus", ")", "from", "evaluation", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "bonus", ")", "from", "evaluation", ";"], "ru": ["select", "sum", "(", "bonus", ")", "from", "evaluation", ";"]}}, {"id": "D_0292", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT * FROM hiring;", "ru": "SELECT * FROM hiring;"}, "question": {"en": "Give me all the information about hiring.", "ru": "Показывать всю информацию о найме."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "me", "all", "the", "information", "about", "hiring", "."], "ru": ["Показывать", "всю", "информацию", "о", "найме", "."]}, "query_toks": {"en": ["select", "*", "from", "hiring", ";"], "ru": ["select", "*", "from", "hiring", ";"]}, "query_toks_no_values": {"en": ["select", "*", "from", "hiring", ";"], "ru": ["select", "*", "from", "hiring", ";"]}}, {"id": "D_0293", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT * FROM hiring;", "ru": "SELECT * FROM hiring;"}, "question": {"en": "What is all the information about hiring?", "ru": "Какая есть вся информация о найме?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "all", "the", "information", "about", "hiring", "?"], "ru": ["Какая", "есть", "вся", "информация", "о", "найме", "?"]}, "query_toks": {"en": ["select", "*", "from", "hiring", ";"], "ru": ["select", "*", "from", "hiring", ";"]}, "query_toks_no_values": {"en": ["select", "*", "from", "hiring", ";"], "ru": ["select", "*", "from", "hiring", ";"]}}, {"id": "D_0294", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000;", "ru": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000;"}, "question": {"en": "Which district has both stores with less than 3000 products and stores with more than 10000 products?", "ru": "В каком районе есть магазины с менее чем 3000 товаров и магазины с более чем 10000 товаров?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 4, [0, [0, 9, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 10000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 4, [0, [0, 9, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 10000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Which", "district", "has", "both", "stores", "with", "less", "than", "3000", "products", "and", "stores", "with", "more", "than", "10000", "products", "?"], "ru": ["В", "каком", "районе", "есть", "магазины", "с", "менее", "чем", "3000", "товаров", "и", "магазины", "с", "более", "чем", "10000", "товаров", "?"]}, "query_toks": {"en": ["select", "district", "from", "shop", "where", "number_products", "<", "3000", "intersect", "select", "district", "from", "shop", "where", "number_products", ">", "10000", ";"], "ru": ["select", "district", "from", "shop", "where", "number_products", "<", "3000", "intersect", "select", "district", "from", "shop", "where", "number_products", ">", "10000", ";"]}, "query_toks_no_values": {"en": ["select", "district", "from", "shop", "where", "number_products", "<", "3000", "intersect", "select", "district", "from", "shop", "where", "number_products", ">", "10000", ";"], "ru": ["select", "district", "from", "shop", "where", "number_products", "<", "3000", "intersect", "select", "district", "from", "shop", "where", "number_products", ">", "10000", ";"]}}, {"id": "D_0295", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000;", "ru": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000;"}, "question": {"en": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.", "ru": "Найдите районы, в которых есть магазины, продающие менее 3000 товаров, и магазины, продающие более 10000 товаров."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 4, [0, [0, 9, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 10000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 4, [0, [0, 9, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 10000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "districts", "in", "which", "there", "are", "both", "shops", "selling", "less", "than", "3000", "products", "and", "shops", "selling", "more", "than", "10000", "products", "."], "ru": ["Найдите", "районы", ",", "в", "которых", "есть", "магазины", ",", "продающие", "менее", "3000", "товаров", ",", "и", "магазины", ",", "продающие", "более", "10000", "товаров", "."]}, "query_toks": {"en": ["select", "district", "from", "shop", "where", "number_products", "<", "3000", "intersect", "select", "district", "from", "shop", "where", "number_products", ">", "10000", ";"], "ru": ["select", "district", "from", "shop", "where", "number_products", "<", "3000", "intersect", "select", "district", "from", "shop", "where", "number_products", ">", "10000", ";"]}, "query_toks_no_values": {"en": ["select", "district", "from", "shop", "where", "number_products", "<", "3000", "intersect", "select", "district", "from", "shop", "where", "number_products", ">", "10000", ";"], "ru": ["select", "district", "from", "shop", "where", "number_products", "<", "3000", "intersect", "select", "district", "from", "shop", "where", "number_products", ">", "10000", ";"]}}, {"id": "D_0296", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT LOCATION) FROM shop;", "ru": "SELECT count(DISTINCT LOCATION) FROM shop;"}, "question": {"en": "How many different store locations are there?", "ru": "Сколько есть всего разных магазинов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 7, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 7, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "different", "store", "locations", "are", "there", "?"], "ru": ["Сколько", "есть", "всего", "разных", "магазинов", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "location", ")", "from", "shop", ";"], "ru": ["select", "count", "(", "distinct", "location", ")", "from", "shop", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "location", ")", "from", "shop", ";"], "ru": ["select", "count", "(", "distinct", "location", ")", "from", "shop", ";"]}}, {"id": "D_0297", "db_id": "employee_hire_evaluation", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT LOCATION) FROM shop;", "ru": "SELECT count(DISTINCT LOCATION) FROM shop;"}, "question": {"en": "Count the number of distinct store locations.", "ru": "Подсчитайте количество различных магазинов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 7, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 7, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "distinct", "store", "locations", "."], "ru": ["Подсчитайте", "количество", "различных", "магазинов", "."]}, "query_toks": {"en": ["select", "count", "(", "distinct", "location", ")", "from", "shop", ";"], "ru": ["select", "count", "(", "distinct", "location", ")", "from", "shop", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "location", ")", "from", "shop", ";"], "ru": ["select", "count", "(", "distinct", "location", ")", "from", "shop", ";"]}}, {"id": "D_0298", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Documents;", "ru": "SELECT count(*) FROM Documents;"}, "question": {"en": "How many documents do we have?", "ru": "Сколько у нас документов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "documents", "do", "we", "have", "?"], "ru": ["Сколько", "у", "нас", "документов", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "documents", ";"], "ru": ["select", "count", "(", "*", ")", "from", "documents", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "documents", ";"], "ru": ["select", "count", "(", "*", ")", "from", "documents", ";"]}}, {"id": "D_0299", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Documents;", "ru": "SELECT count(*) FROM Documents;"}, "question": {"en": "Count the number of documents.", "ru": "Подсчитайте количество документов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "documents", "."], "ru": ["Подсчитайте", "количество", "документов", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "documents", ";"], "ru": ["select", "count", "(", "*", ")", "from", "documents", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "documents", ";"], "ru": ["select", "count", "(", "*", ")", "from", "documents", ";"]}}, {"id": "D_0300", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT document_id ,  document_name ,  document_description FROM Documents;", "ru": "SELECT document_id ,  document_name ,  document_description FROM Documents;"}, "question": {"en": "List document IDs, document names, and document descriptions for all documents.", "ru": "Перечислите id документов, названия документов и описания документов для всех документов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "document", "IDs", ",", "document", "names", ",", "and", "document", "descriptions", "for", "all", "documents", "."], "ru": ["Перечислите", "id", "документов", ",", "названия", "документов", "и", "описания", "документов", "для", "всех", "документов", "."]}, "query_toks": {"en": ["select", "document_id", ",", "document_name", ",", "document_description", "from", "documents", ";"], "ru": ["select", "document_id", ",", "document_name", ",", "document_description", "from", "documents", ";"]}, "query_toks_no_values": {"en": ["select", "document_id", ",", "document_name", ",", "document_description", "from", "documents", ";"], "ru": ["select", "document_id", ",", "document_name", ",", "document_description", "from", "documents", ";"]}}, {"id": "D_0301", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT document_id ,  document_name ,  document_description FROM Documents;", "ru": "SELECT document_id ,  document_name ,  document_description FROM Documents;"}, "question": {"en": "What are the ids, names, and descriptions for all documents?", "ru": "Какие id, названия и описания у всех документов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "ids", ",", "names", ",", "and", "descriptions", "for", "all", "documents", "?"], "ru": ["Какие", "id", ",", "названия", "и", "описания", "у", "всех", "документов", "?"]}, "query_toks": {"en": ["select", "document_id", ",", "document_name", ",", "document_description", "from", "documents", ";"], "ru": ["select", "document_id", ",", "document_name", ",", "document_description", "from", "documents", ";"]}, "query_toks_no_values": {"en": ["select", "document_id", ",", "document_name", ",", "document_description", "from", "documents", ";"], "ru": ["select", "document_id", ",", "document_name", ",", "document_description", "from", "documents", ";"]}}, {"id": "D_0302", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\";", "ru": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%д%\";"}, "question": {"en": "What is the document name and template id for document with description with the letter 'w' in it?", "ru": "Какое название документа и id шаблона для документа с описанием, содержащим букву “д\"?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%w%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%д%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "document", "name", "and", "template", "id", "for", "document", "with", "description", "with", "the", "letter", "'", "w", "'", "in", "it", "?"], "ru": ["Какое", "название", "документа", "и", "id", "шаблона", "для", "документа", "с", "описанием", ",", "содержащим", "букву", "“", "д", "''", "?"]}, "query_toks": {"en": ["select", "document_name", ",", "template_id", "from", "documents", "where", "document_description", "like", "\"%w%\"", ";"], "ru": ["select", "document_name", ",", "template_id", "from", "documents", "where", "document_description", "like", "\"%д%\"", ";"]}, "query_toks_no_values": {"en": ["select", "document_name", ",", "template_id", "from", "documents", "where", "document_description", "like", "value", ";"], "ru": ["select", "document_name", ",", "template_id", "from", "documents", "where", "document_description", "like", "value", ";"]}}, {"id": "D_0303", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\";", "ru": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%д%\";"}, "question": {"en": "Return the names and template ids for documents that contain the letter w in their description.", "ru": "Отобразить названия и id шаблонов для документов, которые содержат букву \"д\" в своем описании."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%w%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%д%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "names", "and", "template", "ids", "for", "documents", "that", "contain", "the", "letter", "w", "in", "their", "description", "."], "ru": ["Отобразить", "названия", "и", "id", "шаблонов", "для", "документов", ",", "которые", "содержат", "букву", "``", "д", "''", "в", "своем", "описании", "."]}, "query_toks": {"en": ["select", "document_name", ",", "template_id", "from", "documents", "where", "document_description", "like", "\"%w%\"", ";"], "ru": ["select", "document_name", ",", "template_id", "from", "documents", "where", "document_description", "like", "\"%д%\"", ";"]}, "query_toks_no_values": {"en": ["select", "document_name", ",", "template_id", "from", "documents", "where", "document_description", "like", "value", ";"], "ru": ["select", "document_name", ",", "template_id", "from", "documents", "where", "document_description", "like", "value", ";"]}}, {"id": "D_0304", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\";", "ru": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Куприн CV\";"}, "question": {"en": "What is the document id, template id and description for document named \"Robbin CV\"?", "ru": "Каков id документа, id шаблона и описание документа с именем \"Куприн CV\"?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Robbin CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Куприн CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "document", "id", ",", "template", "id", "and", "description", "for", "document", "named", "``", "Robbin", "CV", "''", "?"], "ru": ["Каков", "id", "документа", ",", "id", "шаблона", "и", "описание", "документа", "с", "именем", "``", "Куприн", "CV", "''", "?"]}, "query_toks": {"en": ["select", "document_id", ",", "template_id", ",", "document_description", "from", "documents", "where", "document_name", "=", "\"Robbin CV\"", ";"], "ru": ["select", "document_id", ",", "template_id", ",", "document_description", "from", "documents", "where", "document_name", "=", "\"Куприн CV\"", ";"]}, "query_toks_no_values": {"en": ["select", "document_id", ",", "template_id", ",", "document_description", "from", "documents", "where", "document_name", "=", "value", ";"], "ru": ["select", "document_id", ",", "template_id", ",", "document_description", "from", "documents", "where", "document_name", "=", "value", ";"]}}, {"id": "D_0305", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\";", "ru": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Куприн CV\";"}, "question": {"en": "Return the document id, template id, and description for the document with the name Robbin CV.", "ru": "Показывать id документа, id шаблона и описание для документа с названием Куприн CV."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Robbin CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Куприн CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "document", "id", ",", "template", "id", ",", "and", "description", "for", "the", "document", "with", "the", "name", "Robbin", "CV", "."], "ru": ["Показывать", "id", "документа", ",", "id", "шаблона", "и", "описание", "для", "документа", "с", "названием", "Куприн", "CV", "."]}, "query_toks": {"en": ["select", "document_id", ",", "template_id", ",", "document_description", "from", "documents", "where", "document_name", "=", "\"Robbin CV\"", ";"], "ru": ["select", "document_id", ",", "template_id", ",", "document_description", "from", "documents", "where", "document_name", "=", "\"Куприн CV\"", ";"]}, "query_toks_no_values": {"en": ["select", "document_id", ",", "template_id", ",", "document_description", "from", "documents", "where", "document_name", "=", "value", ";"], "ru": ["select", "document_id", ",", "template_id", ",", "document_description", "from", "documents", "where", "document_name", "=", "value", ";"]}}, {"id": "D_0306", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT template_id) FROM Documents;", "ru": "SELECT count(DISTINCT template_id) FROM Documents;"}, "question": {"en": "How many different templates do all document use?", "ru": "Сколько различных шаблонов используется во всех документах?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "different", "templates", "do", "all", "document", "use", "?"], "ru": ["Сколько", "различных", "шаблонов", "используется", "во", "всех", "документах", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "template_id", ")", "from", "documents", ";"], "ru": ["select", "count", "(", "distinct", "template_id", ")", "from", "documents", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "template_id", ")", "from", "documents", ";"], "ru": ["select", "count", "(", "distinct", "template_id", ")", "from", "documents", ";"]}}, {"id": "D_0307", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT template_id) FROM Documents;", "ru": "SELECT count(DISTINCT template_id) FROM Documents;"}, "question": {"en": "Count the number of different templates used for documents.", "ru": "Подсчитать количество различных шаблонов, используемых для документов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "different", "templates", "used", "for", "documents", "."], "ru": ["Подсчитать", "количество", "различных", "шаблонов", ",", "используемых", "для", "документов", "."]}, "query_toks": {"en": ["select", "count", "(", "distinct", "template_id", ")", "from", "documents", ";"], "ru": ["select", "count", "(", "distinct", "template_id", ")", "from", "documents", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "template_id", ")", "from", "documents", ";"], "ru": ["select", "count", "(", "distinct", "template_id", ")", "from", "documents", ";"]}}, {"id": "D_0308", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT';", "ru": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT';"}, "question": {"en": "How many documents are using the template with type code 'PPT'?", "ru": "Сколько документов используют шаблон с кодом типа \"PPT\"?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"PPT\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"PPT\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "documents", "are", "using", "the", "template", "with", "type", "code", "'PPT", "'", "?"], "ru": ["Сколько", "документов", "используют", "шаблон", "с", "кодом", "типа", "``", "PPT", "''", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t2.template_type_code", "=", "\"PPT\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t2.template_type_code", "=", "\"PPT\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t2.template_type_code", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t2.template_type_code", "=", "value", ";"]}}, {"id": "D_0309", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT';", "ru": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT';"}, "question": {"en": "Count the number of documents that use the PPT template type.", "ru": "Подсчитайте количество документов, использующих тип шаблона PPT."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"PPT\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"PPT\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "documents", "that", "use", "the", "PPT", "template", "type", "."], "ru": ["Подсчитайте", "количество", "документов", ",", "использующих", "тип", "шаблона", "PPT", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t2.template_type_code", "=", "\"PPT\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t2.template_type_code", "=", "\"PPT\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t2.template_type_code", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t2.template_type_code", "=", "value", ";"]}}, {"id": "D_0310", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id;", "ru": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id;"}, "question": {"en": "Show all template ids and number of documents using each template.", "ru": "Показать все id шаблонов и количество документов, использующих каждый шаблон."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "all", "template", "ids", "and", "number", "of", "documents", "using", "each", "template", "."], "ru": ["Показать", "все", "id", "шаблонов", "и", "количество", "документов", ",", "использующих", "каждый", "шаблон", "."]}, "query_toks": {"en": ["select", "template_id", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "template_id", ";"], "ru": ["select", "template_id", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "template_id", ";"]}, "query_toks_no_values": {"en": ["select", "template_id", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "template_id", ";"], "ru": ["select", "template_id", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "template_id", ";"]}}, {"id": "D_0311", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id;", "ru": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id;"}, "question": {"en": "What are all different template ids used for documents, and how many times were each of them used?", "ru": "Какие id различных шаблонов используются для документов и сколько раз каждый из них использовался?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "all", "different", "template", "ids", "used", "for", "documents", ",", "and", "how", "many", "times", "were", "each", "of", "them", "used", "?"], "ru": ["Какие", "id", "различных", "шаблонов", "используются", "для", "документов", "и", "сколько", "раз", "каждый", "из", "них", "использовался", "?"]}, "query_toks": {"en": ["select", "template_id", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "template_id", ";"], "ru": ["select", "template_id", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "template_id", ";"]}, "query_toks_no_values": {"en": ["select", "template_id", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "template_id", ";"], "ru": ["select", "template_id", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "template_id", ";"]}}, {"id": "D_0312", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the id and type code for the template used by the most documents?", "ru": "Какой id и код типа для шаблона используется в большинстве документов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "id", "and", "type", "code", "for", "the", "template", "used", "by", "the", "most", "documents", "?"], "ru": ["Какой", "id", "и", "код", "типа", "для", "шаблона", "используется", "в", "большинстве", "документов", "?"]}, "query_toks": {"en": ["select", "t1.template_id", ",", "t2.template_type_code", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.template_id", ",", "t2.template_type_code", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.template_id", ",", "t2.template_type_code", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.template_id", ",", "t2.template_type_code", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0313", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Return the id and type code of the template that is used for the greatest number of documents.", "ru": "Показать id и код типа шаблона, который используется для наибольшего количества документов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "id", "and", "type", "code", "of", "the", "template", "that", "is", "used", "for", "the", "greatest", "number", "of", "documents", "."], "ru": ["Показать", "id", "и", "код", "типа", "шаблона", ",", "который", "используется", "для", "наибольшего", "количества", "документов", "."]}, "query_toks": {"en": ["select", "t1.template_id", ",", "t2.template_type_code", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.template_id", ",", "t2.template_type_code", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.template_id", ",", "t2.template_type_code", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.template_id", ",", "t2.template_type_code", "from", "documents", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0314", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1;", "ru": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1;"}, "question": {"en": "Show ids for all templates that are used by more than one document.", "ru": "Показать id для всех шаблонов, которые используются более чем в одном документе."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "ids", "for", "all", "templates", "that", "are", "used", "by", "more", "than", "one", "document", "."], "ru": ["Показать", "id", "для", "всех", "шаблонов", ",", "которые", "используются", "более", "чем", "в", "одном", "документе", "."]}, "query_toks": {"en": ["select", "template_id", "from", "documents", "group", "by", "template_id", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "template_id", "from", "documents", "group", "by", "template_id", "having", "count", "(", "*", ")", ">", "1", ";"]}, "query_toks_no_values": {"en": ["select", "template_id", "from", "documents", "group", "by", "template_id", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "template_id", "from", "documents", "group", "by", "template_id", "having", "count", "(", "*", ")", ">", "1", ";"]}}, {"id": "D_0315", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1;", "ru": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1;"}, "question": {"en": "What are the template ids of any templates used in more than a single document?", "ru": "Каковы id любых шаблонов, используемых более чем в одном документе?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "template", "ids", "of", "any", "templates", "used", "in", "more", "than", "a", "single", "document", "?"], "ru": ["Каковы", "id", "любых", "шаблонов", ",", "используемых", "более", "чем", "в", "одном", "документе", "?"]}, "query_toks": {"en": ["select", "template_id", "from", "documents", "group", "by", "template_id", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "template_id", "from", "documents", "group", "by", "template_id", "having", "count", "(", "*", ")", ">", "1", ";"]}, "query_toks_no_values": {"en": ["select", "template_id", "from", "documents", "group", "by", "template_id", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "template_id", "from", "documents", "group", "by", "template_id", "having", "count", "(", "*", ")", ">", "1", ";"]}}, {"id": "D_0316", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents;", "ru": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents;"}, "question": {"en": "Show ids for all templates not used by any document.", "ru": "Показать id для всех шаблонов, которые не используются ни в одном документе."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["Show", "ids", "for", "all", "templates", "not", "used", "by", "any", "document", "."], "ru": ["Показать", "id", "для", "всех", "шаблонов", ",", "которые", "не", "используются", "ни", "в", "одном", "документе", "."]}, "query_toks": {"en": ["select", "template_id", "from", "templates", "except", "select", "template_id", "from", "documents", ";"], "ru": ["select", "template_id", "from", "templates", "except", "select", "template_id", "from", "documents", ";"]}, "query_toks_no_values": {"en": ["select", "template_id", "from", "templates", "except", "select", "template_id", "from", "documents", ";"], "ru": ["select", "template_id", "from", "templates", "except", "select", "template_id", "from", "documents", ";"]}}, {"id": "D_0317", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents;", "ru": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents;"}, "question": {"en": "What are the ids for templates that are not used in any documents?", "ru": "Какие id у шаблонов, которые не используются ни в каких документах?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["What", "are", "the", "ids", "for", "templates", "that", "are", "not", "used", "in", "any", "documents", "?"], "ru": ["Какие", "id", "у", "шаблонов", ",", "которые", "не", "используются", "ни", "в", "каких", "документах", "?"]}, "query_toks": {"en": ["select", "template_id", "from", "templates", "except", "select", "template_id", "from", "documents", ";"], "ru": ["select", "template_id", "from", "templates", "except", "select", "template_id", "from", "documents", ";"]}, "query_toks_no_values": {"en": ["select", "template_id", "from", "templates", "except", "select", "template_id", "from", "documents", ";"], "ru": ["select", "template_id", "from", "templates", "except", "select", "template_id", "from", "documents", ";"]}}, {"id": "D_0318", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Templates;", "ru": "SELECT count(*) FROM Templates;"}, "question": {"en": "How many templates do we have?", "ru": "Сколько у нас шаблонов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "templates", "do", "we", "have", "?"], "ru": ["Сколько", "у", "нас", "шаблонов", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "templates", ";"], "ru": ["select", "count", "(", "*", ")", "from", "templates", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "templates", ";"], "ru": ["select", "count", "(", "*", ")", "from", "templates", ";"]}}, {"id": "D_0319", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Templates;", "ru": "SELECT count(*) FROM Templates;"}, "question": {"en": "Count the number of templates.", "ru": "Подсчитайте количество шаблонов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "templates", "."], "ru": ["Подсчитайте", "количество", "шаблонов", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "templates", ";"], "ru": ["select", "count", "(", "*", ")", "from", "templates", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "templates", ";"], "ru": ["select", "count", "(", "*", ")", "from", "templates", ";"]}}, {"id": "D_0320", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_id ,  version_number ,  template_type_code FROM Templates;", "ru": "SELECT template_id ,  version_number ,  template_type_code FROM Templates;"}, "question": {"en": "Show template ids, version numbers, and template type codes for all templates.", "ru": "Отображение id шаблонов, номеров версий и кодов типов шаблонов для всех шаблонов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "template", "ids", ",", "version", "numbers", ",", "and", "template", "type", "codes", "for", "all", "templates", "."], "ru": ["Отображение", "id", "шаблонов", ",", "номеров", "версий", "и", "кодов", "типов", "шаблонов", "для", "всех", "шаблонов", "."]}, "query_toks": {"en": ["select", "template_id", ",", "version_number", ",", "template_type_code", "from", "templates", ";"], "ru": ["select", "template_id", ",", "version_number", ",", "template_type_code", "from", "templates", ";"]}, "query_toks_no_values": {"en": ["select", "template_id", ",", "version_number", ",", "template_type_code", "from", "templates", ";"], "ru": ["select", "template_id", ",", "version_number", ",", "template_type_code", "from", "templates", ";"]}}, {"id": "D_0321", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_id ,  version_number ,  template_type_code FROM Templates;", "ru": "SELECT template_id ,  version_number ,  template_type_code FROM Templates;"}, "question": {"en": "What are the ids, version numbers, and type codes for each template?", "ru": "Каковы id, номера версий и коды типов для каждого шаблона?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "ids", ",", "version", "numbers", ",", "and", "type", "codes", "for", "each", "template", "?"], "ru": ["Каковы", "id", ",", "номера", "версий", "и", "коды", "типов", "для", "каждого", "шаблона", "?"]}, "query_toks": {"en": ["select", "template_id", ",", "version_number", ",", "template_type_code", "from", "templates", ";"], "ru": ["select", "template_id", ",", "version_number", ",", "template_type_code", "from", "templates", ";"]}, "query_toks_no_values": {"en": ["select", "template_id", ",", "version_number", ",", "template_type_code", "from", "templates", ";"], "ru": ["select", "template_id", ",", "version_number", ",", "template_type_code", "from", "templates", ";"]}}, {"id": "D_0322", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT template_type_code FROM Templates;", "ru": "SELECT DISTINCT template_type_code FROM Templates;"}, "question": {"en": "Show all distinct template type codes for all templates.", "ru": "Показать все коды типов отдельных шаблонов для всех шаблонов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "all", "distinct", "template", "type", "codes", "for", "all", "templates", "."], "ru": ["Показать", "все", "коды", "типов", "отдельных", "шаблонов", "для", "всех", "шаблонов", "."]}, "query_toks": {"en": ["select", "distinct", "template_type_code", "from", "templates", ";"], "ru": ["select", "distinct", "template_type_code", "from", "templates", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "template_type_code", "from", "templates", ";"], "ru": ["select", "distinct", "template_type_code", "from", "templates", ";"]}}, {"id": "D_0323", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT template_type_code FROM Templates;", "ru": "SELECT DISTINCT template_type_code FROM Templates;"}, "question": {"en": "What are the different template type codes?", "ru": "Какие существуют коды типов шаблонов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "different", "template", "type", "codes", "?"], "ru": ["Какие", "существуют", "коды", "типов", "шаблонов", "?"]}, "query_toks": {"en": ["select", "distinct", "template_type_code", "from", "templates", ";"], "ru": ["select", "distinct", "template_type_code", "from", "templates", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "template_type_code", "from", "templates", ";"], "ru": ["select", "distinct", "template_type_code", "from", "templates", ";"]}}, {"id": "D_0324", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\";", "ru": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\";"}, "question": {"en": "What are the ids of templates with template type code PP or PPT?", "ru": "Каковы id шаблонов с кодом типа шаблона PP или PPT?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"PP\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"PPT\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"PP\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"PPT\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "ids", "of", "templates", "with", "template", "type", "code", "PP", "or", "PPT", "?"], "ru": ["Каковы", "id", "шаблонов", "с", "кодом", "типа", "шаблона", "PP", "или", "PPT", "?"]}, "query_toks": {"en": ["select", "template_id", "from", "templates", "where", "template_type_code", "=", "\"PP\"", "or", "template_type_code", "=", "\"PPT\"", ";"], "ru": ["select", "template_id", "from", "templates", "where", "template_type_code", "=", "\"PP\"", "or", "template_type_code", "=", "\"PPT\"", ";"]}, "query_toks_no_values": {"en": ["select", "template_id", "from", "templates", "where", "template_type_code", "=", "value", "or", "template_type_code", "=", "value", ";"], "ru": ["select", "template_id", "from", "templates", "where", "template_type_code", "=", "value", "or", "template_type_code", "=", "value", ";"]}}, {"id": "D_0325", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\";", "ru": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\";"}, "question": {"en": "Return the ids of templates that have the code PP or PPT.", "ru": "id шаблонов с кодом PP или PPT."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"PP\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"PPT\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"PP\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"PPT\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "ids", "of", "templates", "that", "have", "the", "code", "PP", "or", "PPT", "."], "ru": ["id", "шаблонов", "с", "кодом", "PP", "или", "PPT", "."]}, "query_toks": {"en": ["select", "template_id", "from", "templates", "where", "template_type_code", "=", "\"PP\"", "or", "template_type_code", "=", "\"PPT\"", ";"], "ru": ["select", "template_id", "from", "templates", "where", "template_type_code", "=", "\"PP\"", "or", "template_type_code", "=", "\"PPT\"", ";"]}, "query_toks_no_values": {"en": ["select", "template_id", "from", "templates", "where", "template_type_code", "=", "value", "or", "template_type_code", "=", "value", ";"], "ru": ["select", "template_id", "from", "templates", "where", "template_type_code", "=", "value", "or", "template_type_code", "=", "value", ";"]}}, {"id": "D_0326", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\";", "ru": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\";"}, "question": {"en": "How many templates have template type code CV?", "ru": "Сколько шаблонов имеют код типа CV?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "templates", "have", "template", "type", "code", "CV", "?"], "ru": ["Сколько", "шаблонов", "имеют", "код", "типа", "CV", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "templates", "where", "template_type_code", "=", "\"CV\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "templates", "where", "template_type_code", "=", "\"CV\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "templates", "where", "template_type_code", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "templates", "where", "template_type_code", "=", "value", ";"]}}, {"id": "D_0327", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\";", "ru": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\";"}, "question": {"en": "Count the number of templates of the type CV.", "ru": "Количество шаблонов типа CV."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "templates", "of", "the", "type", "CV", "."], "ru": ["Количество", "шаблонов", "типа", "CV", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "templates", "where", "template_type_code", "=", "\"CV\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "templates", "where", "template_type_code", "=", "\"CV\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "templates", "where", "template_type_code", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "templates", "where", "template_type_code", "=", "value", ";"]}}, {"id": "D_0328", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5;", "ru": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5;"}, "question": {"en": "What is the version number and template type code for the template with version number later than 5?", "ru": "Какой номер версии и код типа шаблона для шаблона с номером версии старше 5?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "version", "number", "and", "template", "type", "code", "for", "the", "template", "with", "version", "number", "later", "than", "5", "?"], "ru": ["Какой", "номер", "версии", "и", "код", "типа", "шаблона", "для", "шаблона", "с", "номером", "версии", "старше", "5", "?"]}, "query_toks": {"en": ["select", "version_number", ",", "template_type_code", "from", "templates", "where", "version_number", ">", "5", ";"], "ru": ["select", "version_number", ",", "template_type_code", "from", "templates", "where", "version_number", ">", "5", ";"]}, "query_toks_no_values": {"en": ["select", "version_number", ",", "template_type_code", "from", "templates", "where", "version_number", ">", "5", ";"], "ru": ["select", "version_number", ",", "template_type_code", "from", "templates", "where", "version_number", ">", "5", ";"]}}, {"id": "D_0329", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5;", "ru": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5;"}, "question": {"en": "Return the version numbers and template type codes of templates with a version number greater than 5.", "ru": "Показывать номера версий и коды типов шаблонов для шаблонов с номером версии больше 5."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 5.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "version", "numbers", "and", "template", "type", "codes", "of", "templates", "with", "a", "version", "number", "greater", "than", "5", "."], "ru": ["Показывать", "номера", "версий", "и", "коды", "типов", "шаблонов", "для", "шаблонов", "с", "номером", "версии", "больше", "5", "."]}, "query_toks": {"en": ["select", "version_number", ",", "template_type_code", "from", "templates", "where", "version_number", ">", "5", ";"], "ru": ["select", "version_number", ",", "template_type_code", "from", "templates", "where", "version_number", ">", "5", ";"]}, "query_toks_no_values": {"en": ["select", "version_number", ",", "template_type_code", "from", "templates", "where", "version_number", ">", "5", ";"], "ru": ["select", "version_number", ",", "template_type_code", "from", "templates", "where", "version_number", ">", "5", ";"]}}, {"id": "D_0330", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code;", "ru": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code;"}, "question": {"en": "Show all template type codes and number of templates for each.", "ru": "Показывать все коды типов шаблонов и количество шаблонов для каждого типа."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "all", "template", "type", "codes", "and", "number", "of", "templates", "for", "each", "."], "ru": ["Показывать", "все", "коды", "типов", "шаблонов", "и", "количество", "шаблонов", "для", "каждого", "типа", "."]}, "query_toks": {"en": ["select", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "group", "by", "template_type_code", ";"], "ru": ["select", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "group", "by", "template_type_code", ";"]}, "query_toks_no_values": {"en": ["select", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "group", "by", "template_type_code", ";"], "ru": ["select", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "group", "by", "template_type_code", ";"]}}, {"id": "D_0331", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code;", "ru": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code;"}, "question": {"en": "What are the different template type codes, and how many templates correspond to each?", "ru": "Каковы разные коды типов шаблонов и сколько шаблонов соответствует каждому из них?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "different", "template", "type", "codes", ",", "and", "how", "many", "templates", "correspond", "to", "each", "?"], "ru": ["Каковы", "разные", "коды", "типов", "шаблонов", "и", "сколько", "шаблонов", "соответствует", "каждому", "из", "них", "?"]}, "query_toks": {"en": ["select", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "group", "by", "template_type_code", ";"], "ru": ["select", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "group", "by", "template_type_code", ";"]}, "query_toks_no_values": {"en": ["select", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "group", "by", "template_type_code", ";"], "ru": ["select", "template_type_code", ",", "count", "(", "*", ")", "from", "templates", "group", "by", "template_type_code", ";"]}}, {"id": "D_0332", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which template type code has most number of templates?", "ru": "Код какого типа шаблона имеет наибольшее количество шаблонов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "template", "type", "code", "has", "most", "number", "of", "templates", "?"], "ru": ["Код", "какого", "типа", "шаблона", "имеет", "наибольшее", "количество", "шаблонов", "?"]}, "query_toks": {"en": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0333", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Return the type code of the template type that the most templates belong to.", "ru": "Код типа шаблона, которому принадлежит большинство шаблонов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "type", "code", "of", "the", "template", "type", "that", "the", "most", "templates", "belong", "to", "."], "ru": ["Код", "типа", "шаблона", ",", "которому", "принадлежит", "большинство", "шаблонов", "."]}, "query_toks": {"en": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0334", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3;", "ru": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3;"}, "question": {"en": "Show all template type codes with less than three templates.", "ru": "Показать все коды типов шаблонов с менее чем тремя шаблонами."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 4, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 4, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "all", "template", "type", "codes", "with", "less", "than", "three", "templates", "."], "ru": ["Показать", "все", "коды", "типов", "шаблонов", "с", "менее", "чем", "тремя", "шаблонами", "."]}, "query_toks": {"en": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "having", "count", "(", "*", ")", "<", "3", ";"], "ru": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "having", "count", "(", "*", ")", "<", "3", ";"]}, "query_toks_no_values": {"en": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "having", "count", "(", "*", ")", "<", "3", ";"], "ru": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "having", "count", "(", "*", ")", "<", "3", ";"]}}, {"id": "D_0335", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3;", "ru": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3;"}, "question": {"en": "What are the codes of template types that have fewer than 3 templates?", "ru": "Какие коды типов шаблонов имеют менее 3 шаблонов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 4, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 4, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "codes", "of", "template", "types", "that", "have", "fewer", "than", "3", "templates", "?"], "ru": ["Какие", "коды", "типов", "шаблонов", "имеют", "менее", "3", "шаблонов", "?"]}, "query_toks": {"en": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "having", "count", "(", "*", ")", "<", "3", ";"], "ru": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "having", "count", "(", "*", ")", "<", "3", ";"]}, "query_toks_no_values": {"en": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "having", "count", "(", "*", ")", "<", "3", ";"], "ru": ["select", "template_type_code", "from", "templates", "group", "by", "template_type_code", "having", "count", "(", "*", ")", "<", "3", ";"]}}, {"id": "D_0336", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT min(Version_Number) ,  template_type_code FROM Templates;", "ru": "SELECT min(Version_Number) ,  template_type_code FROM Templates;"}, "question": {"en": "What the smallest version number and its template type code?", "ru": "Какой наименьший номер версии и ее код типа шаблона?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "the", "smallest", "version", "number", "and", "its", "template", "type", "code", "?"], "ru": ["Какой", "наименьший", "номер", "версии", "и", "ее", "код", "типа", "шаблона", "?"]}, "query_toks": {"en": ["select", "min", "(", "version_number", ")", ",", "template_type_code", "from", "templates", ";"], "ru": ["select", "min", "(", "version_number", ")", ",", "template_type_code", "from", "templates", ";"]}, "query_toks_no_values": {"en": ["select", "min", "(", "version_number", ")", ",", "template_type_code", "from", "templates", ";"], "ru": ["select", "min", "(", "version_number", ")", ",", "template_type_code", "from", "templates", ";"]}}, {"id": "D_0337", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT min(Version_Number) ,  template_type_code FROM Templates;", "ru": "SELECT min(Version_Number) ,  template_type_code FROM Templates;"}, "question": {"en": "Return the lowest version number, along with its corresponding template type code.", "ru": "Показать наименьший номер версии вместе с соответствующим кодом типа шаблона."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "lowest", "version", "number", ",", "along", "with", "its", "corresponding", "template", "type", "code", "."], "ru": ["Показать", "наименьший", "номер", "версии", "вместе", "с", "соответствующим", "кодом", "типа", "шаблона", "."]}, "query_toks": {"en": ["select", "min", "(", "version_number", ")", ",", "template_type_code", "from", "templates", ";"], "ru": ["select", "min", "(", "version_number", ")", ",", "template_type_code", "from", "templates", ";"]}, "query_toks_no_values": {"en": ["select", "min", "(", "version_number", ")", ",", "template_type_code", "from", "templates", ";"], "ru": ["select", "min", "(", "version_number", ")", ",", "template_type_code", "from", "templates", ";"]}}, {"id": "D_0338", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\";", "ru": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Список клиентов\";"}, "question": {"en": "What is the template type code of the template used by document with the name \"Data base\"?", "ru": "Какой код типа шаблона используется документом с названием «Список клиентов»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Data base\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Список клиентов\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "template", "type", "code", "of", "the", "template", "used", "by", "document", "with", "the", "name", "``", "Data", "base", "''", "?"], "ru": ["Какой", "код", "типа", "шаблона", "используется", "документом", "с", "названием", "«", "Список", "клиентов", "»", "?"]}, "query_toks": {"en": ["select", "t1.template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t2.document_name", "=", "\"Data base\"", ";"], "ru": ["select", "t1.template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t2.document_name", "=", "\"Список клиентов\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t2.document_name", "=", "value", ";"], "ru": ["select", "t1.template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t2.document_name", "=", "value", ";"]}}, {"id": "D_0339", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\";", "ru": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Список клиентов\";"}, "question": {"en": "Return the template type code of the template that is used by a document named Data base.", "ru": "Показать код типа шаблона у шаблона, который используется документом с названием Список клиентов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Data base\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Список клиентов\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "template", "type", "code", "of", "the", "template", "that", "is", "used", "by", "a", "document", "named", "Data", "base", "."], "ru": ["Показать", "код", "типа", "шаблона", "у", "шаблона", ",", "который", "используется", "документом", "с", "названием", "Список", "клиентов", "."]}, "query_toks": {"en": ["select", "t1.template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t2.document_name", "=", "\"Data base\"", ";"], "ru": ["select", "t1.template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t2.document_name", "=", "\"Список клиентов\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t2.document_name", "=", "value", ";"], "ru": ["select", "t1.template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t2.document_name", "=", "value", ";"]}}, {"id": "D_0340", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\";", "ru": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\";"}, "question": {"en": "Show all document names using templates with template type code BK.", "ru": "Показать все названия документов с использованием шаблонов с кодом типа шаблона BK."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"BK\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"BK\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "all", "document", "names", "using", "templates", "with", "template", "type", "code", "BK", "."], "ru": ["Показать", "все", "названия", "документов", "с", "использованием", "шаблонов", "с", "кодом", "типа", "шаблона", "BK", "."]}, "query_toks": {"en": ["select", "t2.document_name", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t1.template_type_code", "=", "\"BK\"", ";"], "ru": ["select", "t2.document_name", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t1.template_type_code", "=", "\"BK\"", ";"]}, "query_toks_no_values": {"en": ["select", "t2.document_name", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t1.template_type_code", "=", "value", ";"], "ru": ["select", "t2.document_name", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t1.template_type_code", "=", "value", ";"]}}, {"id": "D_0341", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\";", "ru": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\";"}, "question": {"en": "What are the names of documents that use templates with the code BK?", "ru": "Как называются документы, в которых используются шаблоны с кодом BK?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"BK\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"BK\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "documents", "that", "use", "templates", "with", "the", "code", "BK", "?"], "ru": ["Как", "называются", "документы", ",", "в", "которых", "используются", "шаблоны", "с", "кодом", "BK", "?"]}, "query_toks": {"en": ["select", "t2.document_name", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t1.template_type_code", "=", "\"BK\"", ";"], "ru": ["select", "t2.document_name", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t1.template_type_code", "=", "\"BK\"", ";"]}, "query_toks_no_values": {"en": ["select", "t2.document_name", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t1.template_type_code", "=", "value", ";"], "ru": ["select", "t2.document_name", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "where", "t1.template_type_code", "=", "value", ";"]}}, {"id": "D_0342", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code;", "ru": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code;"}, "question": {"en": "Show all template type codes and the number of documents using each type.", "ru": "Показать все коды типов шаблонов и количество документов, использующих каждый тип."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "all", "template", "type", "codes", "and", "the", "number", "of", "documents", "using", "each", "type", "."], "ru": ["Показать", "все", "коды", "типов", "шаблонов", "и", "количество", "документов", ",", "использующих", "каждый", "тип", "."]}, "query_toks": {"en": ["select", "t1.template_type_code", ",", "count", "(", "*", ")", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_type_code", ";"], "ru": ["select", "t1.template_type_code", ",", "count", "(", "*", ")", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_type_code", ";"]}, "query_toks_no_values": {"en": ["select", "t1.template_type_code", ",", "count", "(", "*", ")", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_type_code", ";"], "ru": ["select", "t1.template_type_code", ",", "count", "(", "*", ")", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_type_code", ";"]}}, {"id": "D_0343", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code;", "ru": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code;"}, "question": {"en": "What are the different template type codes, and how many documents use each type?", "ru": "Каковы разные коды типов шаблонов и в скольких документах используется каждый тип?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "different", "template", "type", "codes", ",", "and", "how", "many", "documents", "use", "each", "type", "?"], "ru": ["Каковы", "разные", "коды", "типов", "шаблонов", "и", "в", "скольких", "документах", "используется", "каждый", "тип", "?"]}, "query_toks": {"en": ["select", "t1.template_type_code", ",", "count", "(", "*", ")", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_type_code", ";"], "ru": ["select", "t1.template_type_code", ",", "count", "(", "*", ")", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_type_code", ";"]}, "query_toks_no_values": {"en": ["select", "t1.template_type_code", ",", "count", "(", "*", ")", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_type_code", ";"], "ru": ["select", "t1.template_type_code", ",", "count", "(", "*", ")", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_type_code", ";"]}}, {"id": "D_0344", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which template type code is used by most number of documents?", "ru": "Код какого типа шаблона используется в большинстве документов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "template", "type", "code", "is", "used", "by", "most", "number", "of", "documents", "?"], "ru": ["Код", "какого", "типа", "шаблона", "используется", "в", "большинстве", "документов", "?"]}, "query_toks": {"en": ["select", "t1.template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0345", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Return the code of the template type that is most commonly used in documents.", "ru": "Показать код типа шаблона, который чаще всего используется в документах."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "code", "of", "the", "template", "type", "that", "is", "most", "commonly", "used", "in", "documents", "."], "ru": ["Показать", "код", "типа", "шаблона", ",", "который", "чаще", "всего", "используется", "в", "документах", "."]}, "query_toks": {"en": ["select", "t1.template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", "group", "by", "t1.template_type_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0346", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id;", "ru": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id;"}, "question": {"en": "Show all template type codes that are not used by any document.", "ru": "Показать все коды типов шаблонов, которые не используются ни в одном документе."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["Show", "all", "template", "type", "codes", "that", "are", "not", "used", "by", "any", "document", "."], "ru": ["Показать", "все", "коды", "типов", "шаблонов", ",", "которые", "не", "используются", "ни", "в", "одном", "документе", "."]}, "query_toks": {"en": ["select", "template_type_code", "from", "templates", "except", "select", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", ";"], "ru": ["select", "template_type_code", "from", "templates", "except", "select", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", ";"]}, "query_toks_no_values": {"en": ["select", "template_type_code", "from", "templates", "except", "select", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", ";"], "ru": ["select", "template_type_code", "from", "templates", "except", "select", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", ";"]}}, {"id": "D_0347", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id;", "ru": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id;"}, "question": {"en": "What are the codes of template types that are not used for any document?", "ru": "Какие коды типов шаблонов не используются ни для одного документа?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["What", "are", "the", "codes", "of", "template", "types", "that", "are", "not", "used", "for", "any", "document", "?"], "ru": ["Какие", "коды", "типов", "шаблонов", "не", "используются", "ни", "для", "одного", "документа", "?"]}, "query_toks": {"en": ["select", "template_type_code", "from", "templates", "except", "select", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", ";"], "ru": ["select", "template_type_code", "from", "templates", "except", "select", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", ";"]}, "query_toks_no_values": {"en": ["select", "template_type_code", "from", "templates", "except", "select", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", ";"], "ru": ["select", "template_type_code", "from", "templates", "except", "select", "template_type_code", "from", "templates", "as", "t1", "join", "documents", "as", "t2", "on", "t1.template_id", "=", "t2.template_id", ";"]}}, {"id": "D_0348", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_type_code ,  template_type_description FROM Ref_template_types;", "ru": "SELECT template_type_code ,  template_type_description FROM Ref_template_types;"}, "question": {"en": "Show all template type codes and descriptions.", "ru": "Показать все коды и описания типов шаблонов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "all", "template", "type", "codes", "and", "descriptions", "."], "ru": ["Показать", "все", "коды", "и", "описания", "типов", "шаблонов", "."]}, "query_toks": {"en": ["select", "template_type_code", ",", "template_type_description", "from", "ref_template_types", ";"], "ru": ["select", "template_type_code", ",", "template_type_description", "from", "ref_template_types", ";"]}, "query_toks_no_values": {"en": ["select", "template_type_code", ",", "template_type_description", "from", "ref_template_types", ";"], "ru": ["select", "template_type_code", ",", "template_type_description", "from", "ref_template_types", ";"]}}, {"id": "D_0349", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_type_code ,  template_type_description FROM Ref_template_types;", "ru": "SELECT template_type_code ,  template_type_description FROM Ref_template_types;"}, "question": {"en": "What are the type codes and descriptions for all template types?", "ru": "Каковы коды типов и описания для всех типов шаблонов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "type", "codes", "and", "descriptions", "for", "all", "template", "types", "?"], "ru": ["Каковы", "коды", "типов", "и", "описания", "для", "всех", "типов", "шаблонов", "?"]}, "query_toks": {"en": ["select", "template_type_code", ",", "template_type_description", "from", "ref_template_types", ";"], "ru": ["select", "template_type_code", ",", "template_type_description", "from", "ref_template_types", ";"]}, "query_toks_no_values": {"en": ["select", "template_type_code", ",", "template_type_description", "from", "ref_template_types", ";"], "ru": ["select", "template_type_code", ",", "template_type_description", "from", "ref_template_types", ";"]}}, {"id": "D_0350", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\";", "ru": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\";"}, "question": {"en": "What is the template type descriptions for template type code \"AD\".", "ru": "Описания типа шаблона для кода типа шаблона \"AD\"."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"AD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"AD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "template", "type", "descriptions", "for", "template", "type", "code", "``", "AD", "''", "."], "ru": ["Описания", "типа", "шаблона", "для", "кода", "типа", "шаблона", "``", "AD", "''", "."]}, "query_toks": {"en": ["select", "template_type_description", "from", "ref_template_types", "where", "template_type_code", "=", "\"AD\"", ";"], "ru": ["select", "template_type_description", "from", "ref_template_types", "where", "template_type_code", "=", "\"AD\"", ";"]}, "query_toks_no_values": {"en": ["select", "template_type_description", "from", "ref_template_types", "where", "template_type_code", "=", "value", ";"], "ru": ["select", "template_type_description", "from", "ref_template_types", "where", "template_type_code", "=", "value", ";"]}}, {"id": "D_0351", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\";", "ru": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\";"}, "question": {"en": "Return the template type description of the template type with the code AD.", "ru": "Показать описание типа шаблона для типа шаблона с кодом AD."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"AD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"AD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "template", "type", "description", "of", "the", "template", "type", "with", "the", "code", "AD", "."], "ru": ["Показать", "описание", "типа", "шаблона", "для", "типа", "шаблона", "с", "кодом", "AD", "."]}, "query_toks": {"en": ["select", "template_type_description", "from", "ref_template_types", "where", "template_type_code", "=", "\"AD\"", ";"], "ru": ["select", "template_type_description", "from", "ref_template_types", "where", "template_type_code", "=", "\"AD\"", ";"]}, "query_toks_no_values": {"en": ["select", "template_type_description", "from", "ref_template_types", "where", "template_type_code", "=", "value", ";"], "ru": ["select", "template_type_description", "from", "ref_template_types", "where", "template_type_code", "=", "value", ";"]}}, {"id": "D_0352", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\";", "ru": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Каталог\";"}, "question": {"en": "What is the template type code for template type description \"Book\".", "ru": "Какой код типа шаблона для описания типа шаблона \"Каталог\"."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Book\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Каталог\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "template", "type", "code", "for", "template", "type", "description", "``", "Book", "''", "."], "ru": ["Какой", "код", "типа", "шаблона", "для", "описания", "типа", "шаблона", "``", "Каталог", "''", "."]}, "query_toks": {"en": ["select", "template_type_code", "from", "ref_template_types", "where", "template_type_description", "=", "\"Book\"", ";"], "ru": ["select", "template_type_code", "from", "ref_template_types", "where", "template_type_description", "=", "\"Каталог\"", ";"]}, "query_toks_no_values": {"en": ["select", "template_type_code", "from", "ref_template_types", "where", "template_type_description", "=", "value", ";"], "ru": ["select", "template_type_code", "from", "ref_template_types", "where", "template_type_description", "=", "value", ";"]}}, {"id": "D_0353", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\";", "ru": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Каталог\";"}, "question": {"en": "Return the type code of the template type with the description \"Book\".", "ru": "Показать код типа шаблона типа с описанием «Каталог»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Book\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Каталог\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "type", "code", "of", "the", "template", "type", "with", "the", "description", "``", "Book", "''", "."], "ru": ["Показать", "код", "типа", "шаблона", "типа", "с", "описанием", "«", "Каталог", "»", "."]}, "query_toks": {"en": ["select", "template_type_code", "from", "ref_template_types", "where", "template_type_description", "=", "\"Book\"", ";"], "ru": ["select", "template_type_code", "from", "ref_template_types", "where", "template_type_description", "=", "\"Каталог\"", ";"]}, "query_toks_no_values": {"en": ["select", "template_type_code", "from", "ref_template_types", "where", "template_type_description", "=", "value", ";"], "ru": ["select", "template_type_code", "from", "ref_template_types", "where", "template_type_description", "=", "value", ";"]}}, {"id": "D_0354", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID;", "ru": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID;"}, "question": {"en": "What are the distinct template type descriptions for the templates ever used by any document?", "ru": "Каковы отдельные описания типов шаблонов для шаблонов, когда-либо использовавшихся в каком-либо документе?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "distinct", "template", "type", "descriptions", "for", "the", "templates", "ever", "used", "by", "any", "document", "?"], "ru": ["Каковы", "отдельные", "описания", "типов", "шаблонов", "для", "шаблонов", ",", "когда-либо", "использовавшихся", "в", "каком-либо", "документе", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.template_type_description", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_type_code", "=", "t2.template_type_code", "join", "documents", "as", "t3", "on", "t2.template_id", "=", "t3.template_id", ";"], "ru": ["select", "distinct", "t1.template_type_description", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_type_code", "=", "t2.template_type_code", "join", "documents", "as", "t3", "on", "t2.template_id", "=", "t3.template_id", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.template_type_description", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_type_code", "=", "t2.template_type_code", "join", "documents", "as", "t3", "on", "t2.template_id", "=", "t3.template_id", ";"], "ru": ["select", "distinct", "t1.template_type_description", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_type_code", "=", "t2.template_type_code", "join", "documents", "as", "t3", "on", "t2.template_id", "=", "t3.template_id", ";"]}}, {"id": "D_0355", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID;", "ru": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID;"}, "question": {"en": "Return the different descriptions for templates that have been used in a document.", "ru": "Покажи различные описания для шаблонов, которые использовались в документе."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 3, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "different", "descriptions", "for", "templates", "that", "have", "been", "used", "in", "a", "document", "."], "ru": ["Покажи", "различные", "описания", "для", "шаблонов", ",", "которые", "использовались", "в", "документе", "."]}, "query_toks": {"en": ["select", "distinct", "t1.template_type_description", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_type_code", "=", "t2.template_type_code", "join", "documents", "as", "t3", "on", "t2.template_id", "=", "t3.template_id", ";"], "ru": ["select", "distinct", "t1.template_type_description", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_type_code", "=", "t2.template_type_code", "join", "documents", "as", "t3", "on", "t2.template_id", "=", "t3.template_id", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.template_type_description", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_type_code", "=", "t2.template_type_code", "join", "documents", "as", "t3", "on", "t2.template_id", "=", "t3.template_id", ";"], "ru": ["select", "distinct", "t1.template_type_description", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_type_code", "=", "t2.template_type_code", "join", "documents", "as", "t3", "on", "t2.template_id", "=", "t3.template_id", ";"]}}, {"id": "D_0356", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\";", "ru": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Буклет\";"}, "question": {"en": "What are the template ids with template type description \"Presentation\".", "ru": "Каковы id шаблона с описанием типа шаблона \"Буклет\"."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Presentation\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Буклет\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "template", "ids", "with", "template", "type", "description", "``", "Presentation", "''", "."], "ru": ["Каковы", "id", "шаблона", "с", "описанием", "типа", "шаблона", "``", "Буклет", "''", "."]}, "query_toks": {"en": ["select", "t2.template_id", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_type_code", "=", "t2.template_type_code", "where", "t1.template_type_description", "=", "\"Presentation\"", ";"], "ru": ["select", "t2.template_id", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_type_code", "=", "t2.template_type_code", "where", "t1.template_type_description", "=", "\"Буклет\"", ";"]}, "query_toks_no_values": {"en": ["select", "t2.template_id", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_type_code", "=", "t2.template_type_code", "where", "t1.template_type_description", "=", "value", ";"], "ru": ["select", "t2.template_id", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_type_code", "=", "t2.template_type_code", "where", "t1.template_type_description", "=", "value", ";"]}}, {"id": "D_0357", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\";", "ru": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Буклет\";"}, "question": {"en": "Return the ids corresponding to templates with the description 'Presentation'.", "ru": "Показать id, соответствующие шаблонам с описанием «Буклет»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Presentation\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Буклет\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "ids", "corresponding", "to", "templates", "with", "the", "description", "'Presentation", "'", "."], "ru": ["Показать", "id", ",", "соответствующие", "шаблонам", "с", "описанием", "«", "Буклет", "»", "."]}, "query_toks": {"en": ["select", "t2.template_id", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_type_code", "=", "t2.template_type_code", "where", "t1.template_type_description", "=", "\"Presentation\"", ";"], "ru": ["select", "t2.template_id", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_type_code", "=", "t2.template_type_code", "where", "t1.template_type_description", "=", "\"Буклет\"", ";"]}, "query_toks_no_values": {"en": ["select", "t2.template_id", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_type_code", "=", "t2.template_type_code", "where", "t1.template_type_description", "=", "value", ";"], "ru": ["select", "t2.template_id", "from", "ref_template_types", "as", "t1", "join", "templates", "as", "t2", "on", "t1.template_type_code", "=", "t2.template_type_code", "where", "t1.template_type_description", "=", "value", ";"]}}, {"id": "D_0358", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Paragraphs;", "ru": "SELECT count(*) FROM Paragraphs;"}, "question": {"en": "How many paragraphs in total?", "ru": "Сколько всего абзацев?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "paragraphs", "in", "total", "?"], "ru": ["Сколько", "всего", "абзацев", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "paragraphs", ";"], "ru": ["select", "count", "(", "*", ")", "from", "paragraphs", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "paragraphs", ";"], "ru": ["select", "count", "(", "*", ")", "from", "paragraphs", ";"]}}, {"id": "D_0359", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Paragraphs;", "ru": "SELECT count(*) FROM Paragraphs;"}, "question": {"en": "Count the number of paragraphs.", "ru": "Подсчитайте количество абзацев."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "paragraphs", "."], "ru": ["Подсчитайте", "количество", "абзацев", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "paragraphs", ";"], "ru": ["select", "count", "(", "*", ")", "from", "paragraphs", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "paragraphs", ";"], "ru": ["select", "count", "(", "*", ")", "from", "paragraphs", ";"]}}, {"id": "D_0360", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show';", "ru": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Зимнее представление';"}, "question": {"en": "How many paragraphs for the document with name 'Summer Show'?", "ru": "Сколько абзацев в документе с названием «Зимнее представление»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Summer Show\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Зимнее представление\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "paragraphs", "for", "the", "document", "with", "name", "'Summer", "Show", "'", "?"], "ru": ["Сколько", "абзацев", "в", "документе", "с", "названием", "«", "Зимнее", "представление", "»", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "\"Summer Show\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "\"Зимнее представление\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "value", ";"]}}, {"id": "D_0361", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show';", "ru": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Зимнее представление';"}, "question": {"en": "Count the number of paragraphs in the document named 'Summer Show'.", "ru": "Подсчитайте количество абзацев в документе под названием «Зимнее представление»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Summer Show\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Зимнее представление\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "paragraphs", "in", "the", "document", "named", "'Summer", "Show", "'", "."], "ru": ["Подсчитайте", "количество", "абзацев", "в", "документе", "под", "названием", "«", "Зимнее", "представление", "»", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "\"Summer Show\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "\"Зимнее представление\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "value", ";"]}}, {"id": "D_0362", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "select other_details from paragraphs where paragraph_text like 'korea';", "ru": "select other_details from paragraphs where paragraph_text like 'Россия';"}, "question": {"en": "Show paragraph details for paragraph with text 'Korea ' .", "ru": "Показать детали абзаца для абзаца с текстом \"Россия\"."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 9, [0, [0, 16, false], null], "\"korea\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 9, [0, [0, 16, false], null], "\"Россия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "paragraph", "details", "for", "paragraph", "with", "text", "'Korea", "'", "."], "ru": ["Показать", "детали", "абзаца", "для", "абзаца", "с", "текстом", "``", "Россия", "''", "."]}, "query_toks": {"en": ["select", "other_details", "from", "paragraphs", "where", "paragraph_text", "like", "\"korea\"", ";"], "ru": ["select", "other_details", "from", "paragraphs", "where", "paragraph_text", "like", "\"Россия\"", ";"]}, "query_toks_no_values": {"en": ["select", "other_details", "from", "paragraphs", "where", "paragraph_text", "like", "value", ";"], "ru": ["select", "other_details", "from", "paragraphs", "where", "paragraph_text", "like", "value", ";"]}}, {"id": "D_0363", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "select other_details from paragraphs where paragraph_text like 'korea';", "ru": "select other_details from paragraphs where paragraph_text like 'Россия';"}, "question": {"en": "What are the details for the paragraph that includes the text 'Korea ' ?", "ru": "Каковы подробности абзаца, включающего текст «Россия»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 9, [0, [0, 16, false], null], "\"korea\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 9, [0, [0, 16, false], null], "\"Россия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "details", "for", "the", "paragraph", "that", "includes", "the", "text", "'Korea", "'", "?"], "ru": ["Каковы", "подробности", "абзаца", ",", "включающего", "текст", "«", "Россия", "»", "?"]}, "query_toks": {"en": ["select", "other_details", "from", "paragraphs", "where", "paragraph_text", "like", "\"korea\"", ";"], "ru": ["select", "other_details", "from", "paragraphs", "where", "paragraph_text", "like", "\"Россия\"", ";"]}, "query_toks_no_values": {"en": ["select", "other_details", "from", "paragraphs", "where", "paragraph_text", "like", "value", ";"], "ru": ["select", "other_details", "from", "paragraphs", "where", "paragraph_text", "like", "value", ";"]}}, {"id": "D_0364", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY';", "ru": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Достопримечательности Лондона';"}, "question": {"en": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.", "ru": "Показать все id абзацев и тексты для документа с названием «Достопримечательности Лондона»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Welcome to NY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Достопримечательности Лондона\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "all", "paragraph", "ids", "and", "texts", "for", "the", "document", "with", "name", "'Welcome", "to", "NY", "'", "."], "ru": ["Показать", "все", "id", "абзацев", "и", "тексты", "для", "документа", "с", "названием", "«", "Достопримечательности", "Лондона", "»", "."]}, "query_toks": {"en": ["select", "t1.paragraph_id", ",", "t1.paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "\"Welcome to NY\"", ";"], "ru": ["select", "t1.paragraph_id", ",", "t1.paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "\"Достопримечательности Лондона\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.paragraph_id", ",", "t1.paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "value", ";"], "ru": ["select", "t1.paragraph_id", ",", "t1.paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "value", ";"]}}, {"id": "D_0365", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY';", "ru": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Достопримечательности Лондона';"}, "question": {"en": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?", "ru": "Каковы id и текст абзацев в документе «Достопримечательности Лондона»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Welcome to NY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Достопримечательности Лондона\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "ids", "and", "texts", "of", "paragraphs", "in", "the", "document", "titled", "'Welcome", "to", "NY", "'", "?"], "ru": ["Каковы", "id", "и", "текст", "абзацев", "в", "документе", "«", "Достопримечательности", "Лондона", "»", "?"]}, "query_toks": {"en": ["select", "t1.paragraph_id", ",", "t1.paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "\"Welcome to NY\"", ";"], "ru": ["select", "t1.paragraph_id", ",", "t1.paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "\"Достопримечательности Лондона\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.paragraph_id", ",", "t1.paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "value", ";"], "ru": ["select", "t1.paragraph_id", ",", "t1.paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "value", ";"]}}, {"id": "D_0366", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\";", "ru": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Советы пользователей\";"}, "question": {"en": "Show all paragraph texts for the document \"Customer reviews\".", "ru": "Показать все тексты параграфов документа «Советы пользователей»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Customer reviews\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Советы пользователей\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "all", "paragraph", "texts", "for", "the", "document", "``", "Customer", "reviews", "''", "."], "ru": ["Показать", "все", "тексты", "параграфов", "документа", "«", "Советы", "пользователей", "»", "."]}, "query_toks": {"en": ["select", "t1.paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "\"Customer reviews\"", ";"], "ru": ["select", "t1.paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "\"Советы пользователей\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "value", ";"], "ru": ["select", "t1.paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "value", ";"]}}, {"id": "D_0367", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\";", "ru": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Советы пользователей\";"}, "question": {"en": "What are the paragraph texts for the document with the name 'Customer reviews'?", "ru": "Каковы тексты параграфов документа с названием «Советы пользователей»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Customer reviews\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Советы пользователей\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "paragraph", "texts", "for", "the", "document", "with", "the", "name", "'Customer", "reviews", "'", "?"], "ru": ["Каковы", "тексты", "параграфов", "документа", "с", "названием", "«", "Советы", "пользователей", "»", "?"]}, "query_toks": {"en": ["select", "t1.paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "\"Customer reviews\"", ";"], "ru": ["select", "t1.paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "\"Советы пользователей\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "value", ";"], "ru": ["select", "t1.paragraph_text", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "where", "t2.document_name", "=", "value", ";"]}}, {"id": "D_0368", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id;", "ru": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id;"}, "question": {"en": "Show all document ids and the number of paragraphs in each document. Order by document id.", "ru": "Показать все id документов и количество абзацев в каждом документе. Сортировать по id документа."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "all", "document", "ids", "and", "the", "number", "of", "paragraphs", "in", "each", "document", ".", "Order", "by", "document", "id", "."], "ru": ["Показать", "все", "id", "документов", "и", "количество", "абзацев", "в", "каждом", "документе", ".", "Сортировать", "по", "id", "документа", "."]}, "query_toks": {"en": ["select", "document_id", ",", "count", "(", "*", ")", "from", "paragraphs", "group", "by", "document_id", "order", "by", "document_id", ";"], "ru": ["select", "document_id", ",", "count", "(", "*", ")", "from", "paragraphs", "group", "by", "document_id", "order", "by", "document_id", ";"]}, "query_toks_no_values": {"en": ["select", "document_id", ",", "count", "(", "*", ")", "from", "paragraphs", "group", "by", "document_id", "order", "by", "document_id", ";"], "ru": ["select", "document_id", ",", "count", "(", "*", ")", "from", "paragraphs", "group", "by", "document_id", "order", "by", "document_id", ";"]}}, {"id": "D_0369", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id;", "ru": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id;"}, "question": {"en": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.", "ru": "Показать различные id документов вместе с количеством абзацев, соответствующих каждому, в порядке id."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "different", "document", "ids", "along", "with", "the", "number", "of", "paragraphs", "corresponding", "to", "each", ",", "ordered", "by", "id", "."], "ru": ["Показать", "различные", "id", "документов", "вместе", "с", "количеством", "абзацев", ",", "соответствующих", "каждому", ",", "в", "порядке", "id", "."]}, "query_toks": {"en": ["select", "document_id", ",", "count", "(", "*", ")", "from", "paragraphs", "group", "by", "document_id", "order", "by", "document_id", ";"], "ru": ["select", "document_id", ",", "count", "(", "*", ")", "from", "paragraphs", "group", "by", "document_id", "order", "by", "document_id", ";"]}, "query_toks_no_values": {"en": ["select", "document_id", ",", "count", "(", "*", ")", "from", "paragraphs", "group", "by", "document_id", "order", "by", "document_id", ";"], "ru": ["select", "document_id", ",", "count", "(", "*", ")", "from", "paragraphs", "group", "by", "document_id", "order", "by", "document_id", ";"]}}, {"id": "D_0370", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id;", "ru": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id;"}, "question": {"en": "Show all document ids, names and the number of paragraphs in each document.", "ru": "Показать все id документов, имена и количество абзацев в каждом документе."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "all", "document", "ids", ",", "names", "and", "the", "number", "of", "paragraphs", "in", "each", "document", "."], "ru": ["Показать", "все", "id", "документов", ",", "имена", "и", "количество", "абзацев", "в", "каждом", "документе", "."]}, "query_toks": {"en": ["select", "t1.document_id", ",", "t2.document_name", ",", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "group", "by", "t1.document_id", ";"], "ru": ["select", "t1.document_id", ",", "t2.document_name", ",", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "group", "by", "t1.document_id", ";"]}, "query_toks_no_values": {"en": ["select", "t1.document_id", ",", "t2.document_name", ",", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "group", "by", "t1.document_id", ";"], "ru": ["select", "t1.document_id", ",", "t2.document_name", ",", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "group", "by", "t1.document_id", ";"]}}, {"id": "D_0371", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id;", "ru": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id;"}, "question": {"en": "What are the ids and names of each document, as well as the number of paragraphs in each?", "ru": "Каковы id и названия каждого документа, а также количество абзацев в каждом?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "ids", "and", "names", "of", "each", "document", ",", "as", "well", "as", "the", "number", "of", "paragraphs", "in", "each", "?"], "ru": ["Каковы", "id", "и", "названия", "каждого", "документа", ",", "а", "также", "количество", "абзацев", "в", "каждом", "?"]}, "query_toks": {"en": ["select", "t1.document_id", ",", "t2.document_name", ",", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "group", "by", "t1.document_id", ";"], "ru": ["select", "t1.document_id", ",", "t2.document_name", ",", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "group", "by", "t1.document_id", ";"]}, "query_toks_no_values": {"en": ["select", "t1.document_id", ",", "t2.document_name", ",", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "group", "by", "t1.document_id", ";"], "ru": ["select", "t1.document_id", ",", "t2.document_name", ",", "count", "(", "*", ")", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "group", "by", "t1.document_id", ";"]}}, {"id": "D_0372", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2;", "ru": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2;"}, "question": {"en": "List all document ids with at least two paragraphs.", "ru": "Перечислите все id документов как минимум с двумя абзацами."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "all", "document", "ids", "with", "at", "least", "two", "paragraphs", "."], "ru": ["Перечислите", "все", "id", "документов", "как", "минимум", "с", "двумя", "абзацами", "."]}, "query_toks": {"en": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0373", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2;", "ru": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2;"}, "question": {"en": "What are the ids of documents that have 2 or more paragraphs?", "ru": "Каковы id документов, содержащих 2 или более абзаца?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "ids", "of", "documents", "that", "have", "2", "or", "more", "paragraphs", "?"], "ru": ["Каковы", "id", "документов", ",", "содержащих", "2", "или", "более", "абзаца", "?"]}, "query_toks": {"en": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0374", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the document id and name with greatest number of paragraphs?", "ru": "Каков id и название документа с наибольшим количеством абзацев?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "document", "id", "and", "name", "with", "greatest", "number", "of", "paragraphs", "?"], "ru": ["Каков", "id", "и", "название", "документа", "с", "наибольшим", "количеством", "абзацев", "?"]}, "query_toks": {"en": ["select", "t1.document_id", ",", "t2.document_name", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "group", "by", "t1.document_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.document_id", ",", "t2.document_name", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "group", "by", "t1.document_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.document_id", ",", "t2.document_name", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "group", "by", "t1.document_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.document_id", ",", "t2.document_name", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "group", "by", "t1.document_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0375", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Return the id and name of the document with the most paragraphs.", "ru": "Показать id и имя документа с наибольшим количеством абзацев."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "id", "and", "name", "of", "the", "document", "with", "the", "most", "paragraphs", "."], "ru": ["Показать", "id", "и", "имя", "документа", "с", "наибольшим", "количеством", "абзацев", "."]}, "query_toks": {"en": ["select", "t1.document_id", ",", "t2.document_name", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "group", "by", "t1.document_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.document_id", ",", "t2.document_name", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "group", "by", "t1.document_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.document_id", ",", "t2.document_name", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "group", "by", "t1.document_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.document_id", ",", "t2.document_name", "from", "paragraphs", "as", "t1", "join", "documents", "as", "t2", "on", "t1.document_id", "=", "t2.document_id", "group", "by", "t1.document_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0376", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1;", "ru": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1;"}, "question": {"en": "What is the document id with least number of paragraphs?", "ru": "Какой id у документа с наименьшим количеством абзацев?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "document", "id", "with", "least", "number", "of", "paragraphs", "?"], "ru": ["Какой", "id", "у", "документа", "с", "наименьшим", "количеством", "абзацев", "?"]}, "query_toks": {"en": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"], "ru": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"], "ru": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"]}}, {"id": "D_0377", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1;", "ru": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1;"}, "question": {"en": "Return the id of the document with the fewest paragraphs.", "ru": "Показать id документа с наименьшим количеством абзацев."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "id", "of", "the", "document", "with", "the", "fewest", "paragraphs", "."], "ru": ["Показать", "id", "документа", "с", "наименьшим", "количеством", "абзацев", "."]}, "query_toks": {"en": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"], "ru": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"], "ru": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"]}}, {"id": "D_0378", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2;", "ru": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2;"}, "question": {"en": "What is the document id with 1 to 2 paragraphs?", "ru": "Какой id документа состоит из 1-2 абзацев?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [[false, 1, [0, [3, 0, false], null], 1.0, 2.0]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [[false, 1, [0, [3, 0, false], null], 1.0, 2.0]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "document", "id", "with", "1", "to", "2", "paragraphs", "?"], "ru": ["Какой", "id", "документа", "состоит", "из", "1-2", "абзацев", "?"]}, "query_toks": {"en": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", "between", "1", "and", "2", ";"], "ru": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", "between", "1", "and", "2", ";"]}, "query_toks_no_values": {"en": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", "between", "1", "and", "2", ";"], "ru": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", "between", "1", "and", "2", ";"]}}, {"id": "D_0379", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2;", "ru": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2;"}, "question": {"en": "Give the ids of documents that have between one and two paragraphs.", "ru": "Укажите id документов, содержащих от одного до двух абзацев."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [[false, 1, [0, [3, 0, false], null], 1.0, 2.0]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [[false, 1, [0, [3, 0, false], null], 1.0, 2.0]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "ids", "of", "documents", "that", "have", "between", "one", "and", "two", "paragraphs", "."], "ru": ["Укажите", "id", "документов", ",", "содержащих", "от", "одного", "до", "двух", "абзацев", "."]}, "query_toks": {"en": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", "between", "1", "and", "2", ";"], "ru": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", "between", "1", "and", "2", ";"]}, "query_toks_no_values": {"en": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", "between", "1", "and", "2", ";"], "ru": ["select", "document_id", "from", "paragraphs", "group", "by", "document_id", "having", "count", "(", "*", ")", "between", "1", "and", "2", ";"]}}, {"id": "D_0380", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland';", "ru": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Испания' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Франция';"}, "question": {"en": "Show the document id with paragraph text 'Brazil' and 'Ireland'.", "ru": "Показать id документа с текстом абзаца «Испания» и «Франция»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Brazil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Ireland\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Испания\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Франция\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "document", "id", "with", "paragraph", "text", "'Brazil", "'", "and", "'Ireland", "'", "."], "ru": ["Показать", "id", "документа", "с", "текстом", "абзаца", "«", "Испания", "»", "и", "«", "Франция", "»", "."]}, "query_toks": {"en": ["select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "\"Brazil\"", "intersect", "select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "\"Ireland\"", ";"], "ru": ["select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "\"Испания\"", "intersect", "select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "\"Франция\"", ";"]}, "query_toks_no_values": {"en": ["select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value", "intersect", "select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value", ";"], "ru": ["select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value", "intersect", "select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value", ";"]}}, {"id": "D_0381", "db_id": "cre_Doc_Template_Mgt", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland';", "ru": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Испания' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Франция';"}, "question": {"en": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?", "ru": "Какие id документов содержат текст абзаца «Испания» и «Франция»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Brazil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Ireland\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Испания\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"Франция\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "ids", "of", "documents", "that", "contain", "the", "paragraph", "text", "'Brazil", "'", "and", "'Ireland", "'", "?"], "ru": ["Какие", "id", "документов", "содержат", "текст", "абзаца", "«", "Испания", "»", "и", "«", "Франция", "»", "?"]}, "query_toks": {"en": ["select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "\"Brazil\"", "intersect", "select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "\"Ireland\"", ";"], "ru": ["select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "\"Испания\"", "intersect", "select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "\"Франция\"", ";"]}, "query_toks_no_values": {"en": ["select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value", "intersect", "select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value", ";"], "ru": ["select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value", "intersect", "select", "document_id", "from", "paragraphs", "where", "paragraph_text", "=", "value", ";"]}}, {"id": "D_0382", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM teacher;", "ru": "SELECT count(*) FROM teacher;"}, "question": {"en": "How many teachers are there?", "ru": "Сколько всего учителей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "teachers", "are", "there", "?"], "ru": ["Сколько", "всего", "учителей", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "teacher", ";"], "ru": ["select", "count", "(", "*", ")", "from", "teacher", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "teacher", ";"], "ru": ["select", "count", "(", "*", ")", "from", "teacher", ";"]}}, {"id": "D_0383", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM teacher;", "ru": "SELECT count(*) FROM teacher;"}, "question": {"en": "What is the total count of teachers?", "ru": "Каково общее количество учителей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "total", "count", "of", "teachers", "?"], "ru": ["Каково", "общее", "количество", "учителей", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "teacher", ";"], "ru": ["select", "count", "(", "*", ")", "from", "teacher", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "teacher", ";"], "ru": ["select", "count", "(", "*", ")", "from", "teacher", ";"]}}, {"id": "D_0384", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM teacher ORDER BY Age ASC;", "ru": "SELECT Name FROM teacher ORDER BY Age ASC;"}, "question": {"en": "List the names of teachers in ascending order of age.", "ru": "Перечислите имена учителей в порядке возрастания их возраста."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "names", "of", "teachers", "in", "ascending", "order", "of", "age", "."], "ru": ["Перечислите", "имена", "учителей", "в", "порядке", "возрастания", "их", "возраста", "."]}, "query_toks": {"en": ["select", "name", "from", "teacher", "order", "by", "age", "asc", ";"], "ru": ["select", "name", "from", "teacher", "order", "by", "age", "asc", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "teacher", "order", "by", "age", "asc", ";"], "ru": ["select", "name", "from", "teacher", "order", "by", "age", "asc", ";"]}}, {"id": "D_0385", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM teacher ORDER BY Age ASC;", "ru": "SELECT Name FROM teacher ORDER BY Age ASC;"}, "question": {"en": "What are the names of the teachers ordered by ascending age?", "ru": "Как зовут учителей по возрасту?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "teachers", "ordered", "by", "ascending", "age", "?"], "ru": ["Как", "зовут", "учителей", "по", "возрасту", "?"]}, "query_toks": {"en": ["select", "name", "from", "teacher", "order", "by", "age", "asc", ";"], "ru": ["select", "name", "from", "teacher", "order", "by", "age", "asc", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "teacher", "order", "by", "age", "asc", ";"], "ru": ["select", "name", "from", "teacher", "order", "by", "age", "asc", ";"]}}, {"id": "D_0386", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Age ,  Hometown FROM teacher;", "ru": "SELECT Age ,  Hometown FROM teacher;"}, "question": {"en": "What are the age and hometown of teachers?", "ru": "Какого возраста и из какого города учителя?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "age", "and", "hometown", "of", "teachers", "?"], "ru": ["Какого", "возраста", "и", "из", "какого", "города", "учителя", "?"]}, "query_toks": {"en": ["select", "age", ",", "hometown", "from", "teacher", ";"], "ru": ["select", "age", ",", "hometown", "from", "teacher", ";"]}, "query_toks_no_values": {"en": ["select", "age", ",", "hometown", "from", "teacher", ";"], "ru": ["select", "age", ",", "hometown", "from", "teacher", ";"]}}, {"id": "D_0387", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Age ,  Hometown FROM teacher;", "ru": "SELECT Age ,  Hometown FROM teacher;"}, "question": {"en": "What is the age and hometown of every teacher?", "ru": "Какого возраста и из какого города каждый учитель?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "age", "and", "hometown", "of", "every", "teacher", "?"], "ru": ["Какого", "возраста", "и", "из", "какого", "города", "каждый", "учитель", "?"]}, "query_toks": {"en": ["select", "age", ",", "hometown", "from", "teacher", ";"], "ru": ["select", "age", ",", "hometown", "from", "teacher", ";"]}, "query_toks_no_values": {"en": ["select", "age", ",", "hometown", "from", "teacher", ";"], "ru": ["select", "age", ",", "hometown", "from", "teacher", ";"]}}, {"id": "D_0388", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "select name from teacher where hometown != \"little lever urban district\";", "ru": "select name from teacher where hometown != \"Абакан\";"}, "question": {"en": "List the name of teachers whose hometown is not `` Little Lever Urban District '' .", "ru": "Перечислите имена учителей, чей родной город не является “Абакан”."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 7, [0, [0, 7, false], null], "\"little lever urban district\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 7, [0, [0, 7, false], null], "\"Абакан\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "name", "of", "teachers", "whose", "hometown", "is", "not", "``", "Little", "Lever", "Urban", "District", "``", "."], "ru": ["Перечислите", "имена", "учителей", ",", "чей", "родной", "город", "не", "является", "“", "Абакан", "”", "."]}, "query_toks": {"en": ["select", "name", "from", "teacher", "where", "hometown", "!=", "\"little lever urban district\"", ";"], "ru": ["select", "name", "from", "teacher", "where", "hometown", "!=", "\"Абакан\"", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "teacher", "where", "hometown", "!=", "value", ";"], "ru": ["select", "name", "from", "teacher", "where", "hometown", "!=", "value", ";"]}}, {"id": "D_0389", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "select name from teacher where hometown != \"little lever urban district\";", "ru": "select name from teacher where hometown != \"Абакан\";"}, "question": {"en": "What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?", "ru": "Как зовут учителей, чей родной город не Абакан"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 7, [0, [0, 7, false], null], "\"little lever urban district\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 7, [0, [0, 7, false], null], "\"Абакан\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "teachers", "whose", "hometown", "is", "not", "``", "Little", "Lever", "Urban", "District", "``", "?"], "ru": ["Как", "зовут", "учителей", ",", "чей", "родной", "город", "не", "Абакан"]}, "query_toks": {"en": ["select", "name", "from", "teacher", "where", "hometown", "!=", "\"little lever urban district\"", ";"], "ru": ["select", "name", "from", "teacher", "where", "hometown", "!=", "\"Абакан\"", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "teacher", "where", "hometown", "!=", "value", ";"], "ru": ["select", "name", "from", "teacher", "where", "hometown", "!=", "value", ";"]}}, {"id": "D_0390", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33;", "ru": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33;"}, "question": {"en": "Show the name of teachers aged either 32 or 33?", "ru": "Укажите имена учителей в возрасте 32 или 33 лет?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], 32.0, null], "or", [false, 2, [0, [0, 6, false], null], 33.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], 32.0, null], "or", [false, 2, [0, [0, 6, false], null], 33.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "name", "of", "teachers", "aged", "either", "32", "or", "33", "?"], "ru": ["Укажите", "имена", "учителей", "в", "возрасте", "32", "или", "33", "лет", "?"]}, "query_toks": {"en": ["select", "name", "from", "teacher", "where", "age", "=", "32", "or", "age", "=", "33", ";"], "ru": ["select", "name", "from", "teacher", "where", "age", "=", "32", "or", "age", "=", "33", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "teacher", "where", "age", "=", "32", "or", "age", "=", "33", ";"], "ru": ["select", "name", "from", "teacher", "where", "age", "=", "32", "or", "age", "=", "33", ";"]}}, {"id": "D_0391", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33;", "ru": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33;"}, "question": {"en": "What are the names of the teachers who are aged either 32 or 33?", "ru": "Как зовут учителей в возрасте 32 или 33 лет?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], 32.0, null], "or", [false, 2, [0, [0, 6, false], null], 33.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], 32.0, null], "or", [false, 2, [0, [0, 6, false], null], 33.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "teachers", "who", "are", "aged", "either", "32", "or", "33", "?"], "ru": ["Как", "зовут", "учителей", "в", "возрасте", "32", "или", "33", "лет", "?"]}, "query_toks": {"en": ["select", "name", "from", "teacher", "where", "age", "=", "32", "or", "age", "=", "33", ";"], "ru": ["select", "name", "from", "teacher", "where", "age", "=", "32", "or", "age", "=", "33", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "teacher", "where", "age", "=", "32", "or", "age", "=", "33", ";"], "ru": ["select", "name", "from", "teacher", "where", "age", "=", "32", "or", "age", "=", "33", ";"]}}, {"id": "D_0392", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1;", "ru": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1;"}, "question": {"en": "What is the hometown of the youngest teacher?", "ru": "Из какого города самый молодой учитель?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "hometown", "of", "the", "youngest", "teacher", "?"], "ru": ["Из", "какого", "города", "самый", "молодой", "учитель", "?"]}, "query_toks": {"en": ["select", "hometown", "from", "teacher", "order", "by", "age", "asc", "limit", "1", ";"], "ru": ["select", "hometown", "from", "teacher", "order", "by", "age", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "hometown", "from", "teacher", "order", "by", "age", "asc", "limit", "1", ";"], "ru": ["select", "hometown", "from", "teacher", "order", "by", "age", "asc", "limit", "1", ";"]}}, {"id": "D_0393", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1;", "ru": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1;"}, "question": {"en": "Where is the youngest teacher from?", "ru": "Откуда самый молодой учитель?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Where", "is", "the", "youngest", "teacher", "from", "?"], "ru": ["Откуда", "самый", "молодой", "учитель", "?"]}, "query_toks": {"en": ["select", "hometown", "from", "teacher", "order", "by", "age", "asc", "limit", "1", ";"], "ru": ["select", "hometown", "from", "teacher", "order", "by", "age", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "hometown", "from", "teacher", "order", "by", "age", "asc", "limit", "1", ";"], "ru": ["select", "hometown", "from", "teacher", "order", "by", "age", "asc", "limit", "1", ";"]}}, {"id": "D_0394", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown;", "ru": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown;"}, "question": {"en": "Show different hometown of teachers and the number of teachers from each hometown.", "ru": "Покажите разные родные города учителей и количество учителей из каждого города."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "different", "hometown", "of", "teachers", "and", "the", "number", "of", "teachers", "from", "each", "hometown", "."], "ru": ["Покажите", "разные", "родные", "города", "учителей", "и", "количество", "учителей", "из", "каждого", "города", "."]}, "query_toks": {"en": ["select", "hometown", ",", "count", "(", "*", ")", "from", "teacher", "group", "by", "hometown", ";"], "ru": ["select", "hometown", ",", "count", "(", "*", ")", "from", "teacher", "group", "by", "hometown", ";"]}, "query_toks_no_values": {"en": ["select", "hometown", ",", "count", "(", "*", ")", "from", "teacher", "group", "by", "hometown", ";"], "ru": ["select", "hometown", ",", "count", "(", "*", ")", "from", "teacher", "group", "by", "hometown", ";"]}}, {"id": "D_0395", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown;", "ru": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown;"}, "question": {"en": "For each hometown, how many teachers are there?", "ru": "Сколько учителей из каждого города?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["For", "each", "hometown", ",", "how", "many", "teachers", "are", "there", "?"], "ru": ["Сколько", "учителей", "из", "каждого", "города", "?"]}, "query_toks": {"en": ["select", "hometown", ",", "count", "(", "*", ")", "from", "teacher", "group", "by", "hometown", ";"], "ru": ["select", "hometown", ",", "count", "(", "*", ")", "from", "teacher", "group", "by", "hometown", ";"]}, "query_toks_no_values": {"en": ["select", "hometown", ",", "count", "(", "*", ")", "from", "teacher", "group", "by", "hometown", ";"], "ru": ["select", "hometown", ",", "count", "(", "*", ")", "from", "teacher", "group", "by", "hometown", ";"]}}, {"id": "D_0396", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1;", "ru": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1;"}, "question": {"en": "List the most common hometown of teachers.", "ru": "Перечислите наиболее часто встречающийся родной город учителей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "most", "common", "hometown", "of", "teachers", "."], "ru": ["Перечислите", "наиболее", "часто", "встречающийся", "родной", "город", "учителей", "."]}, "query_toks": {"en": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0397", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1;", "ru": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1;"}, "question": {"en": "What is the most commmon hometowns for teachers?", "ru": "Какие города наиболее распространены среди учителей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "most", "commmon", "hometowns", "for", "teachers", "?"], "ru": ["Какие", "города", "наиболее", "распространены", "среди", "учителей", "?"]}, "query_toks": {"en": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0398", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2;", "ru": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2;"}, "question": {"en": "Show the hometowns shared by at least two teachers.", "ru": "Города, откуда родом как минимум два учителя."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "hometowns", "shared", "by", "at", "least", "two", "teachers", "."], "ru": ["Города", ",", "откуда", "родом", "как", "минимум", "два", "учителя", "."]}, "query_toks": {"en": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0399", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2;", "ru": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2;"}, "question": {"en": "What are the towns from which at least two teachers come from?", "ru": "Из каких городов приехали как минимум два учителя?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "towns", "from", "which", "at", "least", "two", "teachers", "come", "from", "?"], "ru": ["Из", "каких", "городов", "приехали", "как", "минимум", "два", "учителя", "?"]}, "query_toks": {"en": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "hometown", "from", "teacher", "group", "by", "hometown", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0400", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID;", "ru": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID;"}, "question": {"en": "Show names of teachers and the courses they are arranged to teach.", "ru": "Покажите имена учителей и курсы, которые они должны преподавать."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "names", "of", "teachers", "and", "the", "courses", "they", "are", "arranged", "to", "teach", "."], "ru": ["Покажите", "имена", "учителей", "и", "курсы", ",", "которые", "они", "должны", "преподавать", "."]}, "query_toks": {"en": ["select", "t3.name", ",", "t2.course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", ";"], "ru": ["select", "t3.name", ",", "t2.course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", ";"]}, "query_toks_no_values": {"en": ["select", "t3.name", ",", "t2.course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", ";"], "ru": ["select", "t3.name", ",", "t2.course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", ";"]}}, {"id": "D_0401", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID;", "ru": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID;"}, "question": {"en": "What is the name of each teacher and what course they teach?", "ru": "Как зовут каждого учителя и какой курс они преподают?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "each", "teacher", "and", "what", "course", "they", "teach", "?"], "ru": ["Как", "зовут", "каждого", "учителя", "и", "какой", "курс", "они", "преподают", "?"]}, "query_toks": {"en": ["select", "t3.name", ",", "t2.course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", ";"], "ru": ["select", "t3.name", ",", "t2.course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", ";"]}, "query_toks_no_values": {"en": ["select", "t3.name", ",", "t2.course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", ";"], "ru": ["select", "t3.name", ",", "t2.course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", ";"]}}, {"id": "D_0402", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name;", "ru": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name;"}, "question": {"en": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.", "ru": "Показать имена учителей и курсы, которые они преподают, в возрастающем алфавитном порядке имени учителя."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "names", "of", "teachers", "and", "the", "courses", "they", "are", "arranged", "to", "teach", "in", "ascending", "alphabetical", "order", "of", "the", "teacher", "'s", "name", "."], "ru": ["Показать", "имена", "учителей", "и", "курсы", ",", "которые", "они", "преподают", ",", "в", "возрастающем", "алфавитном", "порядке", "имени", "учителя", "."]}, "query_toks": {"en": ["select", "t3.name", ",", "t2.course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", "order", "by", "t3.name", ";"], "ru": ["select", "t3.name", ",", "t2.course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", "order", "by", "t3.name", ";"]}, "query_toks_no_values": {"en": ["select", "t3.name", ",", "t2.course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", "order", "by", "t3.name", ";"], "ru": ["select", "t3.name", ",", "t2.course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", "order", "by", "t3.name", ";"]}}, {"id": "D_0403", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name;", "ru": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name;"}, "question": {"en": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?", "ru": "Как зовут учителей и какие курсы они преподают в возрастающем алфавитном порядке по имени учителя?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "teachers", "and", "the", "courses", "they", "teach", "in", "ascending", "alphabetical", "order", "by", "the", "name", "of", "the", "teacher", "?"], "ru": ["Как", "зовут", "учителей", "и", "какие", "курсы", "они", "преподают", "в", "возрастающем", "алфавитном", "порядке", "по", "имени", "учителя", "?"]}, "query_toks": {"en": ["select", "t3.name", ",", "t2.course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", "order", "by", "t3.name", ";"], "ru": ["select", "t3.name", ",", "t2.course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", "order", "by", "t3.name", ";"]}, "query_toks_no_values": {"en": ["select", "t3.name", ",", "t2.course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", "order", "by", "t3.name", ";"], "ru": ["select", "t3.name", ",", "t2.course", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", "order", "by", "t3.name", ";"]}}, {"id": "D_0404", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\";", "ru": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Экономика\";"}, "question": {"en": "Show the name of the teacher for the math course.", "ru": "Имя учителя курса экономики."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Math\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Экономика\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "name", "of", "the", "teacher", "for", "the", "math", "course", "."], "ru": ["Имя", "учителя", "курса", "экономики", "."]}, "query_toks": {"en": ["select", "t3.name", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", "where", "t2.course", "=", "\"Math\"", ";"], "ru": ["select", "t3.name", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", "where", "t2.course", "=", "\"Экономика\"", ";"]}, "query_toks_no_values": {"en": ["select", "t3.name", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", "where", "t2.course", "=", "value", ";"], "ru": ["select", "t3.name", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", "where", "t2.course", "=", "value", ";"]}}, {"id": "D_0405", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\";", "ru": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Экономика\";"}, "question": {"en": "What are the names of the people who teach math courses?", "ru": "Как зовут людей, которые преподают экономические курсы?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Math\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Экономика\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "people", "who", "teach", "math", "courses", "?"], "ru": ["Как", "зовут", "людей", ",", "которые", "преподают", "экономические", "курсы", "?"]}, "query_toks": {"en": ["select", "t3.name", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", "where", "t2.course", "=", "\"Math\"", ";"], "ru": ["select", "t3.name", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", "where", "t2.course", "=", "\"Экономика\"", ";"]}, "query_toks_no_values": {"en": ["select", "t3.name", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", "where", "t2.course", "=", "value", ";"], "ru": ["select", "t3.name", "from", "course_arrange", "as", "t1", "join", "course", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "join", "teacher", "as", "t3", "on", "t1.teacher_id", "=", "t3.teacher_id", "where", "t2.course", "=", "value", ";"]}}, {"id": "D_0406", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name;", "ru": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name;"}, "question": {"en": "Show names of teachers and the number of courses they teach.", "ru": "Покажите имена учителей и количество курсов, которые они преподают."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "names", "of", "teachers", "and", "the", "number", "of", "courses", "they", "teach", "."], "ru": ["Покажите", "имена", "учителей", "и", "количество", "курсов", ",", "которые", "они", "преподают", "."]}, "query_toks": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1.teacher_id", "=", "t2.teacher_id", "group", "by", "t2.name", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1.teacher_id", "=", "t2.teacher_id", "group", "by", "t2.name", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1.teacher_id", "=", "t2.teacher_id", "group", "by", "t2.name", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1.teacher_id", "=", "t2.teacher_id", "group", "by", "t2.name", ";"]}}, {"id": "D_0407", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name;", "ru": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name;"}, "question": {"en": "What are the names of the teachers and how many courses do they teach?", "ru": "Как зовут учителей и сколько курсов они преподают?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "teachers", "and", "how", "many", "courses", "do", "they", "teach", "?"], "ru": ["Как", "зовут", "учителей", "и", "сколько", "курсов", "они", "преподают", "?"]}, "query_toks": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1.teacher_id", "=", "t2.teacher_id", "group", "by", "t2.name", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1.teacher_id", "=", "t2.teacher_id", "group", "by", "t2.name", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1.teacher_id", "=", "t2.teacher_id", "group", "by", "t2.name", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1.teacher_id", "=", "t2.teacher_id", "group", "by", "t2.name", ";"]}}, {"id": "D_0408", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2;", "ru": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2;"}, "question": {"en": "Show names of teachers that teach at least two courses.", "ru": "Покажите имена учителей, которые преподают как минимум два курса."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "names", "of", "teachers", "that", "teach", "at", "least", "two", "courses", "."], "ru": ["Покажите", "имена", "учителей", ",", "которые", "преподают", "как", "минимум", "два", "курса", "."]}, "query_toks": {"en": ["select", "t2.name", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1.teacher_id", "=", "t2.teacher_id", "group", "by", "t2.name", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t2.name", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1.teacher_id", "=", "t2.teacher_id", "group", "by", "t2.name", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1.teacher_id", "=", "t2.teacher_id", "group", "by", "t2.name", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t2.name", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1.teacher_id", "=", "t2.teacher_id", "group", "by", "t2.name", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0409", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2;", "ru": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2;"}, "question": {"en": "What are the names of the teachers who teach at least two courses?", "ru": "Как зовут учителей, которые ведут как минимум два курса?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "teachers", "who", "teach", "at", "least", "two", "courses", "?"], "ru": ["Как", "зовут", "учителей", ",", "которые", "ведут", "как", "минимум", "два", "курса", "?"]}, "query_toks": {"en": ["select", "t2.name", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1.teacher_id", "=", "t2.teacher_id", "group", "by", "t2.name", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t2.name", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1.teacher_id", "=", "t2.teacher_id", "group", "by", "t2.name", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1.teacher_id", "=", "t2.teacher_id", "group", "by", "t2.name", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t2.name", "from", "course_arrange", "as", "t1", "join", "teacher", "as", "t2", "on", "t1.teacher_id", "=", "t2.teacher_id", "group", "by", "t2.name", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0410", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange);", "ru": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange);"}, "question": {"en": "List the names of teachers who have not been arranged to teach courses.", "ru": "Перечисли имена учителей, не назначенных для преподавания курсов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[true, 8, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[true, 8, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "names", "of", "teachers", "who", "have", "not", "been", "arranged", "to", "teach", "courses", "."], "ru": ["Перечисли", "имена", "учителей", ",", "не", "назначенных", "для", "преподавания", "курсов", "."]}, "query_toks": {"en": ["select", "name", "from", "teacher", "where", "teacher_id", "not", "in", "(", "select", "teacher_id", "from", "course_arrange", ")", ";"], "ru": ["select", "name", "from", "teacher", "where", "teacher_id", "not", "in", "(", "select", "teacher_id", "from", "course_arrange", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "teacher", "where", "teacher_id", "not", "in", "(", "select", "teacher_id", "from", "course_arrange", ")", ";"], "ru": ["select", "name", "from", "teacher", "where", "teacher_id", "not", "in", "(", "select", "teacher_id", "from", "course_arrange", ")", ";"]}}, {"id": "D_0411", "db_id": "course_teach", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange);", "ru": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange);"}, "question": {"en": "What are the names of the teachers whose courses have not been arranged?", "ru": "Как зовут учителей, которые не ведут курсы?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[true, 8, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[true, 8, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "teachers", "whose", "courses", "have", "not", "been", "arranged", "?"], "ru": ["Как", "зовут", "учителей", ",", "которые", "не", "ведут", "курсы", "?"]}, "query_toks": {"en": ["select", "name", "from", "teacher", "where", "teacher_id", "not", "in", "(", "select", "teacher_id", "from", "course_arrange", ")", ";"], "ru": ["select", "name", "from", "teacher", "where", "teacher_id", "not", "in", "(", "select", "teacher_id", "from", "course_arrange", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "teacher", "where", "teacher_id", "not", "in", "(", "select", "teacher_id", "from", "course_arrange", ")", ";"], "ru": ["select", "name", "from", "teacher", "where", "teacher_id", "not", "in", "(", "select", "teacher_id", "from", "course_arrange", ")", ";"]}}, {"id": "D_0412", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM visitor WHERE age  <  30;", "ru": "SELECT count(*) FROM visitor WHERE age  <  30;"}, "question": {"en": "How many visitors below age 30 are there?", "ru": "Сколько здесь посетителей младше 30 лет?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 4, [0, [0, 8, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 4, [0, [0, 8, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "visitors", "below", "age", "30", "are", "there", "?"], "ru": ["Сколько", "здесь", "посетителей", "младше", "30", "лет", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "visitor", "where", "age", "<", "30", ";"], "ru": ["select", "count", "(", "*", ")", "from", "visitor", "where", "age", "<", "30", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "visitor", "where", "age", "<", "30", ";"], "ru": ["select", "count", "(", "*", ")", "from", "visitor", "where", "age", "<", "30", ";"]}}, {"id": "D_0413", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC;", "ru": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC;"}, "question": {"en": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.", "ru": "Показать имена посетителей, чей уровень членства выше 4, и отсортировать результаты по уровню от высокого к низкому."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 7, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 7, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "names", "of", "the", "visitors", "whose", "membership", "level", "is", "higher", "than", "4", ",", "and", "order", "the", "results", "by", "the", "level", "from", "high", "to", "low", "."], "ru": ["Показать", "имена", "посетителей", ",", "чей", "уровень", "членства", "выше", "4", ",", "и", "отсортировать", "результаты", "по", "уровню", "от", "высокого", "к", "низкому", "."]}, "query_toks": {"en": ["select", "name", "from", "visitor", "where", "level_of_membership", ">", "4", "order", "by", "level_of_membership", "desc", ";"], "ru": ["select", "name", "from", "visitor", "where", "level_of_membership", ">", "4", "order", "by", "level_of_membership", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "visitor", "where", "level_of_membership", ">", "4", "order", "by", "level_of_membership", "desc", ";"], "ru": ["select", "name", "from", "visitor", "where", "level_of_membership", ">", "4", "order", "by", "level_of_membership", "desc", ";"]}}, {"id": "D_0414", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4;", "ru": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4;"}, "question": {"en": "What is the average age of the visitors whose membership level is not higher than 4?", "ru": "Каков средний возраст посетителей, уровень членства которых не выше 4?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 8, false], null]]]], "where": [[false, 6, [0, [0, 7, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 8, false], null]]]], "where": [[false, 6, [0, [0, 7, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "age", "of", "the", "visitors", "whose", "membership", "level", "is", "not", "higher", "than", "4", "?"], "ru": ["Каков", "средний", "возраст", "посетителей", ",", "уровень", "членства", "которых", "не", "выше", "4", "?"]}, "query_toks": {"en": ["select", "avg", "(", "age", ")", "from", "visitor", "where", "level_of_membership", "<=", "4", ";"], "ru": ["select", "avg", "(", "age", ")", "from", "visitor", "where", "level_of_membership", "<=", "4", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "age", ")", "from", "visitor", "where", "level_of_membership", "<=", "4", ";"], "ru": ["select", "avg", "(", "age", ")", "from", "visitor", "where", "level_of_membership", "<=", "4", ";"]}}, {"id": "D_0415", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC;", "ru": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC;"}, "question": {"en": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "ru": "Найди имена и уровень членства посетителей, чей уровень членства выше 4, и отсортируй их по возрасту от старых к молодым."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 8, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 4.0, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 8, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "name", "and", "membership", "level", "of", "the", "visitors", "whose", "membership", "level", "is", "higher", "than", "4", ",", "and", "sort", "by", "their", "age", "from", "old", "to", "young", "."], "ru": ["Найди", "имена", "и", "уровень", "членства", "посетителей", ",", "чей", "уровень", "членства", "выше", "4", ",", "и", "отсортируй", "их", "по", "возрасту", "от", "старых", "к", "молодым", "."]}, "query_toks": {"en": ["select", "name", ",", "level_of_membership", "from", "visitor", "where", "level_of_membership", ">", "4", "order", "by", "age", "desc", ";"], "ru": ["select", "name", ",", "level_of_membership", "from", "visitor", "where", "level_of_membership", ">", "4", "order", "by", "age", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "level_of_membership", "from", "visitor", "where", "level_of_membership", ">", "4", "order", "by", "age", "desc", ";"], "ru": ["select", "name", ",", "level_of_membership", "from", "visitor", "where", "level_of_membership", ">", "4", "order", "by", "age", "desc", ";"]}}, {"id": "D_0416", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1;", "ru": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1;"}, "question": {"en": "Find the id and name of the museum that has the most staff members?", "ru": "id и название музея, в котором больше всего сотрудников"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 3, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 3, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "id", "and", "name", "of", "the", "museum", "that", "has", "the", "most", "staff", "members", "?"], "ru": ["id", "и", "название", "музея", ",", "в", "котором", "больше", "всего", "сотрудников"]}, "query_toks": {"en": ["select", "museum_id", ",", "name", "from", "museum", "order", "by", "num_of_staff", "desc", "limit", "1", ";"], "ru": ["select", "museum_id", ",", "name", "from", "museum", "order", "by", "num_of_staff", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "museum_id", ",", "name", "from", "museum", "order", "by", "num_of_staff", "desc", "limit", "1", ";"], "ru": ["select", "museum_id", ",", "name", "from", "museum", "order", "by", "num_of_staff", "desc", "limit", "1", ";"]}}, {"id": "D_0417", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009;", "ru": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009;"}, "question": {"en": "Find the average number of staff working for the museums that were open before 2009.", "ru": "Найдите среднее количество сотрудников, работающих в музеях, которые были открыты до 2009 года."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], 2009.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], 2009.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "average", "number", "of", "staff", "working", "for", "the", "museums", "that", "were", "open", "before", "2009", "."], "ru": ["Найдите", "среднее", "количество", "сотрудников", ",", "работающих", "в", "музеях", ",", "которые", "были", "открыты", "до", "2009", "года", "."]}, "query_toks": {"en": ["select", "avg", "(", "num_of_staff", ")", "from", "museum", "where", "open_year", "<", "2009", ";"], "ru": ["select", "avg", "(", "num_of_staff", ")", "from", "museum", "where", "open_year", "<", "2009", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "num_of_staff", ")", "from", "museum", "where", "open_year", "<", "2009", ";"], "ru": ["select", "avg", "(", "num_of_staff", ")", "from", "museum", "where", "open_year", "<", "2009", ";"]}}, {"id": "D_0418", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum';", "ru": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Пушкинский';"}, "question": {"en": "What are the opening year and staff number of the museum named Plaza Museum?", "ru": "Каковы год открытия и штатная численность музея Пушкинский?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Plaza Museum\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Пушкинский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "opening", "year", "and", "staff", "number", "of", "the", "museum", "named", "Plaza", "Museum", "?"], "ru": ["Каковы", "год", "открытия", "и", "штатная", "численность", "музея", "Пушкинский", "?"]}, "query_toks": {"en": ["select", "num_of_staff", ",", "open_year", "from", "museum", "where", "name", "=", "\"Plaza Museum\"", ";"], "ru": ["select", "num_of_staff", ",", "open_year", "from", "museum", "where", "name", "=", "\"Пушкинский\"", ";"]}, "query_toks_no_values": {"en": ["select", "num_of_staff", ",", "open_year", "from", "museum", "where", "name", "=", "value", ";"], "ru": ["select", "num_of_staff", ",", "open_year", "from", "museum", "where", "name", "=", "value", ";"]}}, {"id": "D_0419", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010);", "ru": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010);"}, "question": {"en": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.", "ru": "Названия музеев, в которых работает больше сотрудников, чем минимальная численность персонала всех музеев, открытых после 2010 года."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["find", "the", "names", "of", "museums", "which", "have", "more", "staff", "than", "the", "minimum", "staff", "number", "of", "all", "museums", "opened", "after", "2010", "."], "ru": ["Названия", "музеев", ",", "в", "которых", "работает", "больше", "сотрудников", ",", "чем", "минимальная", "численность", "персонала", "всех", "музеев", ",", "открытых", "после", "2010", "года", "."]}, "query_toks": {"en": ["select", "name", "from", "museum", "where", "num_of_staff", ">", "(", "select", "min", "(", "num_of_staff", ")", "from", "museum", "where", "open_year", ">", "2010", ")", ";"], "ru": ["select", "name", "from", "museum", "where", "num_of_staff", ">", "(", "select", "min", "(", "num_of_staff", ")", "from", "museum", "where", "open_year", ">", "2010", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "museum", "where", "num_of_staff", ">", "(", "select", "min", "(", "num_of_staff", ")", "from", "museum", "where", "open_year", ">", "2010", ")", ";"], "ru": ["select", "name", "from", "museum", "where", "num_of_staff", ">", "(", "select", "min", "(", "num_of_staff", ")", "from", "museum", "where", "open_year", ">", "2010", ")", ";"]}}, {"id": "D_0420", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1;", "ru": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1;"}, "question": {"en": "find the id, name and age for visitors who visited some museums more than once.", "ru": "Показать id, имя и возраст посетителей, которые посещали некоторые музеи более одного раза."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["find", "the", "id", ",", "name", "and", "age", "for", "visitors", "who", "visited", "some", "museums", "more", "than", "once", "."], "ru": ["Показать", "id", ",", "имя", "и", "возраст", "посетителей", ",", "которые", "посещали", "некоторые", "музеи", "более", "одного", "раза", "."]}, "query_toks": {"en": ["select", "t1.id", ",", "t1.name", ",", "t1.age", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "t1.id", ",", "t1.name", ",", "t1.age", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.id", ",", "t1.name", ",", "t1.age", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "t1.id", ",", "t1.name", ",", "t1.age", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "group", "by", "t1.id", "having", "count", "(", "*", ")", ">", "1", ";"]}}, {"id": "D_0421", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1;", "ru": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1;"}, "question": {"en": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?", "ru": "Какой id, имя и уровень членства у посетителей, которые потратили наибольшую сумму денег на все билеты в музей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [4, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [4, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "id", ",", "name", "and", "membership", "level", "of", "visitors", "who", "have", "spent", "the", "largest", "amount", "of", "money", "in", "total", "in", "all", "museum", "tickets", "?"], "ru": ["Какой", "id", ",", "имя", "и", "уровень", "членства", "у", "посетителей", ",", "которые", "потратили", "наибольшую", "сумму", "денег", "на", "все", "билеты", "в", "музей", "?"]}, "query_toks": {"en": ["select", "t2.visitor_id", ",", "t1.name", ",", "t1.level_of_membership", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "group", "by", "t2.visitor_id", "order", "by", "sum", "(", "t2.total_spent", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.visitor_id", ",", "t1.name", ",", "t1.level_of_membership", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "group", "by", "t2.visitor_id", "order", "by", "sum", "(", "t2.total_spent", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.visitor_id", ",", "t1.name", ",", "t1.level_of_membership", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "group", "by", "t2.visitor_id", "order", "by", "sum", "(", "t2.total_spent", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.visitor_id", ",", "t1.name", ",", "t1.level_of_membership", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "group", "by", "t2.visitor_id", "order", "by", "sum", "(", "t2.total_spent", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0422", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What are the id and name of the museum visited most times?", "ru": "Какой id и название у музея который посещают чаще всего?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "id", "and", "name", "of", "the", "museum", "visited", "most", "times", "?"], "ru": ["Какой", "id", "и", "название", "у", "музея", "который", "посещают", "чаще", "всего", "?"]}, "query_toks": {"en": ["select", "t2.museum_id", ",", "t1.name", "from", "museum", "as", "t1", "join", "visit", "as", "t2", "on", "t1.museum_id", "=", "t2.museum_id", "group", "by", "t2.museum_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.museum_id", ",", "t1.name", "from", "museum", "as", "t1", "join", "visit", "as", "t2", "on", "t1.museum_id", "=", "t2.museum_id", "group", "by", "t2.museum_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.museum_id", ",", "t1.name", "from", "museum", "as", "t1", "join", "visit", "as", "t2", "on", "t1.museum_id", "=", "t2.museum_id", "group", "by", "t2.museum_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.museum_id", ",", "t1.name", "from", "museum", "as", "t1", "join", "visit", "as", "t2", "on", "t1.museum_id", "=", "t2.museum_id", "group", "by", "t2.museum_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0423", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit);", "ru": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit);"}, "question": {"en": "What is the name of the museum that had no visitor yet?", "ru": "Как называется музей, в котором еще не было ни одного посетителя?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "museum", "that", "had", "no", "visitor", "yet", "?"], "ru": ["Как", "называется", "музей", ",", "в", "котором", "еще", "не", "было", "ни", "одного", "посетителя", "?"]}, "query_toks": {"en": ["select", "name", "from", "museum", "where", "museum_id", "not", "in", "(", "select", "museum_id", "from", "visit", ")", ";"], "ru": ["select", "name", "from", "museum", "where", "museum_id", "not", "in", "(", "select", "museum_id", "from", "visit", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "museum", "where", "museum_id", "not", "in", "(", "select", "museum_id", "from", "visit", ")", ";"], "ru": ["select", "name", "from", "museum", "where", "museum_id", "not", "in", "(", "select", "museum_id", "from", "visit", ")", ";"]}}, {"id": "D_0424", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1;", "ru": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1;"}, "question": {"en": "Find the name and age of the visitor who bought the most tickets at once.", "ru": "Имя и возраст посетителя, который купил больше всего билетов за раз."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "name", "and", "age", "of", "the", "visitor", "who", "bought", "the", "most", "tickets", "at", "once", "."], "ru": ["Имя", "и", "возраст", "посетителя", ",", "который", "купил", "больше", "всего", "билетов", "за", "раз", "."]}, "query_toks": {"en": ["select", "t1.name", ",", "t1.age", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "order", "by", "t2.num_of_ticket", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", ",", "t1.age", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "order", "by", "t2.num_of_ticket", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", ",", "t1.age", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "order", "by", "t2.num_of_ticket", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", ",", "t1.age", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "order", "by", "t2.num_of_ticket", "desc", "limit", "1", ";"]}}, {"id": "D_0425", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit;", "ru": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit;"}, "question": {"en": "What are the average and maximum number of tickets bought in all visits?", "ru": "Каково среднее и максимальное количество билетов, купленных за все посещения?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 11, false], null]], [1, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 11, false], null]], [1, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "average", "and", "maximum", "number", "of", "tickets", "bought", "in", "all", "visits", "?"], "ru": ["Каково", "среднее", "и", "максимальное", "количество", "билетов", ",", "купленных", "за", "все", "посещения", "?"]}, "query_toks": {"en": ["select", "avg", "(", "num_of_ticket", ")", ",", "max", "(", "num_of_ticket", ")", "from", "visit", ";"], "ru": ["select", "avg", "(", "num_of_ticket", ")", ",", "max", "(", "num_of_ticket", ")", "from", "visit", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "num_of_ticket", ")", ",", "max", "(", "num_of_ticket", ")", "from", "visit", ";"], "ru": ["select", "avg", "(", "num_of_ticket", ")", ",", "max", "(", "num_of_ticket", ")", "from", "visit", ";"]}}, {"id": "D_0426", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1;", "ru": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1;"}, "question": {"en": "What is the total ticket expense of the visitors whose membership level is 1?", "ru": "Каковы общие расходы на билеты у посетителей, чей уровень членства равен 1?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]]}, "select": [false, [[4, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null]]}, "select": [false, [[4, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "total", "ticket", "expense", "of", "the", "visitors", "whose", "membership", "level", "is", "1", "?"], "ru": ["Каковы", "общие", "расходы", "на", "билеты", "у", "посетителей", ",", "чей", "уровень", "членства", "равен", "1", "?"]}, "query_toks": {"en": ["select", "sum", "(", "t2.total_spent", ")", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "where", "t1.level_of_membership", "=", "1", ";"], "ru": ["select", "sum", "(", "t2.total_spent", ")", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "where", "t1.level_of_membership", "=", "1", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "t2.total_spent", ")", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "where", "t1.level_of_membership", "=", "1", ";"], "ru": ["select", "sum", "(", "t2.total_spent", ")", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "where", "t1.level_of_membership", "=", "1", ";"]}}, {"id": "D_0427", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011;", "ru": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011;"}, "question": {"en": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?", "ru": "Как зовут посетителя, который посетил и музей, открытый до 2009 года, и музей, открытый после 2011 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], 2009.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 2011.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], 2009.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 10, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 2011.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "visitor", "who", "visited", "both", "a", "museum", "opened", "before", "2009", "and", "a", "museum", "opened", "after", "2011", "?"], "ru": ["Как", "зовут", "посетителя", ",", "который", "посетил", "и", "музей", ",", "открытый", "до", "2009", "года", ",", "и", "музей", ",", "открытый", "после", "2011", "года", "?"]}, "query_toks": {"en": ["select", "t1.name", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "join", "museum", "as", "t3", "on", "t3.museum_id", "=", "t2.museum_id", "where", "t3.open_year", "<", "2009", "intersect", "select", "t1.name", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "join", "museum", "as", "t3", "on", "t3.museum_id", "=", "t2.museum_id", "where", "t3.open_year", ">", "2011", ";"], "ru": ["select", "t1.name", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "join", "museum", "as", "t3", "on", "t3.museum_id", "=", "t2.museum_id", "where", "t3.open_year", "<", "2009", "intersect", "select", "t1.name", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "join", "museum", "as", "t3", "on", "t3.museum_id", "=", "t2.museum_id", "where", "t3.open_year", ">", "2011", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "join", "museum", "as", "t3", "on", "t3.museum_id", "=", "t2.museum_id", "where", "t3.open_year", "<", "2009", "intersect", "select", "t1.name", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "join", "museum", "as", "t3", "on", "t3.museum_id", "=", "t2.museum_id", "where", "t3.open_year", ">", "2011", ";"], "ru": ["select", "t1.name", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "join", "museum", "as", "t3", "on", "t3.museum_id", "=", "t2.museum_id", "where", "t3.open_year", "<", "2009", "intersect", "select", "t1.name", "from", "visitor", "as", "t1", "join", "visit", "as", "t2", "on", "t1.id", "=", "t2.visitor_id", "join", "museum", "as", "t3", "on", "t3.museum_id", "=", "t2.museum_id", "where", "t3.open_year", ">", "2011", ";"]}}, {"id": "D_0428", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010);", "ru": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010);"}, "question": {"en": "Find the number of visitors who did not visit any museum opened after 2010.", "ru": "Найдите количество посетителей, которые не посещали ни один музей, открытый после 2010 года."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "visitors", "who", "did", "not", "visit", "any", "museum", "opened", "after", "2010", "."], "ru": ["Найдите", "количество", "посетителей", ",", "которые", "не", "посещали", "ни", "один", "музей", ",", "открытый", "после", "2010", "года", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "visitor", "where", "id", "not", "in", "(", "select", "t2.visitor_id", "from", "museum", "as", "t1", "join", "visit", "as", "t2", "on", "t1.museum_id", "=", "t2.museum_id", "where", "t1.open_year", ">", "2010", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "visitor", "where", "id", "not", "in", "(", "select", "t2.visitor_id", "from", "museum", "as", "t1", "join", "visit", "as", "t2", "on", "t1.museum_id", "=", "t2.museum_id", "where", "t1.open_year", ">", "2010", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "visitor", "where", "id", "not", "in", "(", "select", "t2.visitor_id", "from", "museum", "as", "t1", "join", "visit", "as", "t2", "on", "t1.museum_id", "=", "t2.museum_id", "where", "t1.open_year", ">", "2010", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "visitor", "where", "id", "not", "in", "(", "select", "t2.visitor_id", "from", "museum", "as", "t1", "join", "visit", "as", "t2", "on", "t1.museum_id", "=", "t2.museum_id", "where", "t1.open_year", ">", "2010", ")", ";"]}}, {"id": "D_0429", "db_id": "museum_visit", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008;", "ru": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008;"}, "question": {"en": "How many museums were opened after 2013 or before 2008?", "ru": "Сколько музеев было открыто после 2013 года или до 2008 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 2013.0, null], "or", [false, 4, [0, [0, 4, false], null], 2008.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 2013.0, null], "or", [false, 4, [0, [0, 4, false], null], 2008.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "museums", "were", "opened", "after", "2013", "or", "before", "2008", "?"], "ru": ["Сколько", "музеев", "было", "открыто", "после", "2013", "года", "или", "до", "2008", "года", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "museum", "where", "open_year", ">", "2013", "or", "open_year", "<", "2008", ";"], "ru": ["select", "count", "(", "*", ")", "from", "museum", "where", "open_year", ">", "2013", "or", "open_year", "<", "2008", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "museum", "where", "open_year", ">", "2013", "or", "open_year", "<", "2008", ";"], "ru": ["select", "count", "(", "*", ")", "from", "museum", "where", "open_year", ">", "2013", "or", "open_year", "<", "2008", ";"]}}, {"id": "D_0430", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM players;", "ru": "SELECT count(*) FROM players;"}, "question": {"en": "Find the total number of players.", "ru": "Найдите общее количество игроков."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "total", "number", "of", "players", "."], "ru": ["Найдите", "общее", "количество", "игроков", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "players", ";"], "ru": ["select", "count", "(", "*", ")", "from", "players", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "players", ";"], "ru": ["select", "count", "(", "*", ")", "from", "players", ";"]}}, {"id": "D_0431", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM players;", "ru": "SELECT count(*) FROM players;"}, "question": {"en": "How many players are there?", "ru": "Сколько всего там игроков?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "players", "are", "there", "?"], "ru": ["Сколько", "всего", "там", "игроков", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "players", ";"], "ru": ["select", "count", "(", "*", ")", "from", "players", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "players", ";"], "ru": ["select", "count", "(", "*", ")", "from", "players", ";"]}}, {"id": "D_0432", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM matches;", "ru": "SELECT count(*) FROM matches;"}, "question": {"en": "Find the total number of matches.", "ru": "Найдите общее количество матчей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "total", "number", "of", "matches", "."], "ru": ["Найдите", "общее", "количество", "матчей", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "matches", ";"], "ru": ["select", "count", "(", "*", ")", "from", "matches", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "matches", ";"], "ru": ["select", "count", "(", "*", ")", "from", "matches", ";"]}}, {"id": "D_0433", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM matches;", "ru": "SELECT count(*) FROM matches;"}, "question": {"en": "Count the number of matches.", "ru": "Подсчитайте количество матчей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "matches", "."], "ru": ["Подсчитайте", "количество", "матчей", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "matches", ";"], "ru": ["select", "count", "(", "*", ")", "from", "matches", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "matches", ";"], "ru": ["select", "count", "(", "*", ")", "from", "matches", ";"]}}, {"id": "D_0434", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA';", "ru": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'АФК';"}, "question": {"en": "List the first name and birth date of all players from the country with code USA.", "ru": "Укажите имя и дату рождения всех игроков из страны с кодом АФК."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"АФК\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "first", "name", "and", "birth", "date", "of", "all", "players", "from", "the", "country", "with", "code", "USA", "."], "ru": ["Укажите", "имя", "и", "дату", "рождения", "всех", "игроков", "из", "страны", "с", "кодом", "АФК", "."]}, "query_toks": {"en": ["select", "first_name", ",", "birth_date", "from", "players", "where", "country_code", "=", "\"USA\"", ";"], "ru": ["select", "first_name", ",", "birth_date", "from", "players", "where", "country_code", "=", "\"АФК\"", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", ",", "birth_date", "from", "players", "where", "country_code", "=", "value", ";"], "ru": ["select", "first_name", ",", "birth_date", "from", "players", "where", "country_code", "=", "value", ";"]}}, {"id": "D_0435", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA';", "ru": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'АФК';"}, "question": {"en": "What are the first names and birth dates of players from the USA?", "ru": "Какие имена и даты рождения у игроков из АФК?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"АФК\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "first", "names", "and", "birth", "dates", "of", "players", "from", "the", "USA", "?"], "ru": ["Какие", "имена", "и", "даты", "рождения", "у", "игроков", "из", "АФК", "?"]}, "query_toks": {"en": ["select", "first_name", ",", "birth_date", "from", "players", "where", "country_code", "=", "\"USA\"", ";"], "ru": ["select", "first_name", ",", "birth_date", "from", "players", "where", "country_code", "=", "\"АФК\"", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", ",", "birth_date", "from", "players", "where", "country_code", "=", "value", ";"], "ru": ["select", "first_name", ",", "birth_date", "from", "players", "where", "country_code", "=", "value", ";"]}}, {"id": "D_0436", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches;", "ru": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches;"}, "question": {"en": "Find the average age of losers and winners of all matches.", "ru": "Найдите средний возраст проигравших и победителей всех матчей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 9, false], null]], [5, [0, [0, 28, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 9, false], null]], [5, [0, [0, 28, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "average", "age", "of", "losers", "and", "winners", "of", "all", "matches", "."], "ru": ["Найдите", "средний", "возраст", "проигравших", "и", "победителей", "всех", "матчей", "."]}, "query_toks": {"en": ["select", "avg", "(", "loser_age", ")", ",", "avg", "(", "winner_age", ")", "from", "matches", ";"], "ru": ["select", "avg", "(", "loser_age", ")", ",", "avg", "(", "winner_age", ")", "from", "matches", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "loser_age", ")", ",", "avg", "(", "winner_age", ")", "from", "matches", ";"], "ru": ["select", "avg", "(", "loser_age", ")", ",", "avg", "(", "winner_age", ")", "from", "matches", ";"]}}, {"id": "D_0437", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches;", "ru": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches;"}, "question": {"en": "What are the average ages of losers and winners across matches?", "ru": "Каков средний возраст проигравших и победителей в матчах?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 9, false], null]], [5, [0, [0, 28, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 9, false], null]], [5, [0, [0, 28, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "average", "ages", "of", "losers", "and", "winners", "across", "matches", "?"], "ru": ["Каков", "средний", "возраст", "проигравших", "и", "победителей", "в", "матчах", "?"]}, "query_toks": {"en": ["select", "avg", "(", "loser_age", ")", ",", "avg", "(", "winner_age", ")", "from", "matches", ";"], "ru": ["select", "avg", "(", "loser_age", ")", ",", "avg", "(", "winner_age", ")", "from", "matches", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "loser_age", ")", ",", "avg", "(", "winner_age", ")", "from", "matches", ";"], "ru": ["select", "avg", "(", "loser_age", ")", ",", "avg", "(", "winner_age", ")", "from", "matches", ";"]}}, {"id": "D_0438", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(winner_rank) FROM matches;", "ru": "SELECT avg(winner_rank) FROM matches;"}, "question": {"en": "Find the average rank of winners in all matches.", "ru": "Найдите средний рейтинг победителей во всех матчах."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "average", "rank", "of", "winners", "in", "all", "matches", "."], "ru": ["Найдите", "средний", "рейтинг", "победителей", "во", "всех", "матчах", "."]}, "query_toks": {"en": ["select", "avg", "(", "winner_rank", ")", "from", "matches", ";"], "ru": ["select", "avg", "(", "winner_rank", ")", "from", "matches", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "winner_rank", ")", "from", "matches", ";"], "ru": ["select", "avg", "(", "winner_rank", ")", "from", "matches", ";"]}}, {"id": "D_0439", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(winner_rank) FROM matches;", "ru": "SELECT avg(winner_rank) FROM matches;"}, "question": {"en": "What is the average rank for winners in all matches?", "ru": "Каков средний рейтинг победителей во всех матчах?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "rank", "for", "winners", "in", "all", "matches", "?"], "ru": ["Каков", "средний", "рейтинг", "победителей", "во", "всех", "матчах", "?"]}, "query_toks": {"en": ["select", "avg", "(", "winner_rank", ")", "from", "matches", ";"], "ru": ["select", "avg", "(", "winner_rank", ")", "from", "matches", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "winner_rank", ")", "from", "matches", ";"], "ru": ["select", "avg", "(", "winner_rank", ")", "from", "matches", ";"]}}, {"id": "D_0440", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT min(loser_rank) FROM matches;", "ru": "SELECT min(loser_rank) FROM matches;"}, "question": {"en": "Find the highest rank of losers in all matches.", "ru": "Самый высокий рейтинг проигравших во всех матчах."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "highest", "rank", "of", "losers", "in", "all", "matches", "."], "ru": ["Самый", "высокий", "рейтинг", "проигравших", "во", "всех", "матчах", "."]}, "query_toks": {"en": ["select", "min", "(", "loser_rank", ")", "from", "matches", ";"], "ru": ["select", "min", "(", "loser_rank", ")", "from", "matches", ";"]}, "query_toks_no_values": {"en": ["select", "min", "(", "loser_rank", ")", "from", "matches", ";"], "ru": ["select", "min", "(", "loser_rank", ")", "from", "matches", ";"]}}, {"id": "D_0441", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT min(loser_rank) FROM matches;", "ru": "SELECT min(loser_rank) FROM matches;"}, "question": {"en": "What is the best rank of losers across all matches?", "ru": "Какой самый лучший рейтинг проигравших во всех матчах?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "best", "rank", "of", "losers", "across", "all", "matches", "?"], "ru": ["Какой", "самый", "лучший", "рейтинг", "проигравших", "во", "всех", "матчах", "?"]}, "query_toks": {"en": ["select", "min", "(", "loser_rank", ")", "from", "matches", ";"], "ru": ["select", "min", "(", "loser_rank", ")", "from", "matches", ";"]}, "query_toks_no_values": {"en": ["select", "min", "(", "loser_rank", ")", "from", "matches", ";"], "ru": ["select", "min", "(", "loser_rank", ")", "from", "matches", ";"]}}, {"id": "D_0442", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT country_code) FROM players;", "ru": "SELECT count(DISTINCT country_code) FROM players;"}, "question": {"en": "find the number of distinct country codes of all players.", "ru": "Количество различных кодов стран всех игроков."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 6, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 6, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["find", "the", "number", "of", "distinct", "country", "codes", "of", "all", "players", "."], "ru": ["Количество", "различных", "кодов", "стран", "всех", "игроков", "."]}, "query_toks": {"en": ["select", "count", "(", "distinct", "country_code", ")", "from", "players", ";"], "ru": ["select", "count", "(", "distinct", "country_code", ")", "from", "players", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "country_code", ")", "from", "players", ";"], "ru": ["select", "count", "(", "distinct", "country_code", ")", "from", "players", ";"]}}, {"id": "D_0443", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT country_code) FROM players;", "ru": "SELECT count(DISTINCT country_code) FROM players;"}, "question": {"en": "How many distinct countries do players come from?", "ru": "Из скольких разных стран все игроки?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 6, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 6, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "distinct", "countries", "do", "players", "come", "from", "?"], "ru": ["Из", "скольких", "разных", "стран", "все", "игроки", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "country_code", ")", "from", "players", ";"], "ru": ["select", "count", "(", "distinct", "country_code", ")", "from", "players", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "country_code", ")", "from", "players", ";"], "ru": ["select", "count", "(", "distinct", "country_code", ")", "from", "players", ";"]}}, {"id": "D_0444", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT loser_name) FROM matches;", "ru": "SELECT count(DISTINCT loser_name) FROM matches;"}, "question": {"en": "Find the number of distinct name of losers.", "ru": "Найдите количество отличных имен проигравших."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 15, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 15, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "distinct", "name", "of", "losers", "."], "ru": ["Найдите", "количество", "отличных", "имен", "проигравших", "."]}, "query_toks": {"en": ["select", "count", "(", "distinct", "loser_name", ")", "from", "matches", ";"], "ru": ["select", "count", "(", "distinct", "loser_name", ")", "from", "matches", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "loser_name", ")", "from", "matches", ";"], "ru": ["select", "count", "(", "distinct", "loser_name", ")", "from", "matches", ";"]}}, {"id": "D_0445", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT loser_name) FROM matches;", "ru": "SELECT count(DISTINCT loser_name) FROM matches;"}, "question": {"en": "How many different loser names are there?", "ru": "Сколько существует разных имен проигравших?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 15, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 15, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "different", "loser", "names", "are", "there", "?"], "ru": ["Сколько", "существует", "разных", "имен", "проигравших", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "loser_name", ")", "from", "matches", ";"], "ru": ["select", "count", "(", "distinct", "loser_name", ")", "from", "matches", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "loser_name", ")", "from", "matches", ";"], "ru": ["select", "count", "(", "distinct", "loser_name", ")", "from", "matches", ";"]}}, {"id": "D_0446", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10;", "ru": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10;"}, "question": {"en": "Find the name of tourney that has more than 10 matches.", "ru": "Найди название турнира, в котором больше 10 матчей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [], "groupBy": [[0, 27, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [], "groupBy": [[0, 27, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "name", "of", "tourney", "that", "has", "more", "than", "10", "matches", "."], "ru": ["Найди", "название", "турнира", ",", "в", "котором", "больше", "10", "матчей", "."]}, "query_toks": {"en": ["select", "tourney_name", "from", "matches", "group", "by", "tourney_name", "having", "count", "(", "*", ")", ">", "10", ";"], "ru": ["select", "tourney_name", "from", "matches", "group", "by", "tourney_name", "having", "count", "(", "*", ")", ">", "10", ";"]}, "query_toks_no_values": {"en": ["select", "tourney_name", "from", "matches", "group", "by", "tourney_name", "having", "count", "(", "*", ")", ">", "10", ";"], "ru": ["select", "tourney_name", "from", "matches", "group", "by", "tourney_name", "having", "count", "(", "*", ")", ">", "10", ";"]}}, {"id": "D_0447", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10;", "ru": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10;"}, "question": {"en": "What are the names of tournaments that have more than 10 matches?", "ru": "Как называются турниры, в которых больше 10 матчей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [], "groupBy": [[0, 27, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [], "groupBy": [[0, 27, false]], "having": [[false, 3, [0, [3, 0, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "tournaments", "that", "have", "more", "than", "10", "matches", "?"], "ru": ["Как", "называются", "турниры", ",", "в", "которых", "больше", "10", "матчей", "?"]}, "query_toks": {"en": ["select", "tourney_name", "from", "matches", "group", "by", "tourney_name", "having", "count", "(", "*", ")", ">", "10", ";"], "ru": ["select", "tourney_name", "from", "matches", "group", "by", "tourney_name", "having", "count", "(", "*", ")", ">", "10", ";"]}, "query_toks_no_values": {"en": ["select", "tourney_name", "from", "matches", "group", "by", "tourney_name", "having", "count", "(", "*", ")", ">", "10", ";"], "ru": ["select", "tourney_name", "from", "matches", "group", "by", "tourney_name", "having", "count", "(", "*", ")", ">", "10", ";"]}}, {"id": "D_0448", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016;", "ru": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016;"}, "question": {"en": "List the names of all winners who played in both 2013 and 2016.", "ru": "Перечислите имена всех победителей, игравших в 2013 и 2016 годах."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2013.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2016.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2013.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2016.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "names", "of", "all", "winners", "who", "played", "in", "both", "2013", "and", "2016", "."], "ru": ["Перечислите", "имена", "всех", "победителей", ",", "игравших", "в", "2013", "и", "2016", "годах", "."]}, "query_toks": {"en": ["select", "winner_name", "from", "matches", "where", "year", "=", "2013", "intersect", "select", "winner_name", "from", "matches", "where", "year", "=", "2016", ";"], "ru": ["select", "winner_name", "from", "matches", "where", "year", "=", "2013", "intersect", "select", "winner_name", "from", "matches", "where", "year", "=", "2016", ";"]}, "query_toks_no_values": {"en": ["select", "winner_name", "from", "matches", "where", "year", "=", "2013", "intersect", "select", "winner_name", "from", "matches", "where", "year", "=", "2016", ";"], "ru": ["select", "winner_name", "from", "matches", "where", "year", "=", "2013", "intersect", "select", "winner_name", "from", "matches", "where", "year", "=", "2016", ";"]}}, {"id": "D_0449", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016;", "ru": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016;"}, "question": {"en": "What are the names of players who won in both 2013 and 2016?", "ru": "Как зовут игроков, победивших в 2013 и 2016 годах?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2013.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2016.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2013.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2016.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "players", "who", "won", "in", "both", "2013", "and", "2016", "?"], "ru": ["Как", "зовут", "игроков", ",", "победивших", "в", "2013", "и", "2016", "годах", "?"]}, "query_toks": {"en": ["select", "winner_name", "from", "matches", "where", "year", "=", "2013", "intersect", "select", "winner_name", "from", "matches", "where", "year", "=", "2016", ";"], "ru": ["select", "winner_name", "from", "matches", "where", "year", "=", "2013", "intersect", "select", "winner_name", "from", "matches", "where", "year", "=", "2016", ";"]}, "query_toks_no_values": {"en": ["select", "winner_name", "from", "matches", "where", "year", "=", "2013", "intersect", "select", "winner_name", "from", "matches", "where", "year", "=", "2016", ";"], "ru": ["select", "winner_name", "from", "matches", "where", "year", "=", "2013", "intersect", "select", "winner_name", "from", "matches", "where", "year", "=", "2016", ";"]}}, {"id": "D_0450", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016;", "ru": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016;"}, "question": {"en": "List the number of all matches who played in years of 2013 or 2016.", "ru": "Укажите количество всех матчей, сыгранных в 2013 или 2016 годах."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2013.0, null], "or", [false, 2, [0, [0, 38, false], null], 2016.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2013.0, null], "or", [false, 2, [0, [0, 38, false], null], 2016.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "number", "of", "all", "matches", "who", "played", "in", "years", "of", "2013", "or", "2016", "."], "ru": ["Укажите", "количество", "всех", "матчей", ",", "сыгранных", "в", "2013", "или", "2016", "годах", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "matches", "where", "year", "=", "2013", "or", "year", "=", "2016", ";"], "ru": ["select", "count", "(", "*", ")", "from", "matches", "where", "year", "=", "2013", "or", "year", "=", "2016", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "matches", "where", "year", "=", "2013", "or", "year", "=", "2016", ";"], "ru": ["select", "count", "(", "*", ")", "from", "matches", "where", "year", "=", "2013", "or", "year", "=", "2016", ";"]}}, {"id": "D_0451", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016;", "ru": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016;"}, "question": {"en": "How many matches were played in 2013 or 2016?", "ru": "Сколько матчей было сыграно в 2013 или 2016?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2013.0, null], "or", [false, 2, [0, [0, 38, false], null], 2016.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], 2013.0, null], "or", [false, 2, [0, [0, 38, false], null], 2016.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "matches", "were", "played", "in", "2013", "or", "2016", "?"], "ru": ["Сколько", "матчей", "было", "сыграно", "в", "2013", "или", "2016", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "matches", "where", "year", "=", "2013", "or", "year", "=", "2016", ";"], "ru": ["select", "count", "(", "*", ")", "from", "matches", "where", "year", "=", "2013", "or", "year", "=", "2016", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "matches", "where", "year", "=", "2013", "or", "year", "=", "2016", ";"], "ru": ["select", "count", "(", "*", ")", "from", "matches", "where", "year", "=", "2013", "or", "year", "=", "2016", ";"]}}, {"id": "D_0452", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open';", "ru": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Чемпионат по фрисби' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Россия Первая';"}, "question": {"en": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?", "ru": "Каковы коды страны и имена игроков, победивших в турнирах чемпионата по фрисби и Россия Первая?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"WTA Championships\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Australian Open\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Чемпионат по фрисби\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Россия Первая\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "country", "code", "and", "first", "name", "of", "the", "players", "who", "won", "in", "both", "tourney", "WTA", "Championships", "and", "Australian", "Open", "?"], "ru": ["Каковы", "коды", "страны", "и", "имена", "игроков", ",", "победивших", "в", "турнирах", "чемпионата", "по", "фрисби", "и", "Россия", "Первая", "?"]}, "query_toks": {"en": ["select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "where", "t2.tourney_name", "=", "\"WTA Championships\"", "intersect", "select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "where", "t2.tourney_name", "=", "\"Australian Open\"", ";"], "ru": ["select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "where", "t2.tourney_name", "=", "\"Чемпионат по фрисби\"", "intersect", "select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "where", "t2.tourney_name", "=", "\"Россия Первая\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "where", "t2.tourney_name", "=", "value", "intersect", "select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "where", "t2.tourney_name", "=", "value", ";"], "ru": ["select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "where", "t2.tourney_name", "=", "value", "intersect", "select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "where", "t2.tourney_name", "=", "value", ";"]}}, {"id": "D_0453", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open';", "ru": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Чемпионат по фрисби' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Россия Первая';"}, "question": {"en": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?", "ru": "Какие имена и коды стран у игроков, выигравших в чемпионате по фрисби и в Россия Первая?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"WTA Championships\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Australian Open\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Чемпионат по фрисби\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Россия Первая\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "first", "names", "and", "country", "codes", "for", "players", "who", "won", "both", "the", "WTA", "Championships", "and", "the", "Australian", "Open", "?"], "ru": ["Какие", "имена", "и", "коды", "стран", "у", "игроков", ",", "выигравших", "в", "чемпионате", "по", "фрисби", "и", "в", "Россия", "Первая", "?"]}, "query_toks": {"en": ["select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "where", "t2.tourney_name", "=", "\"WTA Championships\"", "intersect", "select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "where", "t2.tourney_name", "=", "\"Australian Open\"", ";"], "ru": ["select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "where", "t2.tourney_name", "=", "\"Чемпионат по фрисби\"", "intersect", "select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "where", "t2.tourney_name", "=", "\"Россия Первая\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "where", "t2.tourney_name", "=", "value", "intersect", "select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "where", "t2.tourney_name", "=", "value", ";"], "ru": ["select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "where", "t2.tourney_name", "=", "value", "intersect", "select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "where", "t2.tourney_name", "=", "value", ";"]}}, {"id": "D_0454", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1;", "ru": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1;"}, "question": {"en": "Find the first name and country code of the oldest player.", "ru": "Показать имя и код страны самого старого игрока."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "first", "name", "and", "country", "code", "of", "the", "oldest", "player", "."], "ru": ["Показать", "имя", "и", "код", "страны", "самого", "старого", "игрока", "."]}, "query_toks": {"en": ["select", "first_name", ",", "country_code", "from", "players", "order", "by", "birth_date", "limit", "1", ";"], "ru": ["select", "first_name", ",", "country_code", "from", "players", "order", "by", "birth_date", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", ",", "country_code", "from", "players", "order", "by", "birth_date", "limit", "1", ";"], "ru": ["select", "first_name", ",", "country_code", "from", "players", "order", "by", "birth_date", "limit", "1", ";"]}}, {"id": "D_0455", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1;", "ru": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1;"}, "question": {"en": "What is the first name and country code of the oldest player?", "ru": "Какое имя и код страны у самого старого игрока?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "first", "name", "and", "country", "code", "of", "the", "oldest", "player", "?"], "ru": ["Какое", "имя", "и", "код", "страны", "у", "самого", "старого", "игрока", "?"]}, "query_toks": {"en": ["select", "first_name", ",", "country_code", "from", "players", "order", "by", "birth_date", "limit", "1", ";"], "ru": ["select", "first_name", ",", "country_code", "from", "players", "order", "by", "birth_date", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", ",", "country_code", "from", "players", "order", "by", "birth_date", "limit", "1", ";"], "ru": ["select", "first_name", ",", "country_code", "from", "players", "order", "by", "birth_date", "limit", "1", ";"]}}, {"id": "D_0456", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name ,  last_name FROM players ORDER BY birth_date;", "ru": "SELECT first_name ,  last_name FROM players ORDER BY birth_date;"}, "question": {"en": "List the first and last name of all players in the order of birth date.", "ru": "Отображать имена и фамилии всех игроков в порядке даты рождения."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "first", "and", "last", "name", "of", "all", "players", "in", "the", "order", "of", "birth", "date", "."], "ru": ["Отображать", "имена", "и", "фамилии", "всех", "игроков", "в", "порядке", "даты", "рождения", "."]}, "query_toks": {"en": ["select", "first_name", ",", "last_name", "from", "players", "order", "by", "birth_date", ";"], "ru": ["select", "first_name", ",", "last_name", "from", "players", "order", "by", "birth_date", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", ",", "last_name", "from", "players", "order", "by", "birth_date", ";"], "ru": ["select", "first_name", ",", "last_name", "from", "players", "order", "by", "birth_date", ";"]}}, {"id": "D_0457", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name ,  last_name FROM players ORDER BY birth_date;", "ru": "SELECT first_name ,  last_name FROM players ORDER BY birth_date;"}, "question": {"en": "What are the full names of all players, sorted by birth date?", "ru": "Каковы полные имена всех игроков, отсортированные по дате рождения?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "full", "names", "of", "all", "players", ",", "sorted", "by", "birth", "date", "?"], "ru": ["Каковы", "полные", "имена", "всех", "игроков", ",", "отсортированные", "по", "дате", "рождения", "?"]}, "query_toks": {"en": ["select", "first_name", ",", "last_name", "from", "players", "order", "by", "birth_date", ";"], "ru": ["select", "first_name", ",", "last_name", "from", "players", "order", "by", "birth_date", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", ",", "last_name", "from", "players", "order", "by", "birth_date", ";"], "ru": ["select", "first_name", ",", "last_name", "from", "players", "order", "by", "birth_date", ";"]}}, {"id": "D_0458", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date;", "ru": "SELECT first_name ,  last_name FROM players WHERE hand  =  'Л' ORDER BY birth_date;"}, "question": {"en": "List the first and last name of all players who are left / L hand in the order of birth date.", "ru": "Отображать имя и фамилию всех игроков-левшей в порядке даты рождения."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"L\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Л\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "first", "and", "last", "name", "of", "all", "players", "who", "are", "left", "/", "L", "hand", "in", "the", "order", "of", "birth", "date", "."], "ru": ["Отображать", "имя", "и", "фамилию", "всех", "игроков-левшей", "в", "порядке", "даты", "рождения", "."]}, "query_toks": {"en": ["select", "first_name", ",", "last_name", "from", "players", "where", "hand", "=", "\"L\"", "order", "by", "birth_date", ";"], "ru": ["select", "first_name", ",", "last_name", "from", "players", "where", "hand", "=", "\"Л\"", "order", "by", "birth_date", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", ",", "last_name", "from", "players", "where", "hand", "=", "value", "order", "by", "birth_date", ";"], "ru": ["select", "first_name", ",", "last_name", "from", "players", "where", "hand", "=", "value", "order", "by", "birth_date", ";"]}}, {"id": "D_0459", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date;", "ru": "SELECT first_name ,  last_name FROM players WHERE hand  =  'Л' ORDER BY birth_date;"}, "question": {"en": "What are the full names of all left handed players, in order of birth date?", "ru": "Каковы полные имена всех игроков-левшей в порядке даты рождения?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"L\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Л\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "full", "names", "of", "all", "left", "handed", "players", ",", "in", "order", "of", "birth", "date", "?"], "ru": ["Каковы", "полные", "имена", "всех", "игроков-левшей", "в", "порядке", "даты", "рождения", "?"]}, "query_toks": {"en": ["select", "first_name", ",", "last_name", "from", "players", "where", "hand", "=", "\"L\"", "order", "by", "birth_date", ";"], "ru": ["select", "first_name", ",", "last_name", "from", "players", "where", "hand", "=", "\"Л\"", "order", "by", "birth_date", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", ",", "last_name", "from", "players", "where", "hand", "=", "value", "order", "by", "birth_date", ";"], "ru": ["select", "first_name", ",", "last_name", "from", "players", "where", "hand", "=", "value", "order", "by", "birth_date", ";"]}}, {"id": "D_0460", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1;", "ru": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1;"}, "question": {"en": "Find the first name and country code of the player who did the most number of tours.", "ru": "Найдите имя и код страны игрока, совершившего наибольшее количество туров."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 43, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 43, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "first", "name", "and", "country", "code", "of", "the", "player", "who", "did", "the", "most", "number", "of", "tours", "."], "ru": ["Найдите", "имя", "и", "код", "страны", "игрока", ",", "совершившего", "наибольшее", "количество", "туров", "."]}, "query_toks": {"en": ["select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "order", "by", "t2.tours", "desc", "limit", "1", ";"], "ru": ["select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "order", "by", "t2.tours", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "order", "by", "t2.tours", "desc", "limit", "1", ";"], "ru": ["select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "order", "by", "t2.tours", "desc", "limit", "1", ";"]}}, {"id": "D_0461", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1;", "ru": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1;"}, "question": {"en": "What is the first name and country code of the player with the most tours?", "ru": "Какое имя и код страны у игрока с наибольшим количеством туров?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 43, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 43, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "first", "name", "and", "country", "code", "of", "the", "player", "with", "the", "most", "tours", "?"], "ru": ["Какое", "имя", "и", "код", "страны", "у", "игрока", "с", "наибольшим", "количеством", "туров", "?"]}, "query_toks": {"en": ["select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "order", "by", "t2.tours", "desc", "limit", "1", ";"], "ru": ["select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "order", "by", "t2.tours", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "order", "by", "t2.tours", "desc", "limit", "1", ";"], "ru": ["select", "t1.country_code", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "order", "by", "t2.tours", "desc", "limit", "1", ";"]}}, {"id": "D_0462", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Find the year that has the most number of matches.", "ru": "Найдите год, в котором больше всего матчей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [[0, 38, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [[0, 38, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "year", "that", "has", "the", "most", "number", "of", "matches", "."], "ru": ["Найдите", "год", ",", "в", "котором", "больше", "всего", "матчей", "."]}, "query_toks": {"en": ["select", "year", "from", "matches", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "year", "from", "matches", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "year", "from", "matches", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "year", "from", "matches", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0463", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which year had the most matches?", "ru": "В каком году было больше всего матчей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [[0, 38, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [[0, 38, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "year", "had", "the", "most", "matches", "?"], "ru": ["В", "каком", "году", "было", "больше", "всего", "матчей", "?"]}, "query_toks": {"en": ["select", "year", "from", "matches", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "year", "from", "matches", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "year", "from", "matches", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "year", "from", "matches", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0464", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Find the name and rank points of the winner who won the most times.", "ru": "Отображать имя и количество очков победителя, который выигрывал больше всего раз."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]]]], "where": [], "groupBy": [[0, 34, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]]]], "where": [], "groupBy": [[0, 34, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "name", "and", "rank", "points", "of", "the", "winner", "who", "won", "the", "most", "times", "."], "ru": ["Отображать", "имя", "и", "количество", "очков", "победителя", ",", "который", "выигрывал", "больше", "всего", "раз", "."]}, "query_toks": {"en": ["select", "winner_name", ",", "winner_rank_points", "from", "matches", "group", "by", "winner_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "winner_name", ",", "winner_rank_points", "from", "matches", "group", "by", "winner_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "winner_name", ",", "winner_rank_points", "from", "matches", "group", "by", "winner_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "winner_name", ",", "winner_rank_points", "from", "matches", "group", "by", "winner_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0465", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the name of the winner who has won the most matches, and how many rank points does this player have?", "ru": "Как зовут победителя, выигравшего больше всего матчей, и сколько ранговых очков у этого игрока?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]]]], "where": [], "groupBy": [[0, 34, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]]]], "where": [], "groupBy": [[0, 34, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "winner", "who", "has", "won", "the", "most", "matches", ",", "and", "how", "many", "rank", "points", "does", "this", "player", "have", "?"], "ru": ["Как", "зовут", "победителя", ",", "выигравшего", "больше", "всего", "матчей", ",", "и", "сколько", "ранговых", "очков", "у", "этого", "игрока", "?"]}, "query_toks": {"en": ["select", "winner_name", ",", "winner_rank_points", "from", "matches", "group", "by", "winner_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "winner_name", ",", "winner_rank_points", "from", "matches", "group", "by", "winner_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "winner_name", ",", "winner_rank_points", "from", "matches", "group", "by", "winner_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "winner_name", ",", "winner_rank_points", "from", "matches", "group", "by", "winner_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0466", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1;", "ru": "SELECT winner_name FROM matches WHERE tourney_name  =  'Чемпионат по фрисби' ORDER BY winner_rank_points DESC LIMIT 1;"}, "question": {"en": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.", "ru": "Имя победителя, набравшего наибольшее количество очков в рейтинге и участвовавшего в чемпионате по фрисби."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Australian Open\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 36, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Чемпионат по фрисби\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 36, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "name", "of", "the", "winner", "who", "has", "the", "highest", "rank", "points", "and", "participated", "in", "the", "Australian", "Open", "tourney", "."], "ru": ["Имя", "победителя", ",", "набравшего", "наибольшее", "количество", "очков", "в", "рейтинге", "и", "участвовавшего", "в", "чемпионате", "по", "фрисби", "."]}, "query_toks": {"en": ["select", "winner_name", "from", "matches", "where", "tourney_name", "=", "\"Australian Open\"", "order", "by", "winner_rank_points", "desc", "limit", "1", ";"], "ru": ["select", "winner_name", "from", "matches", "where", "tourney_name", "=", "\"Чемпионат по фрисби\"", "order", "by", "winner_rank_points", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "winner_name", "from", "matches", "where", "tourney_name", "=", "value", "order", "by", "winner_rank_points", "desc", "limit", "1", ";"], "ru": ["select", "winner_name", "from", "matches", "where", "tourney_name", "=", "value", "order", "by", "winner_rank_points", "desc", "limit", "1", ";"]}}, {"id": "D_0467", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1;", "ru": "SELECT winner_name FROM matches WHERE tourney_name  =  'Чемпионат по фрисби' ORDER BY winner_rank_points DESC LIMIT 1;"}, "question": {"en": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?", "ru": "Как зовут победителя, набравшего наибольшее количество рейтинговых очков, принявшего участие в чемпионате по фрисби?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Australian Open\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 36, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Чемпионат по фрисби\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 36, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "winner", "with", "the", "most", "rank", "points", "who", "participated", "in", "the", "Australian", "Open", "tournament", "?"], "ru": ["Как", "зовут", "победителя", ",", "набравшего", "наибольшее", "количество", "рейтинговых", "очков", ",", "принявшего", "участие", "в", "чемпионате", "по", "фрисби", "?"]}, "query_toks": {"en": ["select", "winner_name", "from", "matches", "where", "tourney_name", "=", "\"Australian Open\"", "order", "by", "winner_rank_points", "desc", "limit", "1", ";"], "ru": ["select", "winner_name", "from", "matches", "where", "tourney_name", "=", "\"Чемпионат по фрисби\"", "order", "by", "winner_rank_points", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "winner_name", "from", "matches", "where", "tourney_name", "=", "value", "order", "by", "winner_rank_points", "desc", "limit", "1", ";"], "ru": ["select", "winner_name", "from", "matches", "where", "tourney_name", "=", "value", "order", "by", "winner_rank_points", "desc", "limit", "1", ";"]}}, {"id": "D_0468", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1;", "ru": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1;"}, "question": {"en": "find the names of loser and winner who played in the match with greatest number of minutes.", "ru": "найти имена проигравшего и победителя, сыгравшего в матче с наибольшим количеством минут."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["find", "the", "names", "of", "loser", "and", "winner", "who", "played", "in", "the", "match", "with", "greatest", "number", "of", "minutes", "."], "ru": ["найти", "имена", "проигравшего", "и", "победителя", ",", "сыгравшего", "в", "матче", "с", "наибольшим", "количеством", "минут", "."]}, "query_toks": {"en": ["select", "winner_name", ",", "loser_name", "from", "matches", "order", "by", "minutes", "desc", "limit", "1", ";"], "ru": ["select", "winner_name", ",", "loser_name", "from", "matches", "order", "by", "minutes", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "winner_name", ",", "loser_name", "from", "matches", "order", "by", "minutes", "desc", "limit", "1", ";"], "ru": ["select", "winner_name", ",", "loser_name", "from", "matches", "order", "by", "minutes", "desc", "limit", "1", ";"]}}, {"id": "D_0469", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1;", "ru": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1;"}, "question": {"en": "What are the names of the winner and loser who played in the longest match?", "ru": "Как зовут победителя и проигравшего, сыгравшего в самом продолжительном матче?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 20, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "winner", "and", "loser", "who", "played", "in", "the", "longest", "match", "?"], "ru": ["Как", "зовут", "победителя", "и", "проигравшего", ",", "сыгравшего", "в", "самом", "продолжительном", "матче", "?"]}, "query_toks": {"en": ["select", "winner_name", ",", "loser_name", "from", "matches", "order", "by", "minutes", "desc", "limit", "1", ";"], "ru": ["select", "winner_name", ",", "loser_name", "from", "matches", "order", "by", "minutes", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "winner_name", ",", "loser_name", "from", "matches", "order", "by", "minutes", "desc", "limit", "1", ";"], "ru": ["select", "winner_name", ",", "loser_name", "from", "matches", "order", "by", "minutes", "desc", "limit", "1", ";"]}}, {"id": "D_0470", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name;", "ru": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name;"}, "question": {"en": "Find the average ranking for each player and their first name.", "ru": "Найдите средний рейтинг каждого игрока и его имя."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[5, [0, [0, 40, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[5, [0, [0, 40, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "average", "ranking", "for", "each", "player", "and", "their", "first", "name", "."], "ru": ["Найдите", "средний", "рейтинг", "каждого", "игрока", "и", "его", "имя", "."]}, "query_toks": {"en": ["select", "avg", "(", "ranking", ")", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "group", "by", "t1.first_name", ";"], "ru": ["select", "avg", "(", "ranking", ")", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "group", "by", "t1.first_name", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "ranking", ")", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "group", "by", "t1.first_name", ";"], "ru": ["select", "avg", "(", "ranking", ")", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "group", "by", "t1.first_name", ";"]}}, {"id": "D_0471", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name;", "ru": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name;"}, "question": {"en": "What are the first names of all players, and their average rankings?", "ru": "Каковы имена всех игроков и их средний рейтинг?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[5, [0, [0, 40, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[5, [0, [0, 40, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "first", "names", "of", "all", "players", ",", "and", "their", "average", "rankings", "?"], "ru": ["Каковы", "имена", "всех", "игроков", "и", "их", "средний", "рейтинг", "?"]}, "query_toks": {"en": ["select", "avg", "(", "ranking", ")", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "group", "by", "t1.first_name", ";"], "ru": ["select", "avg", "(", "ranking", ")", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "group", "by", "t1.first_name", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "ranking", ")", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "group", "by", "t1.first_name", ";"], "ru": ["select", "avg", "(", "ranking", ")", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "group", "by", "t1.first_name", ";"]}}, {"id": "D_0472", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name;", "ru": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name;"}, "question": {"en": "Find the total ranking points for each player and their first name.", "ru": "Общее количество рейтинговых очков для каждого игрока и его имя."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[4, [0, [0, 42, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[4, [0, [0, 42, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "total", "ranking", "points", "for", "each", "player", "and", "their", "first", "name", "."], "ru": ["Общее", "количество", "рейтинговых", "очков", "для", "каждого", "игрока", "и", "его", "имя", "."]}, "query_toks": {"en": ["select", "sum", "(", "ranking_points", ")", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "group", "by", "t1.first_name", ";"], "ru": ["select", "sum", "(", "ranking_points", ")", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "group", "by", "t1.first_name", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "ranking_points", ")", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "group", "by", "t1.first_name", ";"], "ru": ["select", "sum", "(", "ranking_points", ")", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "group", "by", "t1.first_name", ";"]}}, {"id": "D_0473", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name;", "ru": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name;"}, "question": {"en": "What are the first names of all players, and their total ranking points?", "ru": "Как зовут всех игроков и их общее количество очков в рейтинге?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[4, [0, [0, 42, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 41, false], null]]}, "select": [false, [[4, [0, [0, 42, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "first", "names", "of", "all", "players", ",", "and", "their", "total", "ranking", "points", "?"], "ru": ["Как", "зовут", "всех", "игроков", "и", "их", "общее", "количество", "очков", "в", "рейтинге", "?"]}, "query_toks": {"en": ["select", "sum", "(", "ranking_points", ")", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "group", "by", "t1.first_name", ";"], "ru": ["select", "sum", "(", "ranking_points", ")", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "group", "by", "t1.first_name", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "ranking_points", ")", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "group", "by", "t1.first_name", ";"], "ru": ["select", "sum", "(", "ranking_points", ")", ",", "t1.first_name", "from", "players", "as", "t1", "join", "rankings", "as", "t2", "on", "t1.player_id", "=", "t2.player_id", "group", "by", "t1.first_name", ";"]}}, {"id": "D_0474", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  country_code FROM players GROUP BY country_code;", "ru": "SELECT count(*) ,  country_code FROM players GROUP BY country_code;"}, "question": {"en": "find the number of players for each country.", "ru": "Отображать количество игроков для каждой страны."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["find", "the", "number", "of", "players", "for", "each", "country", "."], "ru": ["Отображать", "количество", "игроков", "для", "каждой", "страны", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "country_code", "from", "players", "group", "by", "country_code", ";"], "ru": ["select", "count", "(", "*", ")", ",", "country_code", "from", "players", "group", "by", "country_code", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "country_code", "from", "players", "group", "by", "country_code", ";"], "ru": ["select", "count", "(", "*", ")", ",", "country_code", "from", "players", "group", "by", "country_code", ";"]}}, {"id": "D_0475", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  country_code FROM players GROUP BY country_code;", "ru": "SELECT count(*) ,  country_code FROM players GROUP BY country_code;"}, "question": {"en": "How many players are from each country?", "ru": "Сколько игроков от каждой страны?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "players", "are", "from", "each", "country", "?"], "ru": ["Сколько", "игроков", "от", "каждой", "страны", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "country_code", "from", "players", "group", "by", "country_code", ";"], "ru": ["select", "count", "(", "*", ")", ",", "country_code", "from", "players", "group", "by", "country_code", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "country_code", "from", "players", "group", "by", "country_code", ";"], "ru": ["select", "count", "(", "*", ")", ",", "country_code", "from", "players", "group", "by", "country_code", ";"]}}, {"id": "D_0476", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "find the code of the country where has the greatest number of players.", "ru": "Код страны, в которой больше всего игроков."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["find", "the", "code", "of", "the", "country", "where", "has", "the", "greatest", "number", "of", "players", "."], "ru": ["Код", "страны", ",", "в", "которой", "больше", "всего", "игроков", "."]}, "query_toks": {"en": ["select", "country_code", "from", "players", "group", "by", "country_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "country_code", "from", "players", "group", "by", "country_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "country_code", "from", "players", "group", "by", "country_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "country_code", "from", "players", "group", "by", "country_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0477", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the code of the country with the most players?", "ru": "Каков код страны с наибольшим количеством игроков?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "code", "of", "the", "country", "with", "the", "most", "players", "?"], "ru": ["Каков", "код", "страны", "с", "наибольшим", "количеством", "игроков", "?"]}, "query_toks": {"en": ["select", "country_code", "from", "players", "group", "by", "country_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "country_code", "from", "players", "group", "by", "country_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "country_code", "from", "players", "group", "by", "country_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "country_code", "from", "players", "group", "by", "country_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0478", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50;", "ru": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50;"}, "question": {"en": "Find the codes of countries that have more than 50 players.", "ru": "Найти коды стран, в которых больше 50 игроков."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 50.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 50.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "codes", "of", "countries", "that", "have", "more", "than", "50", "players", "."], "ru": ["Найти", "коды", "стран", ",", "в", "которых", "больше", "50", "игроков", "."]}, "query_toks": {"en": ["select", "country_code", "from", "players", "group", "by", "country_code", "having", "count", "(", "*", ")", ">", "50", ";"], "ru": ["select", "country_code", "from", "players", "group", "by", "country_code", "having", "count", "(", "*", ")", ">", "50", ";"]}, "query_toks_no_values": {"en": ["select", "country_code", "from", "players", "group", "by", "country_code", "having", "count", "(", "*", ")", ">", "50", ";"], "ru": ["select", "country_code", "from", "players", "group", "by", "country_code", "having", "count", "(", "*", ")", ">", "50", ";"]}}, {"id": "D_0479", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50;", "ru": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50;"}, "question": {"en": "What are the codes of countries with more than 50 players?", "ru": "Какие коды стран с более чем 50 игроками?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 50.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 0, false], null], 50.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "codes", "of", "countries", "with", "more", "than", "50", "players", "?"], "ru": ["Какие", "коды", "стран", "с", "более", "чем", "50", "игроками", "?"]}, "query_toks": {"en": ["select", "country_code", "from", "players", "group", "by", "country_code", "having", "count", "(", "*", ")", ">", "50", ";"], "ru": ["select", "country_code", "from", "players", "group", "by", "country_code", "having", "count", "(", "*", ")", ">", "50", ";"]}, "query_toks_no_values": {"en": ["select", "country_code", "from", "players", "group", "by", "country_code", "having", "count", "(", "*", ")", ">", "50", ";"], "ru": ["select", "country_code", "from", "players", "group", "by", "country_code", "having", "count", "(", "*", ")", ">", "50", ";"]}}, {"id": "D_0480", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date;", "ru": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date;"}, "question": {"en": "Find the total number of tours for each ranking date.", "ru": "Найди общее количество туров для каждой рейтинговой даты."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 43, false], null]], [0, [0, [0, 39, false], null]]]], "where": [], "groupBy": [[0, 39, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 43, false], null]], [0, [0, [0, 39, false], null]]]], "where": [], "groupBy": [[0, 39, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "total", "number", "of", "tours", "for", "each", "ranking", "date", "."], "ru": ["Найди", "общее", "количество", "туров", "для", "каждой", "рейтинговой", "даты", "."]}, "query_toks": {"en": ["select", "sum", "(", "tours", ")", ",", "ranking_date", "from", "rankings", "group", "by", "ranking_date", ";"], "ru": ["select", "sum", "(", "tours", ")", ",", "ranking_date", "from", "rankings", "group", "by", "ranking_date", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "tours", ")", ",", "ranking_date", "from", "rankings", "group", "by", "ranking_date", ";"], "ru": ["select", "sum", "(", "tours", ")", ",", "ranking_date", "from", "rankings", "group", "by", "ranking_date", ";"]}}, {"id": "D_0481", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date;", "ru": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date;"}, "question": {"en": "How many total tours were there for each ranking date?", "ru": "Сколько всего туров было проведено на каждую дату рейтинга?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 43, false], null]], [0, [0, [0, 39, false], null]]]], "where": [], "groupBy": [[0, 39, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 43, false], null]], [0, [0, [0, 39, false], null]]]], "where": [], "groupBy": [[0, 39, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "total", "tours", "were", "there", "for", "each", "ranking", "date", "?"], "ru": ["Сколько", "всего", "туров", "было", "проведено", "на", "каждую", "дату", "рейтинга", "?"]}, "query_toks": {"en": ["select", "sum", "(", "tours", ")", ",", "ranking_date", "from", "rankings", "group", "by", "ranking_date", ";"], "ru": ["select", "sum", "(", "tours", ")", ",", "ranking_date", "from", "rankings", "group", "by", "ranking_date", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "tours", ")", ",", "ranking_date", "from", "rankings", "group", "by", "ranking_date", ";"], "ru": ["select", "sum", "(", "tours", ")", ",", "ranking_date", "from", "rankings", "group", "by", "ranking_date", ";"]}}, {"id": "D_0482", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR;", "ru": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR;"}, "question": {"en": "Find the number of matches happened in each year.", "ru": "Найдите количество матчей за каждый год."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [[0, 38, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [[0, 38, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "matches", "happened", "in", "each", "year", "."], "ru": ["Найдите", "количество", "матчей", "за", "каждый", "год", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "year", "from", "matches", "group", "by", "year", ";"], "ru": ["select", "count", "(", "*", ")", ",", "year", "from", "matches", "group", "by", "year", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "year", "from", "matches", "group", "by", "year", ";"], "ru": ["select", "count", "(", "*", ")", ",", "year", "from", "matches", "group", "by", "year", ";"]}}, {"id": "D_0483", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR;", "ru": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR;"}, "question": {"en": "How many matches were played in each year?", "ru": "Сколько матчей игралось в год?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [[0, 38, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [[0, 38, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "matches", "were", "played", "in", "each", "year", "?"], "ru": ["Сколько", "матчей", "игралось", "в", "год", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "year", "from", "matches", "group", "by", "year", ";"], "ru": ["select", "count", "(", "*", ")", ",", "year", "from", "matches", "group", "by", "year", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "year", "from", "matches", "group", "by", "year", ";"], "ru": ["select", "count", "(", "*", ")", ",", "year", "from", "matches", "group", "by", "year", ";"]}}, {"id": "D_0484", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3;", "ru": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3;"}, "question": {"en": "Find the name and rank of the 3 youngest winners across all matches.", "ru": "Найдите имена и ранги трех самых молодых победителей во всех матчах."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 28, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 28, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "name", "and", "rank", "of", "the", "3", "youngest", "winners", "across", "all", "matches", "."], "ru": ["Найдите", "имена", "и", "ранги", "трех", "самых", "молодых", "победителей", "во", "всех", "матчах", "."]}, "query_toks": {"en": ["select", "distinct", "winner_name", ",", "winner_rank", "from", "matches", "order", "by", "winner_age", "limit", "3", ";"], "ru": ["select", "distinct", "winner_name", ",", "winner_rank", "from", "matches", "order", "by", "winner_age", "limit", "3", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "winner_name", ",", "winner_rank", "from", "matches", "order", "by", "winner_age", "limit", "3", ";"], "ru": ["select", "distinct", "winner_name", ",", "winner_rank", "from", "matches", "order", "by", "winner_age", "limit", "3", ";"]}}, {"id": "D_0485", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3;", "ru": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3;"}, "question": {"en": "What are the names and ranks of the three youngest winners across all matches?", "ru": "Каковы имена и ранги трех самых молодых победителей во всех матчах?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 28, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 28, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "and", "ranks", "of", "the", "three", "youngest", "winners", "across", "all", "matches", "?"], "ru": ["Каковы", "имена", "и", "ранги", "трех", "самых", "молодых", "победителей", "во", "всех", "матчах", "?"]}, "query_toks": {"en": ["select", "distinct", "winner_name", ",", "winner_rank", "from", "matches", "order", "by", "winner_age", "limit", "3", ";"], "ru": ["select", "distinct", "winner_name", ",", "winner_rank", "from", "matches", "order", "by", "winner_age", "limit", "3", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "winner_name", ",", "winner_rank", "from", "matches", "order", "by", "winner_age", "limit", "3", ";"], "ru": ["select", "distinct", "winner_name", ",", "winner_rank", "from", "matches", "order", "by", "winner_age", "limit", "3", ";"]}}, {"id": "D_0486", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L';", "ru": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'Россия Первая' AND winner_hand  =  'L';"}, "question": {"en": "How many different winners both participated in the WTA Championships and were left handed?", "ru": "Сколько разных победителей участвовали в Россия Первая и были левшами?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 34, true], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"WTA Championships\"", null], "and", [false, 2, [0, [0, 30, false], null], "\"L\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 34, true], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Россия Первая\"", null], "and", [false, 2, [0, [0, 30, false], null], "\"L\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "different", "winners", "both", "participated", "in", "the", "WTA", "Championships", "and", "were", "left", "handed", "?"], "ru": ["Сколько", "разных", "победителей", "участвовали", "в", "Россия", "Первая", "и", "были", "левшами", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "winner_name", ")", "from", "matches", "where", "tourney_name", "=", "\"WTA Championships\"", "and", "winner_hand", "=", "\"L\"", ";"], "ru": ["select", "count", "(", "distinct", "winner_name", ")", "from", "matches", "where", "tourney_name", "=", "\"Россия Первая\"", "and", "winner_hand", "=", "\"L\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "winner_name", ")", "from", "matches", "where", "tourney_name", "=", "value", "and", "winner_hand", "=", "value", ";"], "ru": ["select", "count", "(", "distinct", "winner_name", ")", "from", "matches", "where", "tourney_name", "=", "value", "and", "winner_hand", "=", "value", ";"]}}, {"id": "D_0487", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L';", "ru": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'Россия Первая' AND winner_hand  =  'L';"}, "question": {"en": "Find the number of left handed winners who participated in the WTA Championships.", "ru": "Найдите количество победителей-левшей, которые участвовали в Россия Первая."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 34, true], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"WTA Championships\"", null], "and", [false, 2, [0, [0, 30, false], null], "\"L\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 34, true], null]]]], "where": [[false, 2, [0, [0, 27, false], null], "\"Россия Первая\"", null], "and", [false, 2, [0, [0, 30, false], null], "\"L\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "left", "handed", "winners", "who", "participated", "in", "the", "WTA", "Championships", "."], "ru": ["Найдите", "количество", "победителей-левшей", ",", "которые", "участвовали", "в", "Россия", "Первая", "."]}, "query_toks": {"en": ["select", "count", "(", "distinct", "winner_name", ")", "from", "matches", "where", "tourney_name", "=", "\"WTA Championships\"", "and", "winner_hand", "=", "\"L\"", ";"], "ru": ["select", "count", "(", "distinct", "winner_name", ")", "from", "matches", "where", "tourney_name", "=", "\"Россия Первая\"", "and", "winner_hand", "=", "\"L\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "winner_name", ")", "from", "matches", "where", "tourney_name", "=", "value", "and", "winner_hand", "=", "value", ";"], "ru": ["select", "count", "(", "distinct", "winner_name", ")", "from", "matches", "where", "tourney_name", "=", "value", "and", "winner_hand", "=", "value", ";"]}}, {"id": "D_0488", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1;", "ru": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1;"}, "question": {"en": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.", "ru": "Найдите имя, код страны и дату рождения победителя, набравшего наибольшее количество очков во всех матчах."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 36, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 36, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "first", "name", ",", "country", "code", "and", "birth", "date", "of", "the", "winner", "who", "has", "the", "highest", "rank", "points", "in", "all", "matches", "."], "ru": ["Найдите", "имя", ",", "код", "страны", "и", "дату", "рождения", "победителя", ",", "набравшего", "наибольшее", "количество", "очков", "во", "всех", "матчах", "."]}, "query_toks": {"en": ["select", "t1.first_name", ",", "t1.country_code", ",", "t1.birth_date", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "order", "by", "t2.winner_rank_points", "desc", "limit", "1", ";"], "ru": ["select", "t1.first_name", ",", "t1.country_code", ",", "t1.birth_date", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "order", "by", "t2.winner_rank_points", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.first_name", ",", "t1.country_code", ",", "t1.birth_date", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "order", "by", "t2.winner_rank_points", "desc", "limit", "1", ";"], "ru": ["select", "t1.first_name", ",", "t1.country_code", ",", "t1.birth_date", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "order", "by", "t2.winner_rank_points", "desc", "limit", "1", ";"]}}, {"id": "D_0489", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1;", "ru": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1;"}, "question": {"en": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?", "ru": "Каковы имя, код страны и дата рождения игрока, набравшего наибольшее количество очков победителя во всех матчах?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 36, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 32, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 36, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "first", "name", ",", "country", "code", ",", "and", "birth", "date", "of", "the", "player", "with", "the", "most", "winner", "rank", "points", "across", "all", "matches", "?"], "ru": ["Каковы", "имя", ",", "код", "страны", "и", "дата", "рождения", "игрока", ",", "набравшего", "наибольшее", "количество", "очков", "победителя", "во", "всех", "матчах", "?"]}, "query_toks": {"en": ["select", "t1.first_name", ",", "t1.country_code", ",", "t1.birth_date", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "order", "by", "t2.winner_rank_points", "desc", "limit", "1", ";"], "ru": ["select", "t1.first_name", ",", "t1.country_code", ",", "t1.birth_date", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "order", "by", "t2.winner_rank_points", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.first_name", ",", "t1.country_code", ",", "t1.birth_date", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "order", "by", "t2.winner_rank_points", "desc", "limit", "1", ";"], "ru": ["select", "t1.first_name", ",", "t1.country_code", ",", "t1.birth_date", "from", "players", "as", "t1", "join", "matches", "as", "t2", "on", "t1.player_id", "=", "t2.winner_id", "order", "by", "t2.winner_rank_points", "desc", "limit", "1", ";"]}}, {"id": "D_0490", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  hand FROM players GROUP BY hand;", "ru": "SELECT count(*) ,  hand FROM players GROUP BY hand;"}, "question": {"en": "Find the number of players for each hand type.", "ru": "Найдите количество игроков для каждого типа руки."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "players", "for", "each", "hand", "type", "."], "ru": ["Найдите", "количество", "игроков", "для", "каждого", "типа", "руки", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "hand", "from", "players", "group", "by", "hand", ";"], "ru": ["select", "count", "(", "*", ")", ",", "hand", "from", "players", "group", "by", "hand", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "hand", "from", "players", "group", "by", "hand", ";"], "ru": ["select", "count", "(", "*", ")", ",", "hand", "from", "players", "group", "by", "hand", ";"]}}, {"id": "D_0491", "db_id": "wta_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  hand FROM players GROUP BY hand;", "ru": "SELECT count(*) ,  hand FROM players GROUP BY hand;"}, "question": {"en": "How many players are there for each hand type?", "ru": "Сколько игроков подходит для каждого типа рук?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "players", "are", "there", "for", "each", "hand", "type", "?"], "ru": ["Сколько", "игроков", "подходит", "для", "каждого", "типа", "рук", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "hand", "from", "players", "group", "by", "hand", ";"], "ru": ["select", "count", "(", "*", ")", ",", "hand", "from", "players", "group", "by", "hand", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "hand", "from", "players", "group", "by", "hand", ";"], "ru": ["select", "count", "(", "*", ")", ",", "hand", "from", "players", "group", "by", "hand", ";"]}}, {"id": "D_0492", "db_id": "battle_death", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured';", "ru": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Подорван';"}, "question": {"en": "How many ships ended up being 'Captured'?", "ru": "Сколько кораблей было подорвано?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Captured\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"Подорван\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "ships", "ended", "up", "being", "'Captured", "'", "?"], "ru": ["Сколько", "кораблей", "было", "подорвано", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "ship", "where", "disposition_of_ship", "=", "\"Captured\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "ship", "where", "disposition_of_ship", "=", "\"Подорван\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "ship", "where", "disposition_of_ship", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "ship", "where", "disposition_of_ship", "=", "value", ";"]}}, {"id": "D_0493", "db_id": "battle_death", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  tonnage FROM ship ORDER BY name DESC;", "ru": "SELECT name ,  tonnage FROM ship ORDER BY name DESC;"}, "question": {"en": "List the name and tonnage ordered by in descending alphaetical order for the names.", "ru": "Указать название и тоннаж в порядке убывания названий в алфавитном порядке."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "name", "and", "tonnage", "ordered", "by", "in", "descending", "alphaetical", "order", "for", "the", "names", "."], "ru": ["Указать", "название", "и", "тоннаж", "в", "порядке", "убывания", "названий", "в", "алфавитном", "порядке", "."]}, "query_toks": {"en": ["select", "name", ",", "tonnage", "from", "ship", "order", "by", "name", "desc", ";"], "ru": ["select", "name", ",", "tonnage", "from", "ship", "order", "by", "name", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "tonnage", "from", "ship", "order", "by", "name", "desc", ";"], "ru": ["select", "name", ",", "tonnage", "from", "ship", "order", "by", "name", "desc", ";"]}}, {"id": "D_0494", "db_id": "battle_death", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  date FROM battle;", "ru": "SELECT name ,  date FROM battle;"}, "question": {"en": "List the name, date and result of each battle.", "ru": "Перечислите название, дату и результат каждого боя."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "name", ",", "date", "and", "result", "of", "each", "battle", "."], "ru": ["Перечислите", "название", ",", "дату", "и", "результат", "каждого", "боя", "."]}, "query_toks": {"en": ["select", "name", ",", "date", "from", "battle", ";"], "ru": ["select", "name", ",", "date", "from", "battle", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "date", "from", "battle", ";"], "ru": ["select", "name", ",", "date", "from", "battle", ";"]}}, {"id": "D_0495", "db_id": "battle_death", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(killed) ,  min(killed) FROM death;", "ru": "SELECT max(killed) ,  min(killed) FROM death;"}, "question": {"en": "What is maximum and minimum death toll caused each time?", "ru": "Какое максимальное и минимальное количество погибших происходит каждый раз?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 17, false], null]], [2, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 17, false], null]], [2, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "maximum", "and", "minimum", "death", "toll", "caused", "each", "time", "?"], "ru": ["Какое", "максимальное", "и", "минимальное", "количество", "погибших", "происходит", "каждый", "раз", "?"]}, "query_toks": {"en": ["select", "max", "(", "killed", ")", ",", "min", "(", "killed", ")", "from", "death", ";"], "ru": ["select", "max", "(", "killed", ")", ",", "min", "(", "killed", ")", "from", "death", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "killed", ")", ",", "min", "(", "killed", ")", "from", "death", ";"], "ru": ["select", "max", "(", "killed", ")", ",", "min", "(", "killed", ")", "from", "death", ";"]}}, {"id": "D_0496", "db_id": "battle_death", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(injured) FROM death;", "ru": "SELECT avg(injured) FROM death;"}, "question": {"en": "What is the average number of injuries caused each time?", "ru": "Каково среднее количество травм, причиненных каждый раз?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "number", "of", "injuries", "caused", "each", "time", "?"], "ru": ["Каково", "среднее", "количество", "травм", ",", "причиненных", "каждый", "раз", "?"]}, "query_toks": {"en": ["select", "avg", "(", "injured", ")", "from", "death", ";"], "ru": ["select", "avg", "(", "injured", ")", "from", "death", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "injured", ")", "from", "death", ";"], "ru": ["select", "avg", "(", "injured", ")", "from", "death", ";"]}}, {"id": "D_0497", "db_id": "battle_death", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't';", "ru": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  '100';"}, "question": {"en": "What are the death and injury situations caused by the ship with tonnage 't'?", "ru": "Какие ситуации со смертельным исходом или телесными повреждениями вызваны судном с тоннажем “100\"?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"t\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"100\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "death", "and", "injury", "situations", "caused", "by", "the", "ship", "with", "tonnage", "'t", "'", "?"], "ru": ["Какие", "ситуации", "со", "смертельным", "исходом", "или", "телесными", "повреждениями", "вызваны", "судном", "с", "тоннажем", "“", "100", "''", "?"]}, "query_toks": {"en": ["select", "t1.killed", ",", "t1.injured", "from", "death", "as", "t1", "join", "ship", "as", "t2", "on", "t1.caused_by_ship_id", "=", "t2.id", "where", "t2.tonnage", "=", "\"t\"", ";"], "ru": ["select", "t1.killed", ",", "t1.injured", "from", "death", "as", "t1", "join", "ship", "as", "t2", "on", "t1.caused_by_ship_id", "=", "t2.id", "where", "t2.tonnage", "=", "\"100\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.killed", ",", "t1.injured", "from", "death", "as", "t1", "join", "ship", "as", "t2", "on", "t1.caused_by_ship_id", "=", "t2.id", "where", "t2.tonnage", "=", "value", ";"], "ru": ["select", "t1.killed", ",", "t1.injured", "from", "death", "as", "t1", "join", "ship", "as", "t2", "on", "t1.caused_by_ship_id", "=", "t2.id", "where", "t2.tonnage", "=", "value", ";"]}}, {"id": "D_0498", "db_id": "battle_death", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril';", "ru": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Нахимов';"}, "question": {"en": "What are the name and results of the battles when the bulgarian commander is not 'Boril'", "ru": "Названия и результаты сражений, когда болгарский командир не Нахимов"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"Boril\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"Нахимов\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "name", "and", "results", "of", "the", "battles", "when", "the", "bulgarian", "commander", "is", "not", "'Boril", "'"], "ru": ["Названия", "и", "результаты", "сражений", ",", "когда", "болгарский", "командир", "не", "Нахимов"]}, "query_toks": {"en": ["select", "name", ",", "result", "from", "battle", "where", "bulgarian_commander", "!=", "\"Boril\"", ";"], "ru": ["select", "name", ",", "result", "from", "battle", "where", "bulgarian_commander", "!=", "\"Нахимов\"", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "result", "from", "battle", "where", "bulgarian_commander", "!=", "value", ";"], "ru": ["select", "name", ",", "result", "from", "battle", "where", "bulgarian_commander", "!=", "value", ";"]}}, {"id": "D_0499", "db_id": "battle_death", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig';", "ru": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Крейсер';"}, "question": {"en": "What are the different ids and names of the battles that lost any 'Brig' type shipes?", "ru": "Каковы разные id и названия сражений, в которых были потеряны корабли типа «Крейсер»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Brig\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Крейсер\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "different", "ids", "and", "names", "of", "the", "battles", "that", "lost", "any", "'Brig", "'", "type", "shipes", "?"], "ru": ["Каковы", "разные", "id", "и", "названия", "сражений", ",", "в", "которых", "были", "потеряны", "корабли", "типа", "«", "Крейсер", "»", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.id", ",", "t1.name", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "where", "t2.ship_type", "=", "\"Brig\"", ";"], "ru": ["select", "distinct", "t1.id", ",", "t1.name", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "where", "t2.ship_type", "=", "\"Крейсер\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.id", ",", "t1.name", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "where", "t2.ship_type", "=", "value", ";"], "ru": ["select", "distinct", "t1.id", ",", "t1.name", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "where", "t2.ship_type", "=", "value", ";"]}}, {"id": "D_0500", "db_id": "battle_death", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10;", "ru": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10;"}, "question": {"en": "What are the ids and names of the battles that led to more than 10 people killed in total.", "ru": "Каковы id и названия сражений, в которых в общей сложности погибло более 10 человек?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [4, 17, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [4, 17, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "ids", "and", "names", "of", "the", "battles", "that", "led", "to", "more", "than", "10", "people", "killed", "in", "total", "."], "ru": ["Каковы", "id", "и", "названия", "сражений", ",", "в", "которых", "в", "общей", "сложности", "погибло", "более", "10", "человек", "?"]}, "query_toks": {"en": ["select", "t1.id", ",", "t1.name", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "join", "death", "as", "t3", "on", "t2.id", "=", "t3.caused_by_ship_id", "group", "by", "t1.id", "having", "sum", "(", "t3.killed", ")", ">", "10", ";"], "ru": ["select", "t1.id", ",", "t1.name", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "join", "death", "as", "t3", "on", "t2.id", "=", "t3.caused_by_ship_id", "group", "by", "t1.id", "having", "sum", "(", "t3.killed", ")", ">", "10", ";"]}, "query_toks_no_values": {"en": ["select", "t1.id", ",", "t1.name", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "join", "death", "as", "t3", "on", "t2.id", "=", "t3.caused_by_ship_id", "group", "by", "t1.id", "having", "sum", "(", "t3.killed", ")", ">", "10", ";"], "ru": ["select", "t1.id", ",", "t1.name", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "join", "death", "as", "t3", "on", "t2.id", "=", "t3.caused_by_ship_id", "group", "by", "t1.id", "having", "sum", "(", "t3.killed", ")", ">", "10", ";"]}}, {"id": "D_0501", "db_id": "battle_death", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the ship id and name that caused most total injuries?", "ru": "Какой id и название у корабля нанесшего больше всего травм?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "ship", "id", "and", "name", "that", "caused", "most", "total", "injuries", "?"], "ru": ["Какой", "id", "и", "название", "у", "корабля", "нанесшего", "больше", "всего", "травм", "?"]}, "query_toks": {"en": ["select", "t2.id", ",", "t2.name", "from", "death", "as", "t1", "join", "ship", "as", "t2", "on", "t1.caused_by_ship_id", "=", "t2.id", "group", "by", "t2.id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.id", ",", "t2.name", "from", "death", "as", "t1", "join", "ship", "as", "t2", "on", "t1.caused_by_ship_id", "=", "t2.id", "group", "by", "t2.id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.id", ",", "t2.name", "from", "death", "as", "t1", "join", "ship", "as", "t2", "on", "t1.caused_by_ship_id", "=", "t2.id", "group", "by", "t2.id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.id", ",", "t2.name", "from", "death", "as", "t1", "join", "ship", "as", "t2", "on", "t1.caused_by_ship_id", "=", "t2.id", "group", "by", "t2.id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0502", "db_id": "battle_death", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I';", "ru": "SELECT name FROM battle WHERE bulgarian_commander  =  'Нахимов' AND latin_commander  =  'Распутин';"}, "question": {"en": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?", "ru": "Каковы отличительные названия сражений между болгарским командиром Нахимов и латинским командиром Распутином?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Kaloyan\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Baldwin I\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Нахимов\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Распутин\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "distinct", "battle", "names", "which", "are", "between", "bulgarian", "commander", "'Kaloyan", "'", "and", "latin", "commander", "'Baldwin", "I", "'", "?"], "ru": ["Каковы", "отличительные", "названия", "сражений", "между", "болгарским", "командиром", "Нахимов", "и", "латинским", "командиром", "Распутином", "?"]}, "query_toks": {"en": ["select", "name", "from", "battle", "where", "bulgarian_commander", "=", "\"Kaloyan\"", "and", "latin_commander", "=", "\"Baldwin I\"", ";"], "ru": ["select", "name", "from", "battle", "where", "bulgarian_commander", "=", "\"Нахимов\"", "and", "latin_commander", "=", "\"Распутин\"", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "battle", "where", "bulgarian_commander", "=", "value", "and", "latin_commander", "=", "value", ";"], "ru": ["select", "name", "from", "battle", "where", "bulgarian_commander", "=", "value", "and", "latin_commander", "=", "value", ";"]}}, {"id": "D_0503", "db_id": "battle_death", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT RESULT) FROM battle;", "ru": "SELECT count(DISTINCT RESULT) FROM battle;"}, "question": {"en": "How many different results are there for the battles?", "ru": "Сколько разных результатов у сражений?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 6, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 6, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "different", "results", "are", "there", "for", "the", "battles", "?"], "ru": ["Сколько", "разных", "результатов", "у", "сражений", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "result", ")", "from", "battle", ";"], "ru": ["select", "count", "(", "distinct", "result", ")", "from", "battle", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "result", ")", "from", "battle", ";"], "ru": ["select", "count", "(", "distinct", "result", ")", "from", "battle", ";"]}}, {"id": "D_0504", "db_id": "battle_death", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );", "ru": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );"}, "question": {"en": "How many battles did not lose any ship with tonnage '225'?", "ru": "Сколько боёв не проиграл ни один корабль водоизмещением «225»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"225\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"225\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "battles", "did", "not", "lose", "any", "ship", "with", "tonnage", "'225", "'", "?"], "ru": ["Сколько", "боёв", "не", "проиграл", "ни", "один", "корабль", "водоизмещением", "«", "225", "»", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "battle", "where", "id", "not", "in", "(", "select", "lost_in_battle", "from", "ship", "where", "tonnage", "=", "\"225\"", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "battle", "where", "id", "not", "in", "(", "select", "lost_in_battle", "from", "ship", "where", "tonnage", "=", "\"225\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "battle", "where", "id", "not", "in", "(", "select", "lost_in_battle", "from", "ship", "where", "tonnage", "=", "value", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "battle", "where", "id", "not", "in", "(", "select", "lost_in_battle", "from", "ship", "where", "tonnage", "=", "value", ")", ";"]}}, {"id": "D_0505", "db_id": "battle_death", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta';", "ru": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Адмирал Макаров' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Аврора';"}, "question": {"en": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'", "ru": "Укажите название и дату битвы, в которой потеряли корабль под названием «Адмирал Макаров» и корабль под названием «Аврора»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Lettice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"HMS Atalanta\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Адмирал Макаров\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Аврора\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "name", "and", "date", "the", "battle", "that", "has", "lost", "the", "ship", "named", "'Lettice", "'", "and", "the", "ship", "named", "'HMS", "Atalanta", "'"], "ru": ["Укажите", "название", "и", "дату", "битвы", ",", "в", "которой", "потеряли", "корабль", "под", "названием", "«", "Адмирал", "Макаров", "»", "и", "корабль", "под", "названием", "«", "Аврора", "»", "."]}, "query_toks": {"en": ["select", "t1.name", ",", "t1.date", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "where", "t2.name", "=", "\"Lettice\"", "intersect", "select", "t1.name", ",", "t1.date", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "where", "t2.name", "=", "\"HMS Atalanta\"", ";"], "ru": ["select", "t1.name", ",", "t1.date", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "where", "t2.name", "=", "\"Адмирал Макаров\"", "intersect", "select", "t1.name", ",", "t1.date", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "where", "t2.name", "=", "\"Аврора\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", ",", "t1.date", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "where", "t2.name", "=", "value", "intersect", "select", "t1.name", ",", "t1.date", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "where", "t2.name", "=", "value", ";"], "ru": ["select", "t1.name", ",", "t1.date", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "where", "t2.name", "=", "value", "intersect", "select", "t1.name", ",", "t1.date", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "where", "t2.name", "=", "value", ";"]}}, {"id": "D_0506", "db_id": "battle_death", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel';", "ru": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'Балтийское море';"}, "question": {"en": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.", "ru": "Покажите имена, результаты и болгарских командиров сражений без потерь в Балтийском море."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"English Channel\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Балтийское море\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["Show", "names", ",", "results", "and", "bulgarian", "commanders", "of", "the", "battles", "with", "no", "ships", "lost", "in", "the", "'English", "Channel", "'", "."], "ru": ["Покажите", "имена", ",", "результаты", "и", "болгарских", "командиров", "сражений", "без", "потерь", "в", "Балтийском", "море", "."]}, "query_toks": {"en": ["select", "name", ",", "result", ",", "bulgarian_commander", "from", "battle", "except", "select", "t1.name", ",", "t1.result", ",", "t1.bulgarian_commander", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "where", "t2.location", "=", "\"English Channel\"", ";"], "ru": ["select", "name", ",", "result", ",", "bulgarian_commander", "from", "battle", "except", "select", "t1.name", ",", "t1.result", ",", "t1.bulgarian_commander", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "where", "t2.location", "=", "\"Балтийское море\"", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "result", ",", "bulgarian_commander", "from", "battle", "except", "select", "t1.name", ",", "t1.result", ",", "t1.bulgarian_commander", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "where", "t2.location", "=", "value", ";"], "ru": ["select", "name", ",", "result", ",", "bulgarian_commander", "from", "battle", "except", "select", "t1.name", ",", "t1.result", ",", "t1.bulgarian_commander", "from", "battle", "as", "t1", "join", "ship", "as", "t2", "on", "t1.id", "=", "t2.lost_in_battle", "where", "t2.location", "=", "value", ";"]}}, {"id": "D_0507", "db_id": "battle_death", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT note FROM death WHERE note LIKE '%East%';", "ru": "SELECT note FROM death WHERE note LIKE '%Порт%';"}, "question": {"en": "What are the notes of the death events which has substring 'East'?", "ru": "Какие примечания к смертельным событиям содержат подстроку «Порт»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 9, [0, [0, 16, false], null], "\"%East%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 9, [0, [0, 16, false], null], "\"%Порт%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "notes", "of", "the", "death", "events", "which", "has", "substring", "'East", "'", "?"], "ru": ["Какие", "примечания", "к", "смертельным", "событиям", "содержат", "подстроку", "«", "Порт", "»", "?"]}, "query_toks": {"en": ["select", "note", "from", "death", "where", "note", "like", "\"%East%\"", ";"], "ru": ["select", "note", "from", "death", "where", "note", "like", "\"%Порт%\"", ";"]}, "query_toks_no_values": {"en": ["select", "note", "from", "death", "where", "note", "like", "value", ";"], "ru": ["select", "note", "from", "death", "where", "note", "like", "value", ";"]}}, {"id": "D_0508", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT line_1 ,  line_2 FROM addresses;", "ru": "SELECT line_1 ,  line_2 FROM addresses;"}, "question": {"en": "what are all the addresses including line 1 and line 2?", "ru": "какие все полные адреса, включая строку 1 и строку 2?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["what", "are", "all", "the", "addresses", "including", "line", "1", "and", "line", "2", "?"], "ru": ["какие", "все", "полные", "адреса", ",", "включая", "строку", "1", "и", "строку", "2", "?"]}, "query_toks": {"en": ["select", "line_1", ",", "line_2", "from", "addresses", ";"], "ru": ["select", "line_1", ",", "line_2", "from", "addresses", ";"]}, "query_toks_no_values": {"en": ["select", "line_1", ",", "line_2", "from", "addresses", ";"], "ru": ["select", "line_1", ",", "line_2", "from", "addresses", ";"]}}, {"id": "D_0509", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT line_1 ,  line_2 FROM addresses;", "ru": "SELECT line_1 ,  line_2 FROM addresses;"}, "question": {"en": "What is the first and second line for all addresses?", "ru": "Какая первая и вторая строка у всех адресов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "first", "and", "second", "line", "for", "all", "addresses", "?"], "ru": ["Какая", "первая", "и", "вторая", "строка", "у", "всех", "адресов", "?"]}, "query_toks": {"en": ["select", "line_1", ",", "line_2", "from", "addresses", ";"], "ru": ["select", "line_1", ",", "line_2", "from", "addresses", ";"]}, "query_toks_no_values": {"en": ["select", "line_1", ",", "line_2", "from", "addresses", ";"], "ru": ["select", "line_1", ",", "line_2", "from", "addresses", ";"]}}, {"id": "D_0510", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Courses;", "ru": "SELECT count(*) FROM Courses;"}, "question": {"en": "How many courses in total are listed?", "ru": "Сколько всего курсов указано в списке?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "courses", "in", "total", "are", "listed", "?"], "ru": ["Сколько", "всего", "курсов", "указано", "в", "списке", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "courses", ";"], "ru": ["select", "count", "(", "*", ")", "from", "courses", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "courses", ";"], "ru": ["select", "count", "(", "*", ")", "from", "courses", ";"]}}, {"id": "D_0511", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Courses;", "ru": "SELECT count(*) FROM Courses;"}, "question": {"en": "How many courses are there?", "ru": "Сколько всего курсов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "courses", "are", "there", "?"], "ru": ["Сколько", "всего", "курсов", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "courses", ";"], "ru": ["select", "count", "(", "*", ")", "from", "courses", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "courses", ";"], "ru": ["select", "count", "(", "*", ")", "from", "courses", ";"]}}, {"id": "D_0512", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT course_description FROM Courses WHERE course_name  =  'math';", "ru": "SELECT course_description FROM Courses WHERE course_name  =  'экономика';"}, "question": {"en": "How is the math course described?", "ru": "Как описывается курс экономики?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"math\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"экономика\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "is", "the", "math", "course", "described", "?"], "ru": ["Как", "описывается", "курс", "экономики", "?"]}, "query_toks": {"en": ["select", "course_description", "from", "courses", "where", "course_name", "=", "\"math\"", ";"], "ru": ["select", "course_description", "from", "courses", "where", "course_name", "=", "\"экономика\"", ";"]}, "query_toks_no_values": {"en": ["select", "course_description", "from", "courses", "where", "course_name", "=", "value", ";"], "ru": ["select", "course_description", "from", "courses", "where", "course_name", "=", "value", ";"]}}, {"id": "D_0513", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT course_description FROM Courses WHERE course_name  =  'math';", "ru": "SELECT course_description FROM Courses WHERE course_name  =  'экономика';"}, "question": {"en": "What are the descriptions for all the math courses?", "ru": "Каковы описания всех курсов экономики?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"math\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"экономика\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "descriptions", "for", "all", "the", "math", "courses", "?"], "ru": ["Каковы", "описания", "всех", "курсов", "экономики", "?"]}, "query_toks": {"en": ["select", "course_description", "from", "courses", "where", "course_name", "=", "\"math\"", ";"], "ru": ["select", "course_description", "from", "courses", "where", "course_name", "=", "\"экономика\"", ";"]}, "query_toks_no_values": {"en": ["select", "course_description", "from", "courses", "where", "course_name", "=", "value", ";"], "ru": ["select", "course_description", "from", "courses", "where", "course_name", "=", "value", ";"]}}, {"id": "D_0514", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea';", "ru": "SELECT zip_postcode FROM Addresses WHERE city  =  'Порт Рояль';"}, "question": {"en": "What is the zip code of the address in the city Port Chelsea?", "ru": "Какой почтовый индекс у адреса в городе Порт Рояль?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Port Chelsea\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Порт Рояль\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "zip", "code", "of", "the", "address", "in", "the", "city", "Port", "Chelsea", "?"], "ru": ["Какой", "почтовый", "индекс", "у", "адреса", "в", "городе", "Порт", "Рояль", "?"]}, "query_toks": {"en": ["select", "zip_postcode", "from", "addresses", "where", "city", "=", "\"Port Chelsea\"", ";"], "ru": ["select", "zip_postcode", "from", "addresses", "where", "city", "=", "\"Порт Рояль\"", ";"]}, "query_toks_no_values": {"en": ["select", "zip_postcode", "from", "addresses", "where", "city", "=", "value", ";"], "ru": ["select", "zip_postcode", "from", "addresses", "where", "city", "=", "value", ";"]}}, {"id": "D_0515", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea';", "ru": "SELECT zip_postcode FROM Addresses WHERE city  =  'Гавана';"}, "question": {"en": "What is the zip code for Port Chelsea?", "ru": "Какой почтовый индекс у Гаваны?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Port Chelsea\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Гавана\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "zip", "code", "for", "Port", "Chelsea", "?"], "ru": ["Какой", "почтовый", "индекс", "у", "Гаваны", "?"]}, "query_toks": {"en": ["select", "zip_postcode", "from", "addresses", "where", "city", "=", "\"Port Chelsea\"", ";"], "ru": ["select", "zip_postcode", "from", "addresses", "where", "city", "=", "\"Гавана\"", ";"]}, "query_toks_no_values": {"en": ["select", "zip_postcode", "from", "addresses", "where", "city", "=", "value", ";"], "ru": ["select", "zip_postcode", "from", "addresses", "where", "city", "=", "value", ";"]}}, {"id": "D_0516", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which department offers the most number of degrees? List department name and id.", "ru": "Какой факультет предлагает больше всего степеней? Перечислите название и id факультета."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "department", "offers", "the", "most", "number", "of", "degrees", "?", "List", "department", "name", "and", "id", "."], "ru": ["Какой", "факультет", "предлагает", "больше", "всего", "степеней", "?", "Перечислите", "название", "и", "id", "факультета", "."]}, "query_toks": {"en": ["select", "t2.department_name", ",", "t1.department_id", "from", "degree_programs", "as", "t1", "join", "departments", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "group", "by", "t1.department_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.department_name", ",", "t1.department_id", "from", "degree_programs", "as", "t1", "join", "departments", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "group", "by", "t1.department_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.department_name", ",", "t1.department_id", "from", "degree_programs", "as", "t1", "join", "departments", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "group", "by", "t1.department_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.department_name", ",", "t1.department_id", "from", "degree_programs", "as", "t1", "join", "departments", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "group", "by", "t1.department_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0517", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1;", "ru": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1;"}, "question": {"en": "What is the name and id of the department with the most number of degrees ?", "ru": "Название и id факультета с наибольшим количеством ученых степеней"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 14, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "and", "id", "of", "the", "department", "with", "the", "most", "number", "of", "degrees", "?"], "ru": ["Название", "и", "id", "факультета", "с", "наибольшим", "количеством", "ученых", "степеней"]}, "query_toks": {"en": ["select", "t2.department_name", ",", "t1.department_id", "from", "degree_programs", "as", "t1", "join", "departments", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "group", "by", "t1.department_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.department_name", ",", "t1.department_id", "from", "degree_programs", "as", "t1", "join", "departments", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "group", "by", "t1.department_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.department_name", ",", "t1.department_id", "from", "degree_programs", "as", "t1", "join", "departments", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "group", "by", "t1.department_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.department_name", ",", "t1.department_id", "from", "degree_programs", "as", "t1", "join", "departments", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "group", "by", "t1.department_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0518", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT department_id) FROM Degree_Programs;", "ru": "SELECT count(DISTINCT department_id) FROM Degree_Programs;"}, "question": {"en": "How many departments offer any degree?", "ru": "Сколько факультетов предлагают какую-либо степень?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 19, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 19, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "departments", "offer", "any", "degree", "?"], "ru": ["Сколько", "факультетов", "предлагают", "какую-либо", "степень", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "department_id", ")", "from", "degree_programs", ";"], "ru": ["select", "count", "(", "distinct", "department_id", ")", "from", "degree_programs", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "department_id", ")", "from", "degree_programs", ";"], "ru": ["select", "count", "(", "distinct", "department_id", ")", "from", "degree_programs", ";"]}}, {"id": "D_0519", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT department_id) FROM Degree_Programs;", "ru": "SELECT count(DISTINCT department_id) FROM Degree_Programs;"}, "question": {"en": "How many different departments offer degrees?", "ru": "Сколько разных факультетов предлагают степени?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 19, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 19, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "different", "departments", "offer", "degrees", "?"], "ru": ["Сколько", "разных", "факультетов", "предлагают", "степени", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "department_id", ")", "from", "degree_programs", ";"], "ru": ["select", "count", "(", "distinct", "department_id", ")", "from", "degree_programs", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "department_id", ")", "from", "degree_programs", ";"], "ru": ["select", "count", "(", "distinct", "department_id", ")", "from", "degree_programs", ";"]}}, {"id": "D_0520", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs;", "ru": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs;"}, "question": {"en": "How many different degree names are offered?", "ru": "Сколько разных названий степеней предлагается?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 20, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 20, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "different", "degree", "names", "are", "offered", "?"], "ru": ["Сколько", "разных", "названий", "степеней", "предлагается", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "degree_summary_name", ")", "from", "degree_programs", ";"], "ru": ["select", "count", "(", "distinct", "degree_summary_name", ")", "from", "degree_programs", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "degree_summary_name", ")", "from", "degree_programs", ";"], "ru": ["select", "count", "(", "distinct", "degree_summary_name", ")", "from", "degree_programs", ";"]}}, {"id": "D_0521", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs;", "ru": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs;"}, "question": {"en": "How many different degrees are offered?", "ru": "Сколько разных степеней предлагается?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 20, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 20, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "different", "degrees", "are", "offered", "?"], "ru": ["Сколько", "разных", "степеней", "предлагается", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "degree_summary_name", ")", "from", "degree_programs", ";"], "ru": ["select", "count", "(", "distinct", "degree_summary_name", ")", "from", "degree_programs", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "degree_summary_name", ")", "from", "degree_programs", ";"], "ru": ["select", "count", "(", "distinct", "degree_summary_name", ")", "from", "degree_programs", ";"]}}, {"id": "D_0522", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer';", "ru": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'физический';"}, "question": {"en": "How many degrees does the engineering department offer?", "ru": "Сколько степеней предлагает физический факультет?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 19, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"engineer\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 19, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"физический\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "degrees", "does", "the", "engineering", "department", "offer", "?"], "ru": ["Сколько", "степеней", "предлагает", "физический", "факультет", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "departments", "as", "t1", "join", "degree_programs", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "where", "t1.department_name", "=", "\"engineer\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "departments", "as", "t1", "join", "degree_programs", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "where", "t1.department_name", "=", "\"физический\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "departments", "as", "t1", "join", "degree_programs", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "where", "t1.department_name", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "departments", "as", "t1", "join", "degree_programs", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "where", "t1.department_name", "=", "value", ";"]}}, {"id": "D_0523", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer';", "ru": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'физический';"}, "question": {"en": "How many degrees does the engineering department have?", "ru": "Сколько степеней на физическом факультете?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 19, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"engineer\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 19, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"физический\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "degrees", "does", "the", "engineering", "department", "have", "?"], "ru": ["Сколько", "степеней", "на", "физическом", "факультете", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "departments", "as", "t1", "join", "degree_programs", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "where", "t1.department_name", "=", "\"engineer\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "departments", "as", "t1", "join", "degree_programs", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "where", "t1.department_name", "=", "\"физический\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "departments", "as", "t1", "join", "degree_programs", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "where", "t1.department_name", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "departments", "as", "t1", "join", "degree_programs", "as", "t2", "on", "t1.department_id", "=", "t2.department_id", "where", "t1.department_name", "=", "value", ";"]}}, {"id": "D_0524", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT section_name ,  section_description FROM Sections;", "ru": "SELECT section_name ,  section_description FROM Sections;"}, "question": {"en": "What are the names and descriptions of all the sections?", "ru": "Названия и описания всех разделов"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "and", "descriptions", "of", "all", "the", "sections", "?"], "ru": ["Названия", "и", "описания", "всех", "разделов"]}, "query_toks": {"en": ["select", "section_name", ",", "section_description", "from", "sections", ";"], "ru": ["select", "section_name", ",", "section_description", "from", "sections", ";"]}, "query_toks_no_values": {"en": ["select", "section_name", ",", "section_description", "from", "sections", ";"], "ru": ["select", "section_name", ",", "section_description", "from", "sections", ";"]}}, {"id": "D_0525", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT section_name ,  section_description FROM Sections;", "ru": "SELECT section_name ,  section_description FROM Sections;"}, "question": {"en": "What are the names and descriptions for all the sections?", "ru": "Какие названия и описания у всех разделов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "and", "descriptions", "for", "all", "the", "sections", "?"], "ru": ["Какие", "названия", "и", "описания", "у", "всех", "разделов", "?"]}, "query_toks": {"en": ["select", "section_name", ",", "section_description", "from", "sections", ";"], "ru": ["select", "section_name", ",", "section_description", "from", "sections", ";"]}, "query_toks_no_values": {"en": ["select", "section_name", ",", "section_description", "from", "sections", ";"], "ru": ["select", "section_name", ",", "section_description", "from", "sections", ";"]}}, {"id": "D_0526", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2;", "ru": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2;"}, "question": {"en": "What are the names and id of courses having at most 2 sections?", "ru": "Какие названия и id курсов, содержащих не более двух разделов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 24, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 6, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 24, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 6, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "and", "id", "of", "courses", "having", "at", "most", "2", "sections", "?"], "ru": ["Какие", "названия", "и", "id", "курсов", ",", "содержащих", "не", "более", "двух", "разделов", "?"]}, "query_toks": {"en": ["select", "t1.course_name", ",", "t1.course_id", "from", "courses", "as", "t1", "join", "sections", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "group", "by", "t1.course_id", "having", "count", "(", "*", ")", "<=", "2", ";"], "ru": ["select", "t1.course_name", ",", "t1.course_id", "from", "courses", "as", "t1", "join", "sections", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "group", "by", "t1.course_id", "having", "count", "(", "*", ")", "<=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t1.course_name", ",", "t1.course_id", "from", "courses", "as", "t1", "join", "sections", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "group", "by", "t1.course_id", "having", "count", "(", "*", ")", "<=", "2", ";"], "ru": ["select", "t1.course_name", ",", "t1.course_id", "from", "courses", "as", "t1", "join", "sections", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "group", "by", "t1.course_id", "having", "count", "(", "*", ")", "<=", "2", ";"]}}, {"id": "D_0527", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2;", "ru": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2;"}, "question": {"en": "What are the names and ids of every course with less than 2 sections?", "ru": "Какие названия и id у каждого курса, состоящего менее чем из двух разделов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 24, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 6, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 24, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 6, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "and", "ids", "of", "every", "course", "with", "less", "than", "2", "sections", "?"], "ru": ["Какие", "названия", "и", "id", "у", "каждого", "курса", ",", "состоящего", "менее", "чем", "из", "двух", "разделов", "?"]}, "query_toks": {"en": ["select", "t1.course_name", ",", "t1.course_id", "from", "courses", "as", "t1", "join", "sections", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "group", "by", "t1.course_id", "having", "count", "(", "*", ")", "<=", "2", ";"], "ru": ["select", "t1.course_name", ",", "t1.course_id", "from", "courses", "as", "t1", "join", "sections", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "group", "by", "t1.course_id", "having", "count", "(", "*", ")", "<=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t1.course_name", ",", "t1.course_id", "from", "courses", "as", "t1", "join", "sections", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "group", "by", "t1.course_id", "having", "count", "(", "*", ")", "<=", "2", ";"], "ru": ["select", "t1.course_name", ",", "t1.course_id", "from", "courses", "as", "t1", "join", "sections", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "group", "by", "t1.course_id", "having", "count", "(", "*", ")", "<=", "2", ";"]}}, {"id": "D_0528", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT section_name FROM Sections ORDER BY section_name DESC;", "ru": "SELECT section_name FROM Sections ORDER BY section_name DESC;"}, "question": {"en": "List the section_name in reversed lexicographical order.", "ru": "Перечислите названия разделов в обратном лексикографическом порядке."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 25, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 25, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "section_name", "in", "reversed", "lexicographical", "order", "."], "ru": ["Перечислите", "названия", "разделов", "в", "обратном", "лексикографическом", "порядке", "."]}, "query_toks": {"en": ["select", "section_name", "from", "sections", "order", "by", "section_name", "desc", ";"], "ru": ["select", "section_name", "from", "sections", "order", "by", "section_name", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "section_name", "from", "sections", "order", "by", "section_name", "desc", ";"], "ru": ["select", "section_name", "from", "sections", "order", "by", "section_name", "desc", ";"]}}, {"id": "D_0529", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT section_name FROM Sections ORDER BY section_name DESC;", "ru": "SELECT section_name FROM Sections ORDER BY section_name DESC;"}, "question": {"en": "What are the names of the sections in reverse alphabetical order?", "ru": "Как называются разделы в обратном алфавитном порядке?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 25, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 25, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "sections", "in", "reverse", "alphabetical", "order", "?"], "ru": ["Как", "называются", "разделы", "в", "обратном", "алфавитном", "порядке", "?"]}, "query_toks": {"en": ["select", "section_name", "from", "sections", "order", "by", "section_name", "desc", ";"], "ru": ["select", "section_name", "from", "sections", "order", "by", "section_name", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "section_name", "from", "sections", "order", "by", "section_name", "desc", ";"], "ru": ["select", "section_name", "from", "sections", "order", "by", "section_name", "desc", ";"]}}, {"id": "D_0530", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the semester which most student registered in? Show both the name and the id.", "ru": "На какой семестр зарегистрировалось больше всего студентов? Показать название и id семестра."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 28, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 29, false], null]], [0, [0, [0, 28, false], null]]]], "where": [], "groupBy": [[0, 28, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 28, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 29, false], null]], [0, [0, [0, 28, false], null]]]], "where": [], "groupBy": [[0, 28, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "semester", "which", "most", "student", "registered", "in", "?", "Show", "both", "the", "name", "and", "the", "id", "."], "ru": ["На", "какой", "семестр", "зарегистрировалось", "больше", "всего", "студентов", "?", "Показать", "название", "и", "id", "семестра", "."]}, "query_toks": {"en": ["select", "t1.semester_name", ",", "t1.semester_id", "from", "semesters", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.semester_id", "=", "t2.semester_id", "group", "by", "t1.semester_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.semester_name", ",", "t1.semester_id", "from", "semesters", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.semester_id", "=", "t2.semester_id", "group", "by", "t1.semester_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.semester_name", ",", "t1.semester_id", "from", "semesters", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.semester_id", "=", "t2.semester_id", "group", "by", "t1.semester_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.semester_name", ",", "t1.semester_id", "from", "semesters", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.semester_id", "=", "t2.semester_id", "group", "by", "t1.semester_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0531", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "For each semester, what is the name and id of the one with the most students registered?", "ru": "Какое название и id для каждого семестра имеет тот, на который зарегистрировано больше всего студентов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 28, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 29, false], null]], [0, [0, [0, 28, false], null]]]], "where": [], "groupBy": [[0, 28, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 28, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 29, false], null]], [0, [0, [0, 28, false], null]]]], "where": [], "groupBy": [[0, 28, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["For", "each", "semester", ",", "what", "is", "the", "name", "and", "id", "of", "the", "one", "with", "the", "most", "students", "registered", "?"], "ru": ["Какое", "название", "и", "id", "для", "каждого", "семестра", "имеет", "тот", ",", "на", "который", "зарегистрировано", "больше", "всего", "студентов", "?"]}, "query_toks": {"en": ["select", "t1.semester_name", ",", "t1.semester_id", "from", "semesters", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.semester_id", "=", "t2.semester_id", "group", "by", "t1.semester_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.semester_name", ",", "t1.semester_id", "from", "semesters", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.semester_id", "=", "t2.semester_id", "group", "by", "t1.semester_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.semester_name", ",", "t1.semester_id", "from", "semesters", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.semester_id", "=", "t2.semester_id", "group", "by", "t1.semester_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.semester_name", ",", "t1.semester_id", "from", "semesters", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.semester_id", "=", "t2.semester_id", "group", "by", "t1.semester_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0532", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%';", "ru": "SELECT department_description FROM Departments WHERE department_name LIKE '%физический%';"}, "question": {"en": "What is the description of the department whose name has the substring the computer?", "ru": "Каково описание отдела, в названии которого есть подстрока физический?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%computer%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%физический%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "description", "of", "the", "department", "whose", "name", "has", "the", "substring", "the", "computer", "?"], "ru": ["Каково", "описание", "отдела", ",", "в", "названии", "которого", "есть", "подстрока", "физический", "?"]}, "query_toks": {"en": ["select", "department_description", "from", "departments", "where", "department_name", "like", "\"%computer%\"", ";"], "ru": ["select", "department_description", "from", "departments", "where", "department_name", "like", "\"%физический%\"", ";"]}, "query_toks_no_values": {"en": ["select", "department_description", "from", "departments", "where", "department_name", "like", "value", ";"], "ru": ["select", "department_description", "from", "departments", "where", "department_name", "like", "value", ";"]}}, {"id": "D_0533", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%';", "ru": "SELECT department_description FROM Departments WHERE department_name LIKE '%физический%';"}, "question": {"en": "What is the department description for the one whose name has the word computer?", "ru": "Какое описание отдела для отдела, в чьем названии есть слово физический?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%computer%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%физический%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "department", "description", "for", "the", "one", "whose", "name", "has", "the", "word", "computer", "?"], "ru": ["Какое", "описание", "отдела", "для", "отдела", ",", "в", "чьем", "названии", "есть", "слово", "физический", "?"]}, "query_toks": {"en": ["select", "department_description", "from", "departments", "where", "department_name", "like", "\"%computer%\"", ";"], "ru": ["select", "department_description", "from", "departments", "where", "department_name", "like", "\"%физический%\"", ";"]}, "query_toks_no_values": {"en": ["select", "department_description", "from", "departments", "where", "department_name", "like", "value", ";"], "ru": ["select", "department_description", "from", "departments", "where", "department_name", "like", "value", ";"]}}, {"id": "D_0534", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2;", "ru": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2;"}, "question": {"en": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.", "ru": "Кто зачислен на 2 программы обучения за один семестр? Перечислите имя, отчество, фамилию и id."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Who", "are", "enrolled", "in", "2", "degree", "programs", "in", "one", "semester", "?", "List", "the", "first", "name", ",", "middle", "name", "and", "last", "name", "and", "the", "id", "."], "ru": ["Кто", "зачислен", "на", "2", "программы", "обучения", "за", "один", "семестр", "?", "Перечислите", "имя", ",", "отчество", ",", "фамилию", "и", "id", "."]}, "query_toks": {"en": ["select", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", ",", "t1.student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", "=", "2", ";"], "ru": ["select", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", ",", "t1.student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", "=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", ",", "t1.student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", "=", "2", ";"], "ru": ["select", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", ",", "t1.student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", "=", "2", ";"]}}, {"id": "D_0535", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2;", "ru": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2;"}, "question": {"en": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?", "ru": "Каковы имя, отчество и фамилия, а также id всех студентов, которые обучались по двум программам за один семестр?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [[false, 2, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "first", ",", "middle", ",", "and", "last", "names", ",", "along", "with", "the", "ids", ",", "of", "all", "students", "who", "enrolled", "in", "2", "degree", "programs", "in", "one", "semester", "?"], "ru": ["Каковы", "имя", ",", "отчество", "и", "фамилия", ",", "а", "также", "id", "всех", "студентов", ",", "которые", "обучались", "по", "двум", "программам", "за", "один", "семестр", "?"]}, "query_toks": {"en": ["select", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", ",", "t1.student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", "=", "2", ";"], "ru": ["select", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", ",", "t1.student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", "=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", ",", "t1.student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", "=", "2", ";"], "ru": ["select", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", ",", "t1.student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", "=", "2", ";"]}}, {"id": "D_0536", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor';", "ru": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor';"}, "question": {"en": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.", "ru": "Кто учится на программе бакалавриата? Укажите имя, отчество, фамилию."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null], "and", [false, 2, [0, [0, 45, false], null], [0, 18, false], null]]}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Bachelor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null], "and", [false, 2, [0, [0, 45, false], null], [0, 18, false], null]]}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Bachelor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Who", "is", "enrolled", "in", "a", "Bachelor", "degree", "program", "?", "List", "the", "first", "name", ",", "middle", "name", ",", "last", "name", "."], "ru": ["Кто", "учится", "на", "программе", "бакалавриата", "?", "Укажите", "имя", ",", "отчество", ",", "фамилию", "."]}, "query_toks": {"en": ["select", "distinct", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "join", "degree_programs", "as", "t3", "on", "t2.degree_program_id", "=", "t3.degree_program_id", "where", "t3.degree_summary_name", "=", "\"Bachelor\"", ";"], "ru": ["select", "distinct", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "join", "degree_programs", "as", "t3", "on", "t2.degree_program_id", "=", "t3.degree_program_id", "where", "t3.degree_summary_name", "=", "\"Bachelor\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "join", "degree_programs", "as", "t3", "on", "t2.degree_program_id", "=", "t3.degree_program_id", "where", "t3.degree_summary_name", "=", "value", ";"], "ru": ["select", "distinct", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "join", "degree_programs", "as", "t3", "on", "t2.degree_program_id", "=", "t3.degree_program_id", "where", "t3.degree_summary_name", "=", "value", ";"]}}, {"id": "D_0537", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor';", "ru": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Аспирансткая';"}, "question": {"en": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?", "ru": "Каковы имя, отчество и фамилия у всех, кто обучается по программе аспирантуры?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null], "and", [false, 2, [0, [0, 45, false], null], [0, 18, false], null]]}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Bachelor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null], "and", [false, 2, [0, [0, 45, false], null], [0, 18, false], null]]}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Аспирансткая\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "first", ",", "middle", ",", "and", "last", "names", "for", "everybody", "enrolled", "in", "a", "Bachelors", "program", "?"], "ru": ["Каковы", "имя", ",", "отчество", "и", "фамилия", "у", "всех", ",", "кто", "обучается", "по", "программе", "аспирантуры", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "join", "degree_programs", "as", "t3", "on", "t2.degree_program_id", "=", "t3.degree_program_id", "where", "t3.degree_summary_name", "=", "\"Bachelor\"", ";"], "ru": ["select", "distinct", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "join", "degree_programs", "as", "t3", "on", "t2.degree_program_id", "=", "t3.degree_program_id", "where", "t3.degree_summary_name", "=", "\"Аспирансткая\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "join", "degree_programs", "as", "t3", "on", "t2.degree_program_id", "=", "t3.degree_program_id", "where", "t3.degree_summary_name", "=", "value", ";"], "ru": ["select", "distinct", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "join", "degree_programs", "as", "t3", "on", "t2.degree_program_id", "=", "t3.degree_program_id", "where", "t3.degree_summary_name", "=", "value", ";"]}}, {"id": "D_0538", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Find the kind of program which most number of students are enrolled in?", "ru": "Найдите программу, по которой обучается больше всего студентов"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 20, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 20, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "kind", "of", "program", "which", "most", "number", "of", "students", "are", "enrolled", "in", "?"], "ru": ["Найдите", "программу", ",", "по", "которой", "обучается", "больше", "всего", "студентов"]}, "query_toks": {"en": ["select", "t1.degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "group", "by", "t1.degree_summary_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "group", "by", "t1.degree_summary_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "group", "by", "t1.degree_summary_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "group", "by", "t1.degree_summary_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0539", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the degree summary name that has the most number of students enrolled?", "ru": "Краткое описание программы, на которой обучается наибольшее количество студентов"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 20, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 20, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "degree", "summary", "name", "that", "has", "the", "most", "number", "of", "students", "enrolled", "?"], "ru": ["Краткое", "описание", "программы", ",", "на", "которой", "обучается", "наибольшее", "количество", "студентов"]}, "query_toks": {"en": ["select", "t1.degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "group", "by", "t1.degree_summary_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "group", "by", "t1.degree_summary_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "group", "by", "t1.degree_summary_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "group", "by", "t1.degree_summary_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0540", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Find the program which most number of students are enrolled in. List both the id and the summary.", "ru": "Найди программу, по которой обучается наибольшее количество студентов. Укажи id и краткое описание."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "program", "which", "most", "number", "of", "students", "are", "enrolled", "in", ".", "List", "both", "the", "id", "and", "the", "summary", "."], "ru": ["Найди", "программу", ",", "по", "которой", "обучается", "наибольшее", "количество", "студентов", ".", "Укажи", "id", "и", "краткое", "описание", "."]}, "query_toks": {"en": ["select", "t1.degree_program_id", ",", "t1.degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "group", "by", "t1.degree_program_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.degree_program_id", ",", "t1.degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "group", "by", "t1.degree_program_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.degree_program_id", ",", "t1.degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "group", "by", "t1.degree_program_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.degree_program_id", ",", "t1.degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "group", "by", "t1.degree_program_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0541", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the program id and the summary of the degree that has the most students enrolled?", "ru": "Каков id программы и краткое описание степени, на которую обучается больше всего студентов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "program", "id", "and", "the", "summary", "of", "the", "degree", "that", "has", "the", "most", "students", "enrolled", "?"], "ru": ["Каков", "id", "программы", "и", "краткое", "описание", "степени", ",", "на", "которую", "обучается", "больше", "всего", "студентов", "?"]}, "query_toks": {"en": ["select", "t1.degree_program_id", ",", "t1.degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "group", "by", "t1.degree_program_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.degree_program_id", ",", "t1.degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "group", "by", "t1.degree_program_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.degree_program_id", ",", "t1.degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "group", "by", "t1.degree_program_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.degree_program_id", ",", "t1.degree_summary_name", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "group", "by", "t1.degree_program_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0542", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.", "ru": "Какой студент чаще всего записывался на любую программу? Укажите id, имя, отчество, фамилию, количество зачислений и id студента."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 32, false], null]], [0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [3, [0, [0, 0, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 32, false], null]], [0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [3, [0, [0, 0, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "student", "has", "enrolled", "for", "the", "most", "times", "in", "any", "program", "?", "List", "the", "id", ",", "first", "name", ",", "middle", "name", ",", "last", "name", ",", "the", "number", "of", "enrollments", "and", "student", "id", "."], "ru": ["Какой", "студент", "чаще", "всего", "записывался", "на", "любую", "программу", "?", "Укажите", "id", ",", "имя", ",", "отчество", ",", "фамилию", ",", "количество", "зачислений", "и", "id", "студента", "."]}, "query_toks": {"en": ["select", "t1.student_id", ",", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", ",", "count", "(", "*", ")", ",", "t1.student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.student_id", ",", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", ",", "count", "(", "*", ")", ",", "t1.student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.student_id", ",", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", ",", "count", "(", "*", ")", ",", "t1.student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.student_id", ",", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", ",", "count", "(", "*", ")", ",", "t1.student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0543", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?", "ru": "Каковы имя, отчество и фамилия, а также id и количество зачислений у студента, который имеет больше всего зачислений на любую программу?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 32, false], null]], [0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [3, [0, [0, 0, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 32, false], null]], [0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [3, [0, [0, 0, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [[0, 32, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "first", ",", "middle", ",", "and", "last", "name", ",", "along", "with", "the", "id", "and", "number", "of", "enrollments", ",", "for", "the", "student", "who", "enrolled", "the", "most", "in", "any", "program", "?"], "ru": ["Каковы", "имя", ",", "отчество", "и", "фамилия", ",", "а", "также", "id", "и", "количество", "зачислений", "у", "студента", ",", "который", "имеет", "больше", "всего", "зачислений", "на", "любую", "программу", "?"]}, "query_toks": {"en": ["select", "t1.student_id", ",", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", ",", "count", "(", "*", ")", ",", "t1.student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.student_id", ",", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", ",", "count", "(", "*", ")", ",", "t1.student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.student_id", ",", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", ",", "count", "(", "*", ")", ",", "t1.student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.student_id", ",", "t1.first_name", ",", "t1.middle_name", ",", "t1.last_name", ",", "count", "(", "*", ")", ",", "t1.student_id", "from", "students", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.student_id", "=", "t2.student_id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0544", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment );", "ru": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment );"}, "question": {"en": "Which semesters do not have any student enrolled? List the semester name.", "ru": "На какие семестры не записываются студенты? Укажите название семестра."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[true, 8, [0, [0, 28, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[true, 8, [0, [0, 28, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "semesters", "do", "not", "have", "any", "student", "enrolled", "?", "List", "the", "semester", "name", "."], "ru": ["На", "какие", "семестры", "не", "записываются", "студенты", "?", "Укажите", "название", "семестра", "."]}, "query_toks": {"en": ["select", "semester_name", "from", "semesters", "where", "semester_id", "not", "in", "(", "select", "semester_id", "from", "student_enrolment", ")", ";"], "ru": ["select", "semester_name", "from", "semesters", "where", "semester_id", "not", "in", "(", "select", "semester_id", "from", "student_enrolment", ")", ";"]}, "query_toks_no_values": {"en": ["select", "semester_name", "from", "semesters", "where", "semester_id", "not", "in", "(", "select", "semester_id", "from", "student_enrolment", ")", ";"], "ru": ["select", "semester_name", "from", "semesters", "where", "semester_id", "not", "in", "(", "select", "semester_id", "from", "student_enrolment", ")", ";"]}}, {"id": "D_0545", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment );", "ru": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment );"}, "question": {"en": "What is the name of the semester with no students enrolled?", "ru": "Как называется семестр, в который не зачисляются студенты?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[true, 8, [0, [0, 28, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[true, 8, [0, [0, 28, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "semester", "with", "no", "students", "enrolled", "?"], "ru": ["Как", "называется", "семестр", ",", "в", "который", "не", "зачисляются", "студенты", "?"]}, "query_toks": {"en": ["select", "semester_name", "from", "semesters", "where", "semester_id", "not", "in", "(", "select", "semester_id", "from", "student_enrolment", ")", ";"], "ru": ["select", "semester_name", "from", "semesters", "where", "semester_id", "not", "in", "(", "select", "semester_id", "from", "student_enrolment", ")", ";"]}, "query_toks_no_values": {"en": ["select", "semester_name", "from", "semesters", "where", "semester_id", "not", "in", "(", "select", "semester_id", "from", "student_enrolment", ")", ";"], "ru": ["select", "semester_name", "from", "semesters", "where", "semester_id", "not", "in", "(", "select", "semester_id", "from", "student_enrolment", ")", ";"]}}, {"id": "D_0546", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id;", "ru": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id;"}, "question": {"en": "What are all the course names of the courses which ever have students enrolled in?", "ru": "Как называются все курсы, на которые когда-либо записывались студенты?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 50, false], null]]}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 50, false], null]]}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "all", "the", "course", "names", "of", "the", "courses", "which", "ever", "have", "students", "enrolled", "in", "?"], "ru": ["Как", "называются", "все", "курсы", ",", "на", "которые", "когда-либо", "записывались", "студенты", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", ";"], "ru": ["select", "distinct", "t1.course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", ";"], "ru": ["select", "distinct", "t1.course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", ";"]}}, {"id": "D_0547", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id;", "ru": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id;"}, "question": {"en": "What are the names of all courses that have some students enrolled?", "ru": "Как называются все курсы, на которые записаны некоторые студенты?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 50, false], null]]}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 50, false], null]]}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "all", "courses", "that", "have", "some", "students", "enrolled", "?"], "ru": ["Как", "называются", "все", "курсы", ",", "на", "которые", "записаны", "некоторые", "студенты", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", ";"], "ru": ["select", "distinct", "t1.course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", ";"], "ru": ["select", "distinct", "t1.course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", ";"]}}, {"id": "D_0548", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What's the name of the course with most number of enrollments?", "ru": "Как называется курс с наибольшим количеством зачисленных?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 50, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 50, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "'s", "the", "name", "of", "the", "course", "with", "most", "number", "of", "enrollments", "?"], "ru": ["Как", "называется", "курс", "с", "наибольшим", "количеством", "зачисленных", "?"]}, "query_toks": {"en": ["select", "t1.course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "group", "by", "t1.course_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "group", "by", "t1.course_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "group", "by", "t1.course_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "group", "by", "t1.course_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0549", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the name of the course with the most students enrolled?", "ru": "Как называется курс, в котором обучается больше всего студентов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 50, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 50, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "course", "with", "the", "most", "students", "enrolled", "?"], "ru": ["Как", "называется", "курс", ",", "в", "котором", "обучается", "больше", "всего", "студентов", "?"]}, "query_toks": {"en": ["select", "t1.course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "group", "by", "t1.course_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "group", "by", "t1.course_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "group", "by", "t1.course_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.course_name", "from", "courses", "as", "t1", "join", "student_enrolment_courses", "as", "t2", "on", "t1.course_id", "=", "t2.course_id", "group", "by", "t1.course_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0550", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id;", "ru": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id;"}, "question": {"en": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.", "ru": "Показать фамилии студентов, которые в настоящее время проживают в штате Северная Каролина, но не зарегистрировались ни в одной программе на получение степени."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 37, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"NorthCarolina\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [true, [[0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 37, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"NorthCarolina\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [true, [[0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["Find", "the", "last", "name", "of", "the", "students", "who", "currently", "live", "in", "the", "state", "of", "North", "Carolina", "but", "have", "not", "registered", "in", "any", "degree", "program", "."], "ru": ["Показать", "фамилии", "студентов", ",", "которые", "в", "настоящее", "время", "проживают", "в", "штате", "Северная", "Каролина", ",", "но", "не", "зарегистрировались", "ни", "в", "одной", "программе", "на", "получение", "степени", "."]}, "query_toks": {"en": ["select", "t1.last_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.current_address_id", "=", "t2.address_id", "where", "t2.state_province_county", "=", "\"NorthCarolina\"", "except", "select", "distinct", "t3.last_name", "from", "students", "as", "t3", "join", "student_enrolment", "as", "t4", "on", "t3.student_id", "=", "t4.student_id", ";"], "ru": ["select", "t1.last_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.current_address_id", "=", "t2.address_id", "where", "t2.state_province_county", "=", "\"NorthCarolina\"", "except", "select", "distinct", "t3.last_name", "from", "students", "as", "t3", "join", "student_enrolment", "as", "t4", "on", "t3.student_id", "=", "t4.student_id", ";"]}, "query_toks_no_values": {"en": ["select", "t1.last_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.current_address_id", "=", "t2.address_id", "where", "t2.state_province_county", "=", "value", "except", "select", "distinct", "t3.last_name", "from", "students", "as", "t3", "join", "student_enrolment", "as", "t4", "on", "t3.student_id", "=", "t4.student_id", ";"], "ru": ["select", "t1.last_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.current_address_id", "=", "t2.address_id", "where", "t2.state_province_county", "=", "value", "except", "select", "distinct", "t3.last_name", "from", "students", "as", "t3", "join", "student_enrolment", "as", "t4", "on", "t3.student_id", "=", "t4.student_id", ";"]}}, {"id": "D_0551", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id;", "ru": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id;"}, "question": {"en": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?", "ru": "Каковы фамилии студентов, которые живут в Северной Каролине, но не зарегистрировались ни на какие программы обучения?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 37, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"NorthCarolina\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [true, [[0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 37, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"NorthCarolina\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null]]}, "select": [true, [[0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["What", "are", "the", "last", "name", "of", "the", "students", "who", "live", "in", "North", "Carolina", "but", "have", "not", "registered", "in", "any", "degree", "programs", "?"], "ru": ["Каковы", "фамилии", "студентов", ",", "которые", "живут", "в", "Северной", "Каролине", ",", "но", "не", "зарегистрировались", "ни", "на", "какие", "программы", "обучения", "?"]}, "query_toks": {"en": ["select", "t1.last_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.current_address_id", "=", "t2.address_id", "where", "t2.state_province_county", "=", "\"NorthCarolina\"", "except", "select", "distinct", "t3.last_name", "from", "students", "as", "t3", "join", "student_enrolment", "as", "t4", "on", "t3.student_id", "=", "t4.student_id", ";"], "ru": ["select", "t1.last_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.current_address_id", "=", "t2.address_id", "where", "t2.state_province_county", "=", "\"NorthCarolina\"", "except", "select", "distinct", "t3.last_name", "from", "students", "as", "t3", "join", "student_enrolment", "as", "t4", "on", "t3.student_id", "=", "t4.student_id", ";"]}, "query_toks_no_values": {"en": ["select", "t1.last_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.current_address_id", "=", "t2.address_id", "where", "t2.state_province_county", "=", "value", "except", "select", "distinct", "t3.last_name", "from", "students", "as", "t3", "join", "student_enrolment", "as", "t4", "on", "t3.student_id", "=", "t4.student_id", ";"], "ru": ["select", "t1.last_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.current_address_id", "=", "t2.address_id", "where", "t2.state_province_county", "=", "value", "except", "select", "distinct", "t3.last_name", "from", "students", "as", "t3", "join", "student_enrolment", "as", "t4", "on", "t3.student_id", "=", "t4.student_id", ";"]}}, {"id": "D_0552", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2;", "ru": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2;"}, "question": {"en": "Show the date and id of the transcript with at least 2 course results.", "ru": "Показать дату и id транскрипта как минимум с 2 результатами курса."}, "sql": {"en": {"from": {"table_units": [["table_unit", 10], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 56, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 56, false], null]]]], "where": [], "groupBy": [[0, 56, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 10], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 56, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 56, false], null]]]], "where": [], "groupBy": [[0, 56, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "date", "and", "id", "of", "the", "transcript", "with", "at", "least", "2", "course", "results", "."], "ru": ["Показать", "дату", "и", "id", "транскрипта", "как", "минимум", "с", "2", "результатами", "курса", "."]}, "query_toks": {"en": ["select", "t2.transcript_date", ",", "t1.transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1.transcript_id", "=", "t2.transcript_id", "group", "by", "t1.transcript_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t2.transcript_date", ",", "t1.transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1.transcript_id", "=", "t2.transcript_id", "group", "by", "t1.transcript_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t2.transcript_date", ",", "t1.transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1.transcript_id", "=", "t2.transcript_id", "group", "by", "t1.transcript_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t2.transcript_date", ",", "t1.transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1.transcript_id", "=", "t2.transcript_id", "group", "by", "t1.transcript_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0553", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2;", "ru": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2;"}, "question": {"en": "What is the date and id of the transcript with at least 2 courses listed?", "ru": "Какова дата и id транскрипта с указанием как минимум 2 курсов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 10], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 56, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 56, false], null]]]], "where": [], "groupBy": [[0, 56, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 10], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 56, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 56, false], null]]]], "where": [], "groupBy": [[0, 56, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "date", "and", "id", "of", "the", "transcript", "with", "at", "least", "2", "courses", "listed", "?"], "ru": ["Какова", "дата", "и", "id", "транскрипта", "с", "указанием", "как", "минимум", "2", "курсов", "?"]}, "query_toks": {"en": ["select", "t2.transcript_date", ",", "t1.transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1.transcript_id", "=", "t2.transcript_id", "group", "by", "t1.transcript_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t2.transcript_date", ",", "t1.transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1.transcript_id", "=", "t2.transcript_id", "group", "by", "t1.transcript_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t2.transcript_date", ",", "t1.transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1.transcript_id", "=", "t2.transcript_id", "group", "by", "t1.transcript_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t2.transcript_date", ",", "t1.transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1.transcript_id", "=", "t2.transcript_id", "group", "by", "t1.transcript_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0554", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward';", "ru": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Тимофей' AND last_name  =  'Улицкий';"}, "question": {"en": "What is the phone number of the man with the first name Timmothy and the last name Ward?", "ru": "Какой номер телефона у человека по имени Тимофей и фамилии Улицкий?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 35, false], null], "\"Timmothy\"", null], "and", [false, 2, [0, [0, 37, false], null], "\"Ward\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 35, false], null], "\"Тимофей\"", null], "and", [false, 2, [0, [0, 37, false], null], "\"Улицкий\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "phone", "number", "of", "the", "man", "with", "the", "first", "name", "Timmothy", "and", "the", "last", "name", "Ward", "?"], "ru": ["Какой", "номер", "телефона", "у", "человека", "по", "имени", "Тимофей", "и", "фамилии", "Улицкий", "?"]}, "query_toks": {"en": ["select", "cell_mobile_number", "from", "students", "where", "first_name", "=", "\"Timmothy\"", "and", "last_name", "=", "\"Ward\"", ";"], "ru": ["select", "cell_mobile_number", "from", "students", "where", "first_name", "=", "\"Тимофей\"", "and", "last_name", "=", "\"Улицкий\"", ";"]}, "query_toks_no_values": {"en": ["select", "cell_mobile_number", "from", "students", "where", "first_name", "=", "value", "and", "last_name", "=", "value", ";"], "ru": ["select", "cell_mobile_number", "from", "students", "where", "first_name", "=", "value", "and", "last_name", "=", "value", ";"]}}, {"id": "D_0555", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "select cell_mobile_number from students where first_name  =  'Timmothy' and last_name  =  'Ward';", "ru": "select cell_mobile_number from students where first_name  =  'Тимофей' and last_name  =  'Улицкий';"}, "question": {"en": "What is the mobile phone number of the student named Timmothy Ward ?", "ru": "Какой номер мобильного телефона у студента по имени Тимофей Улицкий?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 35, false], null], "\"Timmothy\"", null], "and", [false, 2, [0, [0, 37, false], null], "\"Ward\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 35, false], null], "\"Тимофей\"", null], "and", [false, 2, [0, [0, 37, false], null], "\"Улицкий\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "mobile", "phone", "number", "of", "the", "student", "named", "Timmothy", "Ward", "?"], "ru": ["Какой", "номер", "мобильного", "телефона", "у", "студента", "по", "имени", "Тимофей", "Улицкий", "?"]}, "query_toks": {"en": ["select", "cell_mobile_number", "from", "students", "where", "first_name", "=", "\"Timmothy\"", "and", "last_name", "=", "\"Ward\"", ";"], "ru": ["select", "cell_mobile_number", "from", "students", "where", "first_name", "=", "\"Тимофей\"", "and", "last_name", "=", "\"Улицкий\"", ";"]}, "query_toks_no_values": {"en": ["select", "cell_mobile_number", "from", "students", "where", "first_name", "=", "value", "and", "last_name", "=", "value", ";"], "ru": ["select", "cell_mobile_number", "from", "students", "where", "first_name", "=", "value", "and", "last_name", "=", "value", ";"]}}, {"id": "D_0556", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1;", "ru": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1;"}, "question": {"en": "Who is the first student to register? List the first name, middle name and last name.", "ru": "Кто первым из студентов зарегистрировался? Показать имя, отчество и фамилию."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 41, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 41, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Who", "is", "the", "first", "student", "to", "register", "?", "List", "the", "first", "name", ",", "middle", "name", "and", "last", "name", "."], "ru": ["Кто", "первым", "из", "студентов", "зарегистрировался", "?", "Показать", "имя", ",", "отчество", "и", "фамилию", "."]}, "query_toks": {"en": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_first_registered", "asc", "limit", "1", ";"], "ru": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_first_registered", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_first_registered", "asc", "limit", "1", ";"], "ru": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_first_registered", "asc", "limit", "1", ";"]}}, {"id": "D_0557", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1;", "ru": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1;"}, "question": {"en": "What is the first, middle, and last name of the first student to register?", "ru": "Каковы имя, отчество и фамилия первого зарегистрировавшегося студента?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 41, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 41, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "first", ",", "middle", ",", "and", "last", "name", "of", "the", "first", "student", "to", "register", "?"], "ru": ["Каковы", "имя", ",", "отчество", "и", "фамилия", "первого", "зарегистрировавшегося", "студента", "?"]}, "query_toks": {"en": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_first_registered", "asc", "limit", "1", ";"], "ru": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_first_registered", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_first_registered", "asc", "limit", "1", ";"], "ru": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_first_registered", "asc", "limit", "1", ";"]}}, {"id": "D_0558", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1;", "ru": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1;"}, "question": {"en": "Who is the earliest graduate of the school? List the first name, middle name and last name.", "ru": "Кто первый выпускник школы? Отображать имя, отчество и фамилию."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 42, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 42, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Who", "is", "the", "earliest", "graduate", "of", "the", "school", "?", "List", "the", "first", "name", ",", "middle", "name", "and", "last", "name", "."], "ru": ["Кто", "первый", "выпускник", "школы", "?", "Отображать", "имя", ",", "отчество", "и", "фамилию", "."]}, "query_toks": {"en": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_left", "asc", "limit", "1", ";"], "ru": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_left", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_left", "asc", "limit", "1", ";"], "ru": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_left", "asc", "limit", "1", ";"]}}, {"id": "D_0559", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1;", "ru": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1;"}, "question": {"en": "What is the first, middle, and last name of the earliest school graduate?", "ru": "Каковы имя, отчество и фамилия первого выпускника школы?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 42, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 42, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "first", ",", "middle", ",", "and", "last", "name", "of", "the", "earliest", "school", "graduate", "?"], "ru": ["Каковы", "имя", ",", "отчество", "и", "фамилия", "первого", "выпускника", "школы", "?"]}, "query_toks": {"en": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_left", "asc", "limit", "1", ";"], "ru": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_left", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_left", "asc", "limit", "1", ";"], "ru": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "order", "by", "date_left", "asc", "limit", "1", ";"]}}, {"id": "D_0560", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id;", "ru": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id;"}, "question": {"en": "Whose permanent address is different from his or her current address? List his or her first name.", "ru": "Чей постоянный адрес отличается от его нынешнего адреса? Укажите его или ее имя."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 7, [0, [0, 33, false], null], [0, 34, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 7, [0, [0, 33, false], null], [0, 34, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Whose", "permanent", "address", "is", "different", "from", "his", "or", "her", "current", "address", "?", "List", "his", "or", "her", "first", "name", "."], "ru": ["Чей", "постоянный", "адрес", "отличается", "от", "его", "нынешнего", "адреса", "?", "Укажите", "его", "или", "ее", "имя", "."]}, "query_toks": {"en": ["select", "first_name", "from", "students", "where", "current_address_id", "!=", "permanent_address_id", ";"], "ru": ["select", "first_name", "from", "students", "where", "current_address_id", "!=", "permanent_address_id", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", "from", "students", "where", "current_address_id", "!=", "permanent_address_id", ";"], "ru": ["select", "first_name", "from", "students", "where", "current_address_id", "!=", "permanent_address_id", ";"]}}, {"id": "D_0561", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id;", "ru": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id;"}, "question": {"en": "What is the first name of the student whose permanent address is different from his or her current one?", "ru": "Как зовут студента, постоянный адрес которого отличается от его нынешнего?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 7, [0, [0, 33, false], null], [0, 34, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 7, [0, [0, 33, false], null], [0, 34, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "first", "name", "of", "the", "student", "whose", "permanent", "address", "is", "different", "from", "his", "or", "her", "current", "one", "?"], "ru": ["Как", "зовут", "студента", ",", "постоянный", "адрес", "которого", "отличается", "от", "его", "нынешнего", "?"]}, "query_toks": {"en": ["select", "first_name", "from", "students", "where", "current_address_id", "!=", "permanent_address_id", ";"], "ru": ["select", "first_name", "from", "students", "where", "current_address_id", "!=", "permanent_address_id", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", "from", "students", "where", "current_address_id", "!=", "permanent_address_id", ";"], "ru": ["select", "first_name", "from", "students", "where", "current_address_id", "!=", "permanent_address_id", ";"]}}, {"id": "D_0562", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which address holds the most number of students currently? List the address id and all lines.", "ru": "По какому адресу сейчас проживает наибольшее количество студентов? Показать id адреса и все адресные строки."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 33, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 33, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "address", "holds", "the", "most", "number", "of", "students", "currently", "?", "List", "the", "address", "id", "and", "all", "lines", "."], "ru": ["По", "какому", "адресу", "сейчас", "проживает", "наибольшее", "количество", "студентов", "?", "Показать", "id", "адреса", "и", "все", "адресные", "строки", "."]}, "query_toks": {"en": ["select", "t1.address_id", ",", "t1.line_1", ",", "t1.line_2", "from", "addresses", "as", "t1", "join", "students", "as", "t2", "on", "t1.address_id", "=", "t2.current_address_id", "group", "by", "t1.address_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.address_id", ",", "t1.line_1", ",", "t1.line_2", "from", "addresses", "as", "t1", "join", "students", "as", "t2", "on", "t1.address_id", "=", "t2.current_address_id", "group", "by", "t1.address_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.address_id", ",", "t1.line_1", ",", "t1.line_2", "from", "addresses", "as", "t1", "join", "students", "as", "t2", "on", "t1.address_id", "=", "t2.current_address_id", "group", "by", "t1.address_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.address_id", ",", "t1.line_1", ",", "t1.line_2", "from", "addresses", "as", "t1", "join", "students", "as", "t2", "on", "t1.address_id", "=", "t2.current_address_id", "group", "by", "t1.address_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0563", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the id, line 1, and line 2 of the address with the most students?", "ru": "Каковы id, строка 1 и строка 2 адреса с наибольшим количеством студентов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 33, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 33, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "id", ",", "line", "1", ",", "and", "line", "2", "of", "the", "address", "with", "the", "most", "students", "?"], "ru": ["Каковы", "id", ",", "строка", "1", "и", "строка", "2", "адреса", "с", "наибольшим", "количеством", "студентов", "?"]}, "query_toks": {"en": ["select", "t1.address_id", ",", "t1.line_1", ",", "t1.line_2", "from", "addresses", "as", "t1", "join", "students", "as", "t2", "on", "t1.address_id", "=", "t2.current_address_id", "group", "by", "t1.address_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.address_id", ",", "t1.line_1", ",", "t1.line_2", "from", "addresses", "as", "t1", "join", "students", "as", "t2", "on", "t1.address_id", "=", "t2.current_address_id", "group", "by", "t1.address_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.address_id", ",", "t1.line_1", ",", "t1.line_2", "from", "addresses", "as", "t1", "join", "students", "as", "t2", "on", "t1.address_id", "=", "t2.current_address_id", "group", "by", "t1.address_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.address_id", ",", "t1.line_1", ",", "t1.line_2", "from", "addresses", "as", "t1", "join", "students", "as", "t2", "on", "t1.address_id", "=", "t2.current_address_id", "group", "by", "t1.address_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0564", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(transcript_date) FROM Transcripts;", "ru": "SELECT avg(transcript_date) FROM Transcripts;"}, "question": {"en": "On average, when were the transcripts printed?", "ru": "Когда в среднем были напечатаны транскрипт?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[5, [0, [0, 53, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[5, [0, [0, 53, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["On", "average", ",", "when", "were", "the", "transcripts", "printed", "?"], "ru": ["Когда", "в", "среднем", "были", "напечатаны", "транскрипт", "?"]}, "query_toks": {"en": ["select", "avg", "(", "transcript_date", ")", "from", "transcripts", ";"], "ru": ["select", "avg", "(", "transcript_date", ")", "from", "transcripts", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "transcript_date", ")", "from", "transcripts", ";"], "ru": ["select", "avg", "(", "transcript_date", ")", "from", "transcripts", ";"]}}, {"id": "D_0565", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(transcript_date) FROM Transcripts;", "ru": "SELECT avg(transcript_date) FROM Transcripts;"}, "question": {"en": "What is the average transcript date?", "ru": "Какая в среднем дата транскрипта?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[5, [0, [0, 53, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[5, [0, [0, 53, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "transcript", "date", "?"], "ru": ["Какая", "в", "среднем", "дата", "транскрипта", "?"]}, "query_toks": {"en": ["select", "avg", "(", "transcript_date", ")", "from", "transcripts", ";"], "ru": ["select", "avg", "(", "transcript_date", ")", "from", "transcripts", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "transcript_date", ")", "from", "transcripts", ";"], "ru": ["select", "avg", "(", "transcript_date", ")", "from", "transcripts", ";"]}}, {"id": "D_0566", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1;", "ru": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1;"}, "question": {"en": "When is the first transcript released? List the date and details.", "ru": "Когда будет выпущен первый транскрипт? Укажите дату и подробности."}, "sql": {"en": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 54, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 53, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 54, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 53, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["When", "is", "the", "first", "transcript", "released", "?", "List", "the", "date", "and", "details", "."], "ru": ["Когда", "будет", "выпущен", "первый", "транскрипт", "?", "Укажите", "дату", "и", "подробности", "."]}, "query_toks": {"en": ["select", "transcript_date", ",", "other_details", "from", "transcripts", "order", "by", "transcript_date", "asc", "limit", "1", ";"], "ru": ["select", "transcript_date", ",", "other_details", "from", "transcripts", "order", "by", "transcript_date", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "transcript_date", ",", "other_details", "from", "transcripts", "order", "by", "transcript_date", "asc", "limit", "1", ";"], "ru": ["select", "transcript_date", ",", "other_details", "from", "transcripts", "order", "by", "transcript_date", "asc", "limit", "1", ";"]}}, {"id": "D_0567", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1;", "ru": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1;"}, "question": {"en": "What is the earliest date of a transcript release, and what details can you tell me?", "ru": "Какая самая ранняя дата выпуска транскрипта и какие подробности вы можете мне сообщить?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 54, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 53, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 54, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 53, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "earliest", "date", "of", "a", "transcript", "release", ",", "and", "what", "details", "can", "you", "tell", "me", "?"], "ru": ["Какая", "самая", "ранняя", "дата", "выпуска", "транскрипта", "и", "какие", "подробности", "вы", "можете", "мне", "сообщить", "?"]}, "query_toks": {"en": ["select", "transcript_date", ",", "other_details", "from", "transcripts", "order", "by", "transcript_date", "asc", "limit", "1", ";"], "ru": ["select", "transcript_date", ",", "other_details", "from", "transcripts", "order", "by", "transcript_date", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "transcript_date", ",", "other_details", "from", "transcripts", "order", "by", "transcript_date", "asc", "limit", "1", ";"], "ru": ["select", "transcript_date", ",", "other_details", "from", "transcripts", "order", "by", "transcript_date", "asc", "limit", "1", ";"]}}, {"id": "D_0568", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Transcripts;", "ru": "SELECT count(*) FROM Transcripts;"}, "question": {"en": "How many transcripts are released?", "ru": "Сколько стенограмм выпущено?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "transcripts", "are", "released", "?"], "ru": ["Сколько", "стенограмм", "выпущено", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "transcripts", ";"], "ru": ["select", "count", "(", "*", ")", "from", "transcripts", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "transcripts", ";"], "ru": ["select", "count", "(", "*", ")", "from", "transcripts", ";"]}}, {"id": "D_0569", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Transcripts;", "ru": "SELECT count(*) FROM Transcripts;"}, "question": {"en": "How many transcripts are listed?", "ru": "Сколько стенограмм указано?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "transcripts", "are", "listed", "?"], "ru": ["Сколько", "стенограмм", "указано", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "transcripts", ";"], "ru": ["select", "count", "(", "*", ")", "from", "transcripts", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "transcripts", ";"], "ru": ["select", "count", "(", "*", ")", "from", "transcripts", ";"]}}, {"id": "D_0570", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1;", "ru": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1;"}, "question": {"en": "What is the last transcript release date?", "ru": "Какая дата выпуска последней стенограммы?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[0, [0, [0, 53, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 53, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[0, [0, [0, 53, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 53, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "last", "transcript", "release", "date", "?"], "ru": ["Какая", "дата", "выпуска", "последней", "стенограммы", "?"]}, "query_toks": {"en": ["select", "transcript_date", "from", "transcripts", "order", "by", "transcript_date", "desc", "limit", "1", ";"], "ru": ["select", "transcript_date", "from", "transcripts", "order", "by", "transcript_date", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "transcript_date", "from", "transcripts", "order", "by", "transcript_date", "desc", "limit", "1", ";"], "ru": ["select", "transcript_date", "from", "transcripts", "order", "by", "transcript_date", "desc", "limit", "1", ";"]}}, {"id": "D_0571", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1;", "ru": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1;"}, "question": {"en": "When was the last transcript released?", "ru": "Когда была опубликована последняя стенограмма?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[0, [0, [0, 53, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 53, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 9]], "conds": []}, "select": [false, [[0, [0, [0, 53, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 53, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["When", "was", "the", "last", "transcript", "released", "?"], "ru": ["Когда", "была", "опубликована", "последняя", "стенограмма", "?"]}, "query_toks": {"en": ["select", "transcript_date", "from", "transcripts", "order", "by", "transcript_date", "desc", "limit", "1", ";"], "ru": ["select", "transcript_date", "from", "transcripts", "order", "by", "transcript_date", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "transcript_date", "from", "transcripts", "order", "by", "transcript_date", "desc", "limit", "1", ";"], "ru": ["select", "transcript_date", "from", "transcripts", "order", "by", "transcript_date", "desc", "limit", "1", ";"]}}, {"id": "D_0572", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.", "ru": "Сколько раз результат зачисления на курс может отображаться в разных транскриптах? Также покажите id записи на курс."}, "sql": {"en": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 55, false], null]]]], "where": [], "groupBy": [[0, 55, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 55, false], null]]]], "where": [], "groupBy": [[0, 55, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "times", "at", "most", "can", "a", "course", "enrollment", "result", "show", "in", "different", "transcripts", "?", "Also", "show", "the", "course", "enrollment", "id", "."], "ru": ["Сколько", "раз", "результат", "зачисления", "на", "курс", "может", "отображаться", "в", "разных", "транскриптах", "?", "Также", "покажите", "id", "записи", "на", "курс", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "student_course_id", "from", "transcript_contents", "group", "by", "student_course_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "count", "(", "*", ")", ",", "student_course_id", "from", "transcript_contents", "group", "by", "student_course_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "student_course_id", "from", "transcript_contents", "group", "by", "student_course_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "count", "(", "*", ")", ",", "student_course_id", "from", "transcript_contents", "group", "by", "student_course_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0573", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?", "ru": "Какое максимальное количество раз курс появляется в разных транскриптах и каков id регистрации этого курса?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 55, false], null]]]], "where": [], "groupBy": [[0, 55, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 10]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 55, false], null]]]], "where": [], "groupBy": [[0, 55, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "maximum", "number", "of", "times", "that", "a", "course", "shows", "up", "in", "different", "transcripts", "and", "what", "is", "that", "course", "'s", "enrollment", "id", "?"], "ru": ["Какое", "максимальное", "количество", "раз", "курс", "появляется", "в", "разных", "транскриптах", "и", "каков", "id", "регистрации", "этого", "курса", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "student_course_id", "from", "transcript_contents", "group", "by", "student_course_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "count", "(", "*", ")", ",", "student_course_id", "from", "transcript_contents", "group", "by", "student_course_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "student_course_id", "from", "transcript_contents", "group", "by", "student_course_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "count", "(", "*", ")", ",", "student_course_id", "from", "transcript_contents", "group", "by", "student_course_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0574", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1;", "ru": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1;"}, "question": {"en": "Show the date of the transcript which shows the least number of results, also list the id.", "ru": "Дата стенограммы, которая показывает наименьшее количество результатов, вместе с id стенограммы."}, "sql": {"en": {"from": {"table_units": [["table_unit", 10], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 56, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 56, false], null]]]], "where": [], "groupBy": [[0, 56, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 10], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 56, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 56, false], null]]]], "where": [], "groupBy": [[0, 56, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "date", "of", "the", "transcript", "which", "shows", "the", "least", "number", "of", "results", ",", "also", "list", "the", "id", "."], "ru": ["Дата", "стенограммы", ",", "которая", "показывает", "наименьшее", "количество", "результатов", ",", "вместе", "с", "id", "стенограммы", "."]}, "query_toks": {"en": ["select", "t2.transcript_date", ",", "t1.transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1.transcript_id", "=", "t2.transcript_id", "group", "by", "t1.transcript_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"], "ru": ["select", "t2.transcript_date", ",", "t1.transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1.transcript_id", "=", "t2.transcript_id", "group", "by", "t1.transcript_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.transcript_date", ",", "t1.transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1.transcript_id", "=", "t2.transcript_id", "group", "by", "t1.transcript_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"], "ru": ["select", "t2.transcript_date", ",", "t1.transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1.transcript_id", "=", "t2.transcript_id", "group", "by", "t1.transcript_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"]}}, {"id": "D_0575", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1;", "ru": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1;"}, "question": {"en": "What is the date and id of the transcript with the least number of results?", "ru": "Какая дата и id стенограммы с наименьшим количеством результатов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 10], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 56, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 56, false], null]]]], "where": [], "groupBy": [[0, 56, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 10], ["table_unit", 9]], "conds": [[false, 2, [0, [0, 56, false], null], [0, 52, false], null]]}, "select": [false, [[0, [0, [0, 53, false], null]], [0, [0, [0, 56, false], null]]]], "where": [], "groupBy": [[0, 56, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "date", "and", "id", "of", "the", "transcript", "with", "the", "least", "number", "of", "results", "?"], "ru": ["Какая", "дата", "и", "id", "стенограммы", "с", "наименьшим", "количеством", "результатов", "?"]}, "query_toks": {"en": ["select", "t2.transcript_date", ",", "t1.transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1.transcript_id", "=", "t2.transcript_id", "group", "by", "t1.transcript_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"], "ru": ["select", "t2.transcript_date", ",", "t1.transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1.transcript_id", "=", "t2.transcript_id", "group", "by", "t1.transcript_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.transcript_date", ",", "t1.transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1.transcript_id", "=", "t2.transcript_id", "group", "by", "t1.transcript_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"], "ru": ["select", "t2.transcript_date", ",", "t1.transcript_id", "from", "transcript_contents", "as", "t1", "join", "transcripts", "as", "t2", "on", "t1.transcript_id", "=", "t2.transcript_id", "group", "by", "t1.transcript_id", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"]}}, {"id": "D_0576", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor';", "ru": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Кандидатская' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Аспирансткая';"}, "question": {"en": "Find the semester when both Master students and Bachelor students got enrolled in.", "ru": "Найдите семестр, в который были зачислены и студенты аспирантуры, и студенты докторантуры."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Master\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Bachelor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Кандидатская\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Аспирансткая\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "semester", "when", "both", "Master", "students", "and", "Bachelor", "students", "got", "enrolled", "in", "."], "ru": ["Найдите", "семестр", ",", "в", "который", "были", "зачислены", "и", "студенты", "аспирантуры", ",", "и", "студенты", "докторантуры", "."]}, "query_toks": {"en": ["select", "distinct", "t2.semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "where", "degree_summary_name", "=", "\"Master\"", "intersect", "select", "distinct", "t2.semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "where", "degree_summary_name", "=", "\"Bachelor\"", ";"], "ru": ["select", "distinct", "t2.semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "where", "degree_summary_name", "=", "\"Кандидатская\"", "intersect", "select", "distinct", "t2.semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "where", "degree_summary_name", "=", "\"Аспирансткая\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t2.semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "where", "degree_summary_name", "=", "value", "intersect", "select", "distinct", "t2.semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "where", "degree_summary_name", "=", "value", ";"], "ru": ["select", "distinct", "t2.semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "where", "degree_summary_name", "=", "value", "intersect", "select", "distinct", "t2.semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "where", "degree_summary_name", "=", "value", ";"]}}, {"id": "D_0577", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor';", "ru": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Кандидатская' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Аспирансткая';"}, "question": {"en": "What is the id of the semester that had both Masters and Bachelors students enrolled?", "ru": "Каков id семестра, в который зачислены студенты аспирантуры и докторантуры?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Master\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Bachelor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Кандидатская\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 46, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Аспирансткая\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "id", "of", "the", "semester", "that", "had", "both", "Masters", "and", "Bachelors", "students", "enrolled", "?"], "ru": ["Каков", "id", "семестра", ",", "в", "который", "зачислены", "студенты", "аспирантуры", "и", "докторантуры", "?"]}, "query_toks": {"en": ["select", "distinct", "t2.semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "where", "degree_summary_name", "=", "\"Master\"", "intersect", "select", "distinct", "t2.semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "where", "degree_summary_name", "=", "\"Bachelor\"", ";"], "ru": ["select", "distinct", "t2.semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "where", "degree_summary_name", "=", "\"Кандидатская\"", "intersect", "select", "distinct", "t2.semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "where", "degree_summary_name", "=", "\"Аспирансткая\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t2.semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "where", "degree_summary_name", "=", "value", "intersect", "select", "distinct", "t2.semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "where", "degree_summary_name", "=", "value", ";"], "ru": ["select", "distinct", "t2.semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "where", "degree_summary_name", "=", "value", "intersect", "select", "distinct", "t2.semester_id", "from", "degree_programs", "as", "t1", "join", "student_enrolment", "as", "t2", "on", "t1.degree_program_id", "=", "t2.degree_program_id", "where", "degree_summary_name", "=", "value", ";"]}}, {"id": "D_0578", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT current_address_id) FROM Students;", "ru": "SELECT count(DISTINCT current_address_id) FROM Students;"}, "question": {"en": "How many different addresses do the students currently live?", "ru": "По скольким адресам сейчас проживают студенты?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 33, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 33, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "different", "addresses", "do", "the", "students", "currently", "live", "?"], "ru": ["По", "скольким", "адресам", "сейчас", "проживают", "студенты", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "current_address_id", ")", "from", "students", ";"], "ru": ["select", "count", "(", "distinct", "current_address_id", ")", "from", "students", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "current_address_id", ")", "from", "students", ";"], "ru": ["select", "count", "(", "distinct", "current_address_id", ")", "from", "students", ";"]}}, {"id": "D_0579", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT current_address_id) FROM Students;", "ru": "SELECT count(DISTINCT current_address_id) FROM Students;"}, "question": {"en": "What are the different addresses that have students living there?", "ru": "По каким адресам живут студенты?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 33, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 33, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "different", "addresses", "that", "have", "students", "living", "there", "?"], "ru": ["По", "каким", "адресам", "живут", "студенты", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "current_address_id", ")", "from", "students", ";"], "ru": ["select", "count", "(", "distinct", "current_address_id", ")", "from", "students", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "current_address_id", ")", "from", "students", ";"], "ru": ["select", "count", "(", "distinct", "current_address_id", ")", "from", "students", ";"]}}, {"id": "D_0580", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC;", "ru": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC;"}, "question": {"en": "List all the student details in reversed lexicographical order.", "ru": "Перечислите все сведения о студентах в обратном лексикографическом порядке."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 43, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 43, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "all", "the", "student", "details", "in", "reversed", "lexicographical", "order", "."], "ru": ["Перечислите", "все", "сведения", "о", "студентах", "в", "обратном", "лексикографическом", "порядке", "."]}, "query_toks": {"en": ["select", "other_student_details", "from", "students", "order", "by", "other_student_details", "desc", ";"], "ru": ["select", "other_student_details", "from", "students", "order", "by", "other_student_details", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "other_student_details", "from", "students", "order", "by", "other_student_details", "desc", ";"], "ru": ["select", "other_student_details", "from", "students", "order", "by", "other_student_details", "desc", ";"]}}, {"id": "D_0581", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC;", "ru": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC;"}, "question": {"en": "What other details can you tell me about students in reverse alphabetical order?", "ru": "Какие еще подробности о студентах вы можете рассказать в обратном алфавитном порядке?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 43, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 43, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "other", "details", "can", "you", "tell", "me", "about", "students", "in", "reverse", "alphabetical", "order", "?"], "ru": ["Какие", "еще", "подробности", "о", "студентах", "вы", "можете", "рассказать", "в", "обратном", "алфавитном", "порядке", "?"]}, "query_toks": {"en": ["select", "other_student_details", "from", "students", "order", "by", "other_student_details", "desc", ";"], "ru": ["select", "other_student_details", "from", "students", "order", "by", "other_student_details", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "other_student_details", "from", "students", "order", "by", "other_student_details", "desc", ";"], "ru": ["select", "other_student_details", "from", "students", "order", "by", "other_student_details", "desc", ";"]}}, {"id": "D_0582", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT section_description FROM Sections WHERE section_name  =  'h';", "ru": "SELECT section_description FROM Sections WHERE section_name  =  'h';"}, "question": {"en": "Describe the section h.", "ru": "Опишите раздел h."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"h\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"h\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Describe", "the", "section", "h", "."], "ru": ["Опишите", "раздел", "h", "."]}, "query_toks": {"en": ["select", "section_description", "from", "sections", "where", "section_name", "=", "\"h\"", ";"], "ru": ["select", "section_description", "from", "sections", "where", "section_name", "=", "\"h\"", ";"]}, "query_toks_no_values": {"en": ["select", "section_description", "from", "sections", "where", "section_name", "=", "value", ";"], "ru": ["select", "section_description", "from", "sections", "where", "section_name", "=", "value", ";"]}}, {"id": "D_0583", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT section_description FROM Sections WHERE section_name  =  'h';", "ru": "SELECT section_description FROM Sections WHERE section_name  =  'h';"}, "question": {"en": "What is the description for the section named h?", "ru": "Каково описание раздела с названием h?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"h\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"h\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "description", "for", "the", "section", "named", "h", "?"], "ru": ["Каково", "описание", "раздела", "с", "названием", "h", "?"]}, "query_toks": {"en": ["select", "section_description", "from", "sections", "where", "section_name", "=", "\"h\"", ";"], "ru": ["select", "section_description", "from", "sections", "where", "section_name", "=", "\"h\"", ";"]}, "query_toks_no_values": {"en": ["select", "section_description", "from", "sections", "where", "section_name", "=", "value", ";"], "ru": ["select", "section_description", "from", "sections", "where", "section_name", "=", "value", ";"]}}, {"id": "D_0584", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582';", "ru": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'Куба' or t1.cell_mobile_number  =  '(605)919-3594x3661';"}, "question": {"en": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .", "ru": "Найдите имена студентов, которые постоянно проживают в стране Куба, или у которых есть номер мобильного телефона (605)919-3594x3661."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 34, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"haiti\"", null], "or", [false, 2, [0, [0, 38, false], null], "\"09700166582\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 34, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Куба\"", null], "or", [false, 2, [0, [0, 38, false], null], "\"(605)919-3594x3661\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "first", "name", "of", "the", "students", "who", "permanently", "live", "in", "the", "country", "Haiti", "or", "have", "the", "cell", "phone", "number", "09700166582", "."], "ru": ["Найдите", "имена", "студентов", ",", "которые", "постоянно", "проживают", "в", "стране", "Куба", ",", "или", "у", "которых", "есть", "номер", "мобильного", "телефона", "(", "605", ")", "919-3594x3661", "."]}, "query_toks": {"en": ["select", "t1.first_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.permanent_address_id", "=", "t2.address_id", "where", "t2.country", "=", "\"haiti\"", "or", "t1.cell_mobile_number", "=", "\"09700166582\"", ";"], "ru": ["select", "t1.first_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.permanent_address_id", "=", "t2.address_id", "where", "t2.country", "=", "\"Куба\"", "or", "t1.cell_mobile_number", "=", "\"(605)919-3594x3661\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.first_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.permanent_address_id", "=", "t2.address_id", "where", "t2.country", "=", "value", "or", "t1.cell_mobile_number", "=", "value", ";"], "ru": ["select", "t1.first_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.permanent_address_id", "=", "t2.address_id", "where", "t2.country", "=", "value", "or", "t1.cell_mobile_number", "=", "value", ";"]}}, {"id": "D_0585", "db_id": "student_transcripts_tracking", "source": "spider-dev", "type": "dev", "query": {"en": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582';", "ru": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'Куба' or t1.cell_mobile_number  =  '(605)919-3594x3661';"}, "question": {"en": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?", "ru": "Как зовут студентов, которые постоянно живут на Кубе или имеют номер мобильного телефона (605)919-3594x3661?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 34, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"haiti\"", null], "or", [false, 2, [0, [0, 38, false], null], "\"09700166582\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 34, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Куба\"", null], "or", [false, 2, [0, [0, 38, false], null], "\"(605)919-3594x3661\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "first", "names", "of", "the", "students", "who", "live", "in", "Haiti", "permanently", "or", "have", "the", "cell", "phone", "number", "09700166582", "?"], "ru": ["Как", "зовут", "студентов", ",", "которые", "постоянно", "живут", "на", "Кубе", "или", "имеют", "номер", "мобильного", "телефона", "(", "605", ")", "919-3594x3661", "?"]}, "query_toks": {"en": ["select", "t1.first_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.permanent_address_id", "=", "t2.address_id", "where", "t2.country", "=", "\"haiti\"", "or", "t1.cell_mobile_number", "=", "\"09700166582\"", ";"], "ru": ["select", "t1.first_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.permanent_address_id", "=", "t2.address_id", "where", "t2.country", "=", "\"Куба\"", "or", "t1.cell_mobile_number", "=", "\"(605)919-3594x3661\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.first_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.permanent_address_id", "=", "t2.address_id", "where", "t2.country", "=", "value", "or", "t1.cell_mobile_number", "=", "value", ";"], "ru": ["select", "t1.first_name", "from", "students", "as", "t1", "join", "addresses", "as", "t2", "on", "t1.permanent_address_id", "=", "t2.address_id", "where", "t2.country", "=", "value", "or", "t1.cell_mobile_number", "=", "value", ";"]}}, {"id": "D_0586", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Title FROM Cartoon ORDER BY title;", "ru": "SELECT Title FROM Cartoon ORDER BY title;"}, "question": {"en": "List the title of all cartoons in alphabetical order.", "ru": "Перечислите названия всех мультфильмов в алфавитном порядке."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 20, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 20, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "title", "of", "all", "cartoons", "in", "alphabetical", "order", "."], "ru": ["Перечислите", "названия", "всех", "мультфильмов", "в", "алфавитном", "порядке", "."]}, "query_toks": {"en": ["select", "title", "from", "cartoon", "order", "by", "title", ";"], "ru": ["select", "title", "from", "cartoon", "order", "by", "title", ";"]}, "query_toks_no_values": {"en": ["select", "title", "from", "cartoon", "order", "by", "title", ";"], "ru": ["select", "title", "from", "cartoon", "order", "by", "title", ";"]}}, {"id": "D_0587", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Title FROM Cartoon ORDER BY title;", "ru": "SELECT Title FROM Cartoon ORDER BY title;"}, "question": {"en": "What are the titles of the cartoons sorted alphabetically?", "ru": "Какие есть названия мультфильмов, отсортированные по алфавиту?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 20, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 20, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "titles", "of", "the", "cartoons", "sorted", "alphabetically", "?"], "ru": ["Какие", "есть", "названия", "мультфильмов", ",", "отсортированные", "по", "алфавиту", "?"]}, "query_toks": {"en": ["select", "title", "from", "cartoon", "order", "by", "title", ";"], "ru": ["select", "title", "from", "cartoon", "order", "by", "title", ";"]}, "query_toks_no_values": {"en": ["select", "title", "from", "cartoon", "order", "by", "title", ";"], "ru": ["select", "title", "from", "cartoon", "order", "by", "title", ";"]}}, {"id": "D_0588", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "ru": "SELECT Title FROM Cartoon WHERE Directed_by = \"Денис Устинов\";"}, "question": {"en": "List all cartoon directed by \"Ben Jones\".", "ru": "Список всех мультфильмов режиссера «Денис Устинов»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Денис Устинов\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "all", "cartoon", "directed", "by", "``", "Ben", "Jones", "''", "."], "ru": ["Список", "всех", "мультфильмов", "режиссера", "«", "Денис", "Устинов", "»", "."]}, "query_toks": {"en": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "\"Ben Jones\"", ";"], "ru": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "\"Денис Устинов\"", ";"]}, "query_toks_no_values": {"en": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "value", ";"], "ru": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "value", ";"]}}, {"id": "D_0589", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "ru": "SELECT Title FROM Cartoon WHERE Directed_by = \"Денис Устинов\";"}, "question": {"en": "What are the names of all cartoons directed by Ben Jones?", "ru": "Как называются все мультфильмы Дениса Устинова?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Денис Устинов\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "all", "cartoons", "directed", "by", "Ben", "Jones", "?"], "ru": ["Как", "называются", "все", "мультфильмы", "Дениса", "Устинова", "?"]}, "query_toks": {"en": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "\"Ben Jones\"", ";"], "ru": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "\"Денис Устинов\"", ";"]}, "query_toks_no_values": {"en": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "value", ";"], "ru": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "value", ";"]}}, {"id": "D_0590", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "ru": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Тимур Вадимов\";"}, "question": {"en": "How many cartoons were written by \"Joseph Kuhr\"?", "ru": "Сколько мультфильмов создал «Тимур Вадимов»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Joseph Kuhr\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Тимур Вадимов\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "cartoons", "were", "written", "by", "``", "Joseph", "Kuhr", "''", "?"], "ru": ["Сколько", "мультфильмов", "создал", "«", "Тимур", "Вадимов", "»", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "cartoon", "where", "written_by", "=", "\"Joseph Kuhr\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cartoon", "where", "written_by", "=", "\"Тимур Вадимов\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "cartoon", "where", "written_by", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cartoon", "where", "written_by", "=", "value", ";"]}}, {"id": "D_0591", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "ru": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Тимур Вадимов\";"}, "question": {"en": "What is the number of cartoones written by Joseph Kuhr?", "ru": "Сколько мультфильмов написал Тимур Вадимов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Joseph Kuhr\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Тимур Вадимов\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "number", "of", "cartoones", "written", "by", "Joseph", "Kuhr", "?"], "ru": ["Сколько", "мультфильмов", "написал", "Тимур", "Вадимов", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "cartoon", "where", "written_by", "=", "\"Joseph Kuhr\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cartoon", "where", "written_by", "=", "\"Тимур Вадимов\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "cartoon", "where", "written_by", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "cartoon", "where", "written_by", "=", "value", ";"]}}, {"id": "D_0592", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date;", "ru": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date;"}, "question": {"en": "list all cartoon titles and their directors ordered by their air date", "ru": "перечислить все названия мультфильмов и их режиссеров по дате выхода в эфир"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 23, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 23, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["list", "all", "cartoon", "titles", "and", "their", "directors", "ordered", "by", "their", "air", "date"], "ru": ["перечислить", "все", "названия", "мультфильмов", "и", "их", "режиссеров", "по", "дате", "выхода", "в", "эфир"]}, "query_toks": {"en": ["select", "title", ",", "directed_by", "from", "cartoon", "order", "by", "original_air_date", ";"], "ru": ["select", "title", ",", "directed_by", "from", "cartoon", "order", "by", "original_air_date", ";"]}, "query_toks_no_values": {"en": ["select", "title", ",", "directed_by", "from", "cartoon", "order", "by", "original_air_date", ";"], "ru": ["select", "title", ",", "directed_by", "from", "cartoon", "order", "by", "original_air_date", ";"]}}, {"id": "D_0593", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date;", "ru": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date;"}, "question": {"en": "What is the name and directors of all the cartoons that are ordered by air date?", "ru": "Названия и режиссеры всех мультфильмов, сортированных по дате выхода в эфир"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 23, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]], [0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 23, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "and", "directors", "of", "all", "the", "cartoons", "that", "are", "ordered", "by", "air", "date", "?"], "ru": ["Названия", "и", "режиссеры", "всех", "мультфильмов", ",", "сортированных", "по", "дате", "выхода", "в", "эфир"]}, "query_toks": {"en": ["select", "title", ",", "directed_by", "from", "cartoon", "order", "by", "original_air_date", ";"], "ru": ["select", "title", ",", "directed_by", "from", "cartoon", "order", "by", "original_air_date", ";"]}, "query_toks_no_values": {"en": ["select", "title", ",", "directed_by", "from", "cartoon", "order", "by", "original_air_date", ";"], "ru": ["select", "title", ",", "directed_by", "from", "cartoon", "order", "by", "original_air_date", ";"]}}, {"id": "D_0594", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "ru": "SELECT Title FROM Cartoon WHERE Directed_by = \"Денис Устинов\" OR Directed_by = \"Богдан Чуприков\";"}, "question": {"en": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".", "ru": "Перечислите названия всех мультфильмов, поставленных «Денисом Устиновым» или «Богданом Чуприковым»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"Brandon Vietti\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Денис Устинов\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"Богдан Чуприков\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "title", "of", "all", "cartoon", "directed", "by", "``", "Ben", "Jones", "''", "or", "``", "Brandon", "Vietti", "''", "."], "ru": ["Перечислите", "названия", "всех", "мультфильмов", ",", "поставленных", "«", "Денисом", "Устиновым", "»", "или", "«", "Богданом", "Чуприковым", "»", "."]}, "query_toks": {"en": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "\"Ben Jones\"", "or", "directed_by", "=", "\"Brandon Vietti\"", ";"], "ru": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "\"Денис Устинов\"", "or", "directed_by", "=", "\"Богдан Чуприков\"", ";"]}, "query_toks_no_values": {"en": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "value", "or", "directed_by", "=", "value", ";"], "ru": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "value", "or", "directed_by", "=", "value", ";"]}}, {"id": "D_0595", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "ru": "SELECT Title FROM Cartoon WHERE Directed_by = \"Денис Устинов\" OR Directed_by = \"Богдан Чуприков\";"}, "question": {"en": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?", "ru": "Как называются все мультфильмы Дениса Устинова или Богдана Чуприкова?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"Brandon Vietti\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Денис Устинов\"", null], "or", [false, 2, [0, [0, 21, false], null], "\"Богдан Чуприков\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "titles", "of", "all", "cartoons", "directed", "by", "Ben", "Jones", "or", "Brandon", "Vietti", "?"], "ru": ["Как", "называются", "все", "мультфильмы", "Дениса", "Устинова", "или", "Богдана", "Чуприкова", "?"]}, "query_toks": {"en": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "\"Ben Jones\"", "or", "directed_by", "=", "\"Brandon Vietti\"", ";"], "ru": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "\"Денис Устинов\"", "or", "directed_by", "=", "\"Богдан Чуприков\"", ";"]}, "query_toks_no_values": {"en": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "value", "or", "directed_by", "=", "value", ";"], "ru": ["select", "title", "from", "cartoon", "where", "directed_by", "=", "value", "or", "directed_by", "=", "value", ";"]}}, {"id": "D_0596", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which country has the most of TV Channels? List the country and number of TV Channels it has.", "ru": "В какой стране больше всего телеканалов? Укажите страну и количество имеющихся в ней телеканалов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "country", "has", "the", "most", "of", "TV", "Channels", "?", "List", "the", "country", "and", "number", "of", "TV", "Channels", "it", "has", "."], "ru": ["В", "какой", "стране", "больше", "всего", "телеканалов", "?", "Укажите", "страну", "и", "количество", "имеющихся", "в", "ней", "телеканалов", "."]}, "query_toks": {"en": ["select", "country", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "country", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "country", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "country", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0597", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the country with the most number of TV Channels and how many does it have?", "ru": "В какой стране больше всего телеканалов и сколько их?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "country", "with", "the", "most", "number", "of", "TV", "Channels", "and", "how", "many", "does", "it", "have", "?"], "ru": ["В", "какой", "стране", "больше", "всего", "телеканалов", "и", "сколько", "их", "?"]}, "query_toks": {"en": ["select", "country", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "country", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "country", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "country", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0598", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "ru": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;"}, "question": {"en": "List the number of different series names and contents in the TV Channel table.", "ru": "Укажите количество названий и содержания различных сериалов в таблице телеканалов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 2, true], null]], [3, [0, [0, 5, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 2, true], null]], [3, [0, [0, 5, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "number", "of", "different", "series", "names", "and", "contents", "in", "the", "TV", "Channel", "table", "."], "ru": ["Укажите", "количество", "названий", "и", "содержания", "различных", "сериалов", "в", "таблице", "телеканалов", "."]}, "query_toks": {"en": ["select", "count", "(", "distinct", "series_name", ")", ",", "count", "(", "distinct", "content", ")", "from", "tv_channel", ";"], "ru": ["select", "count", "(", "distinct", "series_name", ")", ",", "count", "(", "distinct", "content", ")", "from", "tv_channel", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "series_name", ")", ",", "count", "(", "distinct", "content", ")", "from", "tv_channel", ";"], "ru": ["select", "count", "(", "distinct", "series_name", ")", ",", "count", "(", "distinct", "content", ")", "from", "tv_channel", ";"]}}, {"id": "D_0599", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "ru": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;"}, "question": {"en": "How many different series and contents are listed in the TV Channel table?", "ru": "Сколько различных сериалов и содержаний указано в таблице телеканалов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 2, true], null]], [3, [0, [0, 5, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 2, true], null]], [3, [0, [0, 5, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "different", "series", "and", "contents", "are", "listed", "in", "the", "TV", "Channel", "table", "?"], "ru": ["Сколько", "различных", "сериалов", "и", "содержаний", "указано", "в", "таблице", "телеканалов", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "series_name", ")", ",", "count", "(", "distinct", "content", ")", "from", "tv_channel", ";"], "ru": ["select", "count", "(", "distinct", "series_name", ")", ",", "count", "(", "distinct", "content", ")", "from", "tv_channel", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "series_name", ")", ",", "count", "(", "distinct", "content", ")", "from", "tv_channel", ";"], "ru": ["select", "count", "(", "distinct", "series_name", ")", ",", "count", "(", "distinct", "content", ")", "from", "tv_channel", ";"]}}, {"id": "D_0600", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "ru": "SELECT Content FROM TV_Channel WHERE series_name = \"Пятница\";"}, "question": {"en": "What is the content of TV Channel with serial name \"Sky Radio\"?", "ru": "Что представляет собой сериал с названием “Пятница\"?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Пятница\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "content", "of", "TV", "Channel", "with", "serial", "name", "``", "Sky", "Radio", "''", "?"], "ru": ["Что", "представляет", "собой", "сериал", "с", "названием", "“", "Пятница", "''", "?"]}, "query_toks": {"en": ["select", "content", "from", "tv_channel", "where", "series_name", "=", "\"Sky Radio\"", ";"], "ru": ["select", "content", "from", "tv_channel", "where", "series_name", "=", "\"Пятница\"", ";"]}, "query_toks_no_values": {"en": ["select", "content", "from", "tv_channel", "where", "series_name", "=", "value", ";"], "ru": ["select", "content", "from", "tv_channel", "where", "series_name", "=", "value", ";"]}}, {"id": "D_0601", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "ru": "SELECT Content FROM TV_Channel WHERE series_name = \"Пятница\";"}, "question": {"en": "What is the content of the series Sky Radio?", "ru": "Каково содержание сериала Пятница?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Пятница\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "content", "of", "the", "series", "Sky", "Radio", "?"], "ru": ["Каково", "содержание", "сериала", "Пятница", "?"]}, "query_toks": {"en": ["select", "content", "from", "tv_channel", "where", "series_name", "=", "\"Sky Radio\"", ";"], "ru": ["select", "content", "from", "tv_channel", "where", "series_name", "=", "\"Пятница\"", ";"]}, "query_toks_no_values": {"en": ["select", "content", "from", "tv_channel", "where", "series_name", "=", "value", ";"], "ru": ["select", "content", "from", "tv_channel", "where", "series_name", "=", "value", ";"]}}, {"id": "D_0602", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "ru": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Пятница\";"}, "question": {"en": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?", "ru": "Что такое пакетный вариант сериала под названием “Пятница”?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Пятница\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "Package", "Option", "of", "TV", "Channel", "with", "serial", "name", "``", "Sky", "Radio", "''", "?"], "ru": ["Что", "такое", "пакетный", "вариант", "сериала", "под", "названием", "“", "Пятница", "”", "?"]}, "query_toks": {"en": ["select", "package_option", "from", "tv_channel", "where", "series_name", "=", "\"Sky Radio\"", ";"], "ru": ["select", "package_option", "from", "tv_channel", "where", "series_name", "=", "\"Пятница\"", ";"]}, "query_toks_no_values": {"en": ["select", "package_option", "from", "tv_channel", "where", "series_name", "=", "value", ";"], "ru": ["select", "package_option", "from", "tv_channel", "where", "series_name", "=", "value", ";"]}}, {"id": "D_0603", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "ru": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Пятница\";"}, "question": {"en": "What are the Package Options of the TV Channels whose series names are Sky Radio?", "ru": "Какие пакеты предложений имеют сериалы, которые называются Пятница?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Пятница\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "Package", "Options", "of", "the", "TV", "Channels", "whose", "series", "names", "are", "Sky", "Radio", "?"], "ru": ["Какие", "пакеты", "предложений", "имеют", "сериалы", ",", "которые", "называются", "Пятница", "?"]}, "query_toks": {"en": ["select", "package_option", "from", "tv_channel", "where", "series_name", "=", "\"Sky Radio\"", ";"], "ru": ["select", "package_option", "from", "tv_channel", "where", "series_name", "=", "\"Пятница\"", ";"]}, "query_toks_no_values": {"en": ["select", "package_option", "from", "tv_channel", "where", "series_name", "=", "value", ";"], "ru": ["select", "package_option", "from", "tv_channel", "where", "series_name", "=", "value", ";"]}}, {"id": "D_0604", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "ru": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"Албанский\";"}, "question": {"en": "How many TV Channel using language English?", "ru": "Сколько телеканалов используют албанский язык?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Албанский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "TV", "Channel", "using", "language", "English", "?"], "ru": ["Сколько", "телеканалов", "используют", "албанский", "язык", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "language", "=", "\"English\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "language", "=", "\"Албанский\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "language", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "language", "=", "value", ";"]}}, {"id": "D_0605", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "ru": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"Албанский\";"}, "question": {"en": "How many TV Channels use the English language?", "ru": "Сколько телеканалов на албанском языке?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Албанский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "TV", "Channels", "use", "the", "English", "language", "?"], "ru": ["Сколько", "телеканалов", "на", "албанском", "языке", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "language", "=", "\"English\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "language", "=", "\"Албанский\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "language", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "language", "=", "value", ";"]}}, {"id": "D_0606", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "ru": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;"}, "question": {"en": "List the language used least number of TV Channel. List language and number of TV Channel.", "ru": "Укажите язык, на котором транслируют наименьшее количество телеканалов. Показать язык и номер телеканала."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "language", "used", "least", "number", "of", "TV", "Channel", ".", "List", "language", "and", "number", "of", "TV", "Channel", "."], "ru": ["Укажите", "язык", ",", "на", "котором", "транслируют", "наименьшее", "количество", "телеканалов", ".", "Показать", "язык", "и", "номер", "телеканала", "."]}, "query_toks": {"en": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"], "ru": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"], "ru": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"]}}, {"id": "D_0607", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "ru": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;"}, "question": {"en": "What are the languages used by the least number of TV Channels and how many channels use it?", "ru": "Какие языки используют наименьшее количество телеканалов и сколько каналов их используют?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "languages", "used", "by", "the", "least", "number", "of", "TV", "Channels", "and", "how", "many", "channels", "use", "it", "?"], "ru": ["Какие", "языки", "используют", "наименьшее", "количество", "телеканалов", "и", "сколько", "каналов", "их", "используют", "?"]}, "query_toks": {"en": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"], "ru": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"], "ru": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"]}}, {"id": "D_0608", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE;", "ru": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE;"}, "question": {"en": "List each language and the number of TV Channels using it.", "ru": "Перечислите каждый язык и количество телеканалов, которые его используют."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "each", "language", "and", "the", "number", "of", "TV", "Channels", "using", "it", "."], "ru": ["Перечислите", "каждый", "язык", "и", "количество", "телеканалов", ",", "которые", "его", "используют", "."]}, "query_toks": {"en": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", ";"], "ru": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", ";"]}, "query_toks_no_values": {"en": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", ";"], "ru": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", ";"]}}, {"id": "D_0609", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE;", "ru": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE;"}, "question": {"en": "For each language, list the number of TV Channels that use it.", "ru": "Для каждого языка укажите количество телеканалов, которые его используют."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["For", "each", "language", ",", "list", "the", "number", "of", "TV", "Channels", "that", "use", "it", "."], "ru": ["Для", "каждого", "языка", "укажите", "количество", "телеканалов", ",", "которые", "его", "используют", "."]}, "query_toks": {"en": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", ";"], "ru": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", ";"]}, "query_toks_no_values": {"en": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", ";"], "ru": ["select", "language", ",", "count", "(", "*", ")", "from", "tv_channel", "group", "by", "language", ";"]}}, {"id": "D_0610", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";", "ru": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"Смешарики\";"}, "question": {"en": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.", "ru": "На каком телеканале идет мультфильм «Смешарики»? Укажите название телеканала."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"The Rise of the Blue Beetle!\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Смешарики\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "TV", "Channel", "that", "shows", "the", "cartoon", "``", "The", "Rise", "of", "the", "Blue", "Beetle", "!", "''", "?", "List", "the", "TV", "Channel", "'s", "series", "name", "."], "ru": ["На", "каком", "телеканале", "идет", "мультфильм", "«", "Смешарики", "»", "?", "Укажите", "название", "телеканала", "."]}, "query_toks": {"en": ["select", "t1.series_name", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.title", "=", "\"The Rise of the Blue Beetle!\"", ";"], "ru": ["select", "t1.series_name", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.title", "=", "\"Смешарики\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.series_name", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.title", "=", "value", ";"], "ru": ["select", "t1.series_name", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.title", "=", "value", ";"]}}, {"id": "D_0611", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";", "ru": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"Смешарики\";"}, "question": {"en": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?", "ru": "Как называется телеканал, на котором показывают мультфильм «Смешарики»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"The Rise of the Blue Beetle!\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Смешарики\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "series", "name", "of", "the", "TV", "Channel", "that", "shows", "the", "cartoon", "``", "The", "Rise", "of", "the", "Blue", "Beetle", "''", "?"], "ru": ["Как", "называется", "телеканал", ",", "на", "котором", "показывают", "мультфильм", "«", "Смешарики", "»", "?"]}, "query_toks": {"en": ["select", "t1.series_name", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.title", "=", "\"The Rise of the Blue Beetle!\"", ";"], "ru": ["select", "t1.series_name", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.title", "=", "\"Смешарики\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.series_name", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.title", "=", "value", ";"], "ru": ["select", "t1.series_name", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.title", "=", "value", ";"]}}, {"id": "D_0612", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "ru": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Пятница\";"}, "question": {"en": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".", "ru": "Перечислить названия всех мультфильмов, показываемых на телеканале где есть сериал “Пятница\"."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Пятница\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "title", "of", "all", "Cartoons", "showed", "on", "TV", "Channel", "with", "series", "name", "``", "Sky", "Radio", "''", "."], "ru": ["Перечислить", "названия", "всех", "мультфильмов", ",", "показываемых", "на", "телеканале", "где", "есть", "сериал", "“", "Пятница", "''", "."]}, "query_toks": {"en": ["select", "t2.title", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t1.series_name", "=", "\"Sky Radio\"", ";"], "ru": ["select", "t2.title", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t1.series_name", "=", "\"Пятница\"", ";"]}, "query_toks_no_values": {"en": ["select", "t2.title", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t1.series_name", "=", "value", ";"], "ru": ["select", "t2.title", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t1.series_name", "=", "value", ";"]}}, {"id": "D_0613", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "ru": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Пятница\";"}, "question": {"en": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?", "ru": "Как называются все мультфильмы, которые идут на телеканале где идет «Пятница»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Пятница\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "title", "of", "all", "the", "cartools", "that", "are", "on", "the", "TV", "Channel", "with", "the", "series", "name", "``", "Sky", "Radio", "''", "?"], "ru": ["Как", "называются", "все", "мультфильмы", ",", "которые", "идут", "на", "телеканале", "где", "идет", "«", "Пятница", "»", "?"]}, "query_toks": {"en": ["select", "t2.title", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t1.series_name", "=", "\"Sky Radio\"", ";"], "ru": ["select", "t2.title", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t1.series_name", "=", "\"Пятница\"", ";"]}, "query_toks_no_values": {"en": ["select", "t2.title", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t1.series_name", "=", "value", ";"], "ru": ["select", "t2.title", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t1.series_name", "=", "value", ";"]}}, {"id": "D_0614", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Episode FROM TV_series ORDER BY rating;", "ru": "SELECT Episode FROM TV_series ORDER BY rating;"}, "question": {"en": "List the Episode of all TV series sorted by rating.", "ru": "Список эпизодов всех сериалов, отсортированных по рейтингу."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "Episode", "of", "all", "TV", "series", "sorted", "by", "rating", "."], "ru": ["Список", "эпизодов", "всех", "сериалов", ",", "отсортированных", "по", "рейтингу", "."]}, "query_toks": {"en": ["select", "episode", "from", "tv_series", "order", "by", "rating", ";"], "ru": ["select", "episode", "from", "tv_series", "order", "by", "rating", ";"]}, "query_toks_no_values": {"en": ["select", "episode", "from", "tv_series", "order", "by", "rating", ";"], "ru": ["select", "episode", "from", "tv_series", "order", "by", "rating", ";"]}}, {"id": "D_0615", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Episode FROM TV_series ORDER BY rating;", "ru": "SELECT Episode FROM TV_series ORDER BY rating;"}, "question": {"en": "What are all of the episodes ordered by ratings?", "ru": "Показать все серии сериала, отсортированные по рейтингу"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "all", "of", "the", "episodes", "ordered", "by", "ratings", "?"], "ru": ["Показать", "все", "серии", "сериала", ",", "отсортированные", "по", "рейтингу"]}, "query_toks": {"en": ["select", "episode", "from", "tv_series", "order", "by", "rating", ";"], "ru": ["select", "episode", "from", "tv_series", "order", "by", "rating", ";"]}, "query_toks_no_values": {"en": ["select", "episode", "from", "tv_series", "order", "by", "rating", ";"], "ru": ["select", "episode", "from", "tv_series", "order", "by", "rating", ";"]}}, {"id": "D_0616", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;", "ru": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;"}, "question": {"en": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.", "ru": "топ-3 сериала с самым высоким рейтингом. Указать серию сериала и рейтинг."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "top", "3", "highest", "Rating", "TV", "series", ".", "List", "the", "TV", "series", "'s", "Episode", "and", "Rating", "."], "ru": ["топ-3", "сериала", "с", "самым", "высоким", "рейтингом", ".", "Указать", "серию", "сериала", "и", "рейтинг", "."]}, "query_toks": {"en": ["select", "episode", ",", "rating", "from", "tv_series", "order", "by", "rating", "desc", "limit", "3", ";"], "ru": ["select", "episode", ",", "rating", "from", "tv_series", "order", "by", "rating", "desc", "limit", "3", ";"]}, "query_toks_no_values": {"en": ["select", "episode", ",", "rating", "from", "tv_series", "order", "by", "rating", "desc", "limit", "3", ";"], "ru": ["select", "episode", ",", "rating", "from", "tv_series", "order", "by", "rating", "desc", "limit", "3", ";"]}}, {"id": "D_0617", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;", "ru": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;"}, "question": {"en": "What are 3 most highly rated episodes in the TV series table and what were those ratings?", "ru": "Какие 3 эпизода в таблице сериалов имеют самые высокие оценки и каковы были эти рейтинги?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "3", "most", "highly", "rated", "episodes", "in", "the", "TV", "series", "table", "and", "what", "were", "those", "ratings", "?"], "ru": ["Какие", "3", "эпизода", "в", "таблице", "сериалов", "имеют", "самые", "высокие", "оценки", "и", "каковы", "были", "эти", "рейтинги", "?"]}, "query_toks": {"en": ["select", "episode", ",", "rating", "from", "tv_series", "order", "by", "rating", "desc", "limit", "3", ";"], "ru": ["select", "episode", ",", "rating", "from", "tv_series", "order", "by", "rating", "desc", "limit", "3", ";"]}, "query_toks_no_values": {"en": ["select", "episode", ",", "rating", "from", "tv_series", "order", "by", "rating", "desc", "limit", "3", ";"], "ru": ["select", "episode", ",", "rating", "from", "tv_series", "order", "by", "rating", "desc", "limit", "3", ";"]}}, {"id": "D_0618", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(SHARE) , min(SHARE) FROM TV_series;", "ru": "SELECT max(SHARE) , min(SHARE) FROM TV_series;"}, "question": {"en": "What is minimum and maximum share of TV series?", "ru": "Какая минимальная и максимальная доля сериалов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "minimum", "and", "maximum", "share", "of", "TV", "series", "?"], "ru": ["Какая", "минимальная", "и", "максимальная", "доля", "сериалов", "?"]}, "query_toks": {"en": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "tv_series", ";"], "ru": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "tv_series", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "tv_series", ";"], "ru": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "tv_series", ";"]}}, {"id": "D_0619", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(SHARE) , min(SHARE) FROM TV_series;", "ru": "SELECT max(SHARE) , min(SHARE) FROM TV_series;"}, "question": {"en": "What is the maximum and minimum share for the TV series?", "ru": "Какая максимальная и минимальная доля сериалов на телеканале?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]], [2, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "maximum", "and", "minimum", "share", "for", "the", "TV", "series", "?"], "ru": ["Какая", "максимальная", "и", "минимальная", "доля", "сериалов", "на", "телеканале", "?"]}, "query_toks": {"en": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "tv_series", ";"], "ru": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "tv_series", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "tv_series", ";"], "ru": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "tv_series", ";"]}}, {"id": "D_0620", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "ru": "SELECT Air_Date FROM TV_series WHERE Episode = \"Любовь всей жизни\";"}, "question": {"en": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?", "ru": "Какая дата выхода сериала с эпизодом «Любовь всей жизни»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Любовь всей жизни\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "air", "date", "of", "TV", "series", "with", "Episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "ru": ["Какая", "дата", "выхода", "сериала", "с", "эпизодом", "«", "Любовь", "всей", "жизни", "»", "?"]}, "query_toks": {"en": ["select", "air_date", "from", "tv_series", "where", "episode", "=", "\"A Love of a Lifetime\"", ";"], "ru": ["select", "air_date", "from", "tv_series", "where", "episode", "=", "\"Любовь всей жизни\"", ";"]}, "query_toks_no_values": {"en": ["select", "air_date", "from", "tv_series", "where", "episode", "=", "value", ";"], "ru": ["select", "air_date", "from", "tv_series", "where", "episode", "=", "value", ";"]}}, {"id": "D_0621", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "ru": "SELECT Air_Date FROM TV_series WHERE Episode = \"Любовь всей жизни\";"}, "question": {"en": "When did the episode \"A Love of a Lifetime\" air?", "ru": "Когда вышел в эфир эпизод \"Любовь всей жизни\"?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Любовь всей жизни\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["When", "did", "the", "episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "air", "?"], "ru": ["Когда", "вышел", "в", "эфир", "эпизод", "``", "Любовь", "всей", "жизни", "''", "?"]}, "query_toks": {"en": ["select", "air_date", "from", "tv_series", "where", "episode", "=", "\"A Love of a Lifetime\"", ";"], "ru": ["select", "air_date", "from", "tv_series", "where", "episode", "=", "\"Любовь всей жизни\"", ";"]}, "query_toks_no_values": {"en": ["select", "air_date", "from", "tv_series", "where", "episode", "=", "value", ";"], "ru": ["select", "air_date", "from", "tv_series", "where", "episode", "=", "value", ";"]}}, {"id": "D_0622", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "ru": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"Любовь всей жизни\";"}, "question": {"en": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?", "ru": "Каков еженедельный рейтинг сериала с эпизодом «Любовь всей жизни»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Любовь всей жизни\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "Weekly", "Rank", "of", "TV", "series", "with", "Episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "ru": ["Каков", "еженедельный", "рейтинг", "сериала", "с", "эпизодом", "«", "Любовь", "всей", "жизни", "»", "?"]}, "query_toks": {"en": ["select", "weekly_rank", "from", "tv_series", "where", "episode", "=", "\"A Love of a Lifetime\"", ";"], "ru": ["select", "weekly_rank", "from", "tv_series", "where", "episode", "=", "\"Любовь всей жизни\"", ";"]}, "query_toks_no_values": {"en": ["select", "weekly_rank", "from", "tv_series", "where", "episode", "=", "value", ";"], "ru": ["select", "weekly_rank", "from", "tv_series", "where", "episode", "=", "value", ";"]}}, {"id": "D_0623", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "ru": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"Любовь всей жизни\";"}, "question": {"en": "What is the weekly rank for the episode \"A Love of a Lifetime\"?", "ru": "Какой еженедельный рейтинг у серии «Любовь всей жизни»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Любовь всей жизни\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "weekly", "rank", "for", "the", "episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "ru": ["Какой", "еженедельный", "рейтинг", "у", "серии", "«", "Любовь", "всей", "жизни", "»", "?"]}, "query_toks": {"en": ["select", "weekly_rank", "from", "tv_series", "where", "episode", "=", "\"A Love of a Lifetime\"", ";"], "ru": ["select", "weekly_rank", "from", "tv_series", "where", "episode", "=", "\"Любовь всей жизни\"", ";"]}, "query_toks_no_values": {"en": ["select", "weekly_rank", "from", "tv_series", "where", "episode", "=", "value", ";"], "ru": ["select", "weekly_rank", "from", "tv_series", "where", "episode", "=", "value", ";"]}}, {"id": "D_0624", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "ru": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"Любовь всей жизни\";"}, "question": {"en": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.", "ru": "На каком телеканале есть сериал с эпизодом «Любовь всей жизни»? Укажите название сериала."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Любовь всей жизни\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "TV", "Channel", "of", "TV", "series", "with", "Episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?", "List", "the", "TV", "Channel", "'s", "series", "name", "."], "ru": ["На", "каком", "телеканале", "есть", "сериал", "с", "эпизодом", "«", "Любовь", "всей", "жизни", "»", "?", "Укажите", "название", "сериала", "."]}, "query_toks": {"en": ["select", "t1.series_name", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.episode", "=", "\"A Love of a Lifetime\"", ";"], "ru": ["select", "t1.series_name", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.episode", "=", "\"Любовь всей жизни\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.series_name", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.episode", "=", "value", ";"], "ru": ["select", "t1.series_name", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.episode", "=", "value", ";"]}}, {"id": "D_0625", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "ru": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"Любовь всей жизни\";"}, "question": {"en": "What is the name of the series that has the episode \"A Love of a Lifetime\"?", "ru": "Как называется сериал, в котором есть серия «Любовь всей жизни»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"A Love of a Lifetime\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Любовь всей жизни\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "series", "that", "has", "the", "episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "ru": ["Как", "называется", "сериал", ",", "в", "котором", "есть", "серия", "«", "Любовь", "всей", "жизни", "»", "?"]}, "query_toks": {"en": ["select", "t1.series_name", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.episode", "=", "\"A Love of a Lifetime\"", ";"], "ru": ["select", "t1.series_name", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.episode", "=", "\"Любовь всей жизни\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.series_name", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.episode", "=", "value", ";"], "ru": ["select", "t1.series_name", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.episode", "=", "value", ";"]}}, {"id": "D_0626", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "ru": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Пятница\";"}, "question": {"en": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".", "ru": "Перечислить серии, показываемых в сериале с названием “Пятница\"."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Пятница\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "Episode", "of", "all", "TV", "series", "showed", "on", "TV", "Channel", "with", "series", "name", "``", "Sky", "Radio", "''", "."], "ru": ["Перечислить", "серии", ",", "показываемых", "в", "сериале", "с", "названием", "“", "Пятница", "''", "."]}, "query_toks": {"en": ["select", "t2.episode", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t1.series_name", "=", "\"Sky Radio\"", ";"], "ru": ["select", "t2.episode", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t1.series_name", "=", "\"Пятница\"", ";"]}, "query_toks_no_values": {"en": ["select", "t2.episode", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t1.series_name", "=", "value", ";"], "ru": ["select", "t2.episode", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t1.series_name", "=", "value", ";"]}}, {"id": "D_0627", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "ru": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Пятница\";"}, "question": {"en": "What is the episode for the TV series named \"Sky Radio\"?", "ru": "Какая есть серия сериала «Пятница»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Sky Radio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 18, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Пятница\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "episode", "for", "the", "TV", "series", "named", "``", "Sky", "Radio", "''", "?"], "ru": ["Какая", "есть", "серия", "сериала", "«", "Пятница", "»", "?"]}, "query_toks": {"en": ["select", "t2.episode", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t1.series_name", "=", "\"Sky Radio\"", ";"], "ru": ["select", "t2.episode", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t1.series_name", "=", "\"Пятница\"", ";"]}, "query_toks_no_values": {"en": ["select", "t2.episode", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t1.series_name", "=", "value", ";"], "ru": ["select", "t2.episode", "from", "tv_channel", "as", "t1", "join", "tv_series", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t1.series_name", "=", "value", ";"]}}, {"id": "D_0628", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by;", "ru": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by;"}, "question": {"en": "Find the number of cartoons directed by each of the listed directors.", "ru": "Найдите количество мультфильмов, поставленных каждым из перечисленных режиссеров."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "cartoons", "directed", "by", "each", "of", "the", "listed", "directors", "."], "ru": ["Найдите", "количество", "мультфильмов", ",", "поставленных", "каждым", "из", "перечисленных", "режиссеров", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "directed_by", "from", "cartoon", "group", "by", "directed_by", ";"], "ru": ["select", "count", "(", "*", ")", ",", "directed_by", "from", "cartoon", "group", "by", "directed_by", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "directed_by", "from", "cartoon", "group", "by", "directed_by", ";"], "ru": ["select", "count", "(", "*", ")", ",", "directed_by", "from", "cartoon", "group", "by", "directed_by", ";"]}}, {"id": "D_0629", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by;", "ru": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by;"}, "question": {"en": "How many cartoons did each director create?", "ru": "Сколько мультфильмов создал каждый режиссер?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "cartoons", "did", "each", "director", "create", "?"], "ru": ["Сколько", "мультфильмов", "создал", "каждый", "режиссер", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "directed_by", "from", "cartoon", "group", "by", "directed_by", ";"], "ru": ["select", "count", "(", "*", ")", ",", "directed_by", "from", "cartoon", "group", "by", "directed_by", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "directed_by", "from", "cartoon", "group", "by", "directed_by", ";"], "ru": ["select", "count", "(", "*", ")", ",", "directed_by", "from", "cartoon", "group", "by", "directed_by", ";"]}}, {"id": "D_0630", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "select production_code ,  channel from cartoon order by original_air_date desc limit 1;", "ru": "select production_code ,  channel from cartoon order by original_air_date desc limit 1;"}, "question": {"en": "Find the production code and channel of the most recently aired cartoon .", "ru": "Найдите производственный код и канал последнего вышедшего в эфир мультфильма."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 23, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 23, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "production", "code", "and", "channel", "of", "the", "most", "recently", "aired", "cartoon", "."], "ru": ["Найдите", "производственный", "код", "и", "канал", "последнего", "вышедшего", "в", "эфир", "мультфильма", "."]}, "query_toks": {"en": ["select", "production_code", ",", "channel", "from", "cartoon", "order", "by", "original_air_date", "desc", "limit", "1", ";"], "ru": ["select", "production_code", ",", "channel", "from", "cartoon", "order", "by", "original_air_date", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "production_code", ",", "channel", "from", "cartoon", "order", "by", "original_air_date", "desc", "limit", "1", ";"], "ru": ["select", "production_code", ",", "channel", "from", "cartoon", "order", "by", "original_air_date", "desc", "limit", "1", ";"]}}, {"id": "D_0631", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "select production_code ,  channel from cartoon order by original_air_date desc limit 1;", "ru": "select production_code ,  channel from cartoon order by original_air_date desc limit 1;"}, "question": {"en": "What is the produdction code and channel of the most recent cartoon ?", "ru": "Какой производственный код и канал у последнего мультфильма?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 23, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 23, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "produdction", "code", "and", "channel", "of", "the", "most", "recent", "cartoon", "?"], "ru": ["Какой", "производственный", "код", "и", "канал", "у", "последнего", "мультфильма", "?"]}, "query_toks": {"en": ["select", "production_code", ",", "channel", "from", "cartoon", "order", "by", "original_air_date", "desc", "limit", "1", ";"], "ru": ["select", "production_code", ",", "channel", "from", "cartoon", "order", "by", "original_air_date", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "production_code", ",", "channel", "from", "cartoon", "order", "by", "original_air_date", "desc", "limit", "1", ";"], "ru": ["select", "production_code", ",", "channel", "from", "cartoon", "order", "by", "original_air_date", "desc", "limit", "1", ";"]}}, {"id": "D_0632", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\";", "ru": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\";"}, "question": {"en": "Find the package choice and series name of the TV channel that has high definition TV.", "ru": "Найти пакет предложений и название сериалов телеканала, на котором есть видео высокой четкости."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "package", "choice", "and", "series", "name", "of", "the", "TV", "channel", "that", "has", "high", "definition", "TV", "."], "ru": ["Найти", "пакет", "предложений", "и", "название", "сериалов", "телеканала", ",", "на", "котором", "есть", "видео", "высокой", "четкости", "."]}, "query_toks": {"en": ["select", "package_option", ",", "series_name", "from", "tv_channel", "where", "hight_definition_tv", "=", "\"yes\"", ";"], "ru": ["select", "package_option", ",", "series_name", "from", "tv_channel", "where", "hight_definition_tv", "=", "\"yes\"", ";"]}, "query_toks_no_values": {"en": ["select", "package_option", ",", "series_name", "from", "tv_channel", "where", "hight_definition_tv", "=", "value", ";"], "ru": ["select", "package_option", ",", "series_name", "from", "tv_channel", "where", "hight_definition_tv", "=", "value", ";"]}}, {"id": "D_0633", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\";", "ru": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\";"}, "question": {"en": "What are the package options and the name of the series for the TV Channel that supports high definition TV?", "ru": "Какие есть варианты пакета и названия сериалов телеканала, поддерживающего видео высокого разрешения?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "package", "options", "and", "the", "name", "of", "the", "series", "for", "the", "TV", "Channel", "that", "supports", "high", "definition", "TV", "?"], "ru": ["Какие", "есть", "варианты", "пакета", "и", "названия", "сериалов", "телеканала", ",", "поддерживающего", "видео", "высокого", "разрешения", "?"]}, "query_toks": {"en": ["select", "package_option", ",", "series_name", "from", "tv_channel", "where", "hight_definition_tv", "=", "\"yes\"", ";"], "ru": ["select", "package_option", ",", "series_name", "from", "tv_channel", "where", "hight_definition_tv", "=", "\"yes\"", ";"]}, "query_toks_no_values": {"en": ["select", "package_option", ",", "series_name", "from", "tv_channel", "where", "hight_definition_tv", "=", "value", ";"], "ru": ["select", "package_option", ",", "series_name", "from", "tv_channel", "where", "hight_definition_tv", "=", "value", ";"]}}, {"id": "D_0634", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey';", "ru": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Ридли Скотт';"}, "question": {"en": "which countries' tv channels are playing some cartoon written by Todd Casey?", "ru": "На телеканалах каких стран транслируется какой-нибудь мультфильм Ридли Скотта?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Todd Casey\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Ридли Скотт\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["which", "countries", "'", "tv", "channels", "are", "playing", "some", "cartoon", "written", "by", "Todd", "Casey", "?"], "ru": ["На", "телеканалах", "каких", "стран", "транслируется", "какой-нибудь", "мультфильм", "Ридли", "Скотта", "?"]}, "query_toks": {"en": ["select", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.written_by", "=", "\"Todd Casey\"", ";"], "ru": ["select", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.written_by", "=", "\"Ридли Скотт\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.written_by", "=", "value", ";"], "ru": ["select", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.written_by", "=", "value", ";"]}}, {"id": "D_0635", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey';", "ru": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Ридли Скотт';"}, "question": {"en": "What are the countries that have cartoons on TV that were written by Todd Casey?", "ru": "В каких странах показывают мультфильмы, написанные Ридли Скоттом?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Todd Casey\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Ридли Скотт\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "countries", "that", "have", "cartoons", "on", "TV", "that", "were", "written", "by", "Todd", "Casey", "?"], "ru": ["В", "каких", "странах", "показывают", "мультфильмы", ",", "написанные", "Ридли", "Скоттом", "?"]}, "query_toks": {"en": ["select", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.written_by", "=", "\"Todd Casey\"", ";"], "ru": ["select", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.written_by", "=", "\"Ридли Скотт\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.written_by", "=", "value", ";"], "ru": ["select", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.written_by", "=", "value", ";"]}}, {"id": "D_0636", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey';", "ru": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Ридли Скотт';"}, "question": {"en": "which countries' tv channels are not playing any cartoon written by Todd Casey?", "ru": "телеканалы каких стран не показывают мультфильмы, написанные Ридли Скоттом?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Todd Casey\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Ридли Скотт\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["which", "countries", "'", "tv", "channels", "are", "not", "playing", "any", "cartoon", "written", "by", "Todd", "Casey", "?"], "ru": ["телеканалы", "каких", "стран", "не", "показывают", "мультфильмы", ",", "написанные", "Ридли", "Скоттом", "?"]}, "query_toks": {"en": ["select", "country", "from", "tv_channel", "except", "select", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.written_by", "=", "\"Todd Casey\"", ";"], "ru": ["select", "country", "from", "tv_channel", "except", "select", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.written_by", "=", "\"Ридли Скотт\"", ";"]}, "query_toks_no_values": {"en": ["select", "country", "from", "tv_channel", "except", "select", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.written_by", "=", "value", ";"], "ru": ["select", "country", "from", "tv_channel", "except", "select", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.written_by", "=", "value", ";"]}}, {"id": "D_0637", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey';", "ru": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Ридли Скотт';"}, "question": {"en": "What are the countries that are not playing cartoons written by Todd Casey?", "ru": "В каких странах не показывают мультфильмы Ридли Скотта?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Todd Casey\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"Ридли Скотт\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["What", "are", "the", "countries", "that", "are", "not", "playing", "cartoons", "written", "by", "Todd", "Casey", "?"], "ru": ["В", "каких", "странах", "не", "показывают", "мультфильмы", "Ридли", "Скотта", "?"]}, "query_toks": {"en": ["select", "country", "from", "tv_channel", "except", "select", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.written_by", "=", "\"Todd Casey\"", ";"], "ru": ["select", "country", "from", "tv_channel", "except", "select", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.written_by", "=", "\"Ридли Скотт\"", ";"]}, "query_toks_no_values": {"en": ["select", "country", "from", "tv_channel", "except", "select", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.written_by", "=", "value", ";"], "ru": ["select", "country", "from", "tv_channel", "except", "select", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.written_by", "=", "value", ";"]}}, {"id": "D_0638", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones';", "ru": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Николай Лебедев' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Федор Бондарчук';"}, "question": {"en": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?", "ru": "Найдите программу и страну телеканала, на котором транслируются мультфильмы Федора Бондарчука и Николая Лебедева"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Michael Chang\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Николай Лебедев\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Федор Бондарчук\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "series", "name", "and", "country", "of", "the", "tv", "channel", "that", "is", "playing", "some", "cartoons", "directed", "by", "Ben", "Jones", "and", "Michael", "Chang", "?"], "ru": ["Найдите", "программу", "и", "страну", "телеканала", ",", "на", "котором", "транслируются", "мультфильмы", "Федора", "Бондарчука", "и", "Николая", "Лебедева"]}, "query_toks": {"en": ["select", "t1.series_name", ",", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.directed_by", "=", "\"Michael Chang\"", "intersect", "select", "t1.series_name", ",", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.directed_by", "=", "\"Ben Jones\"", ";"], "ru": ["select", "t1.series_name", ",", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.directed_by", "=", "\"Николай Лебедев\"", "intersect", "select", "t1.series_name", ",", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.directed_by", "=", "\"Федор Бондарчук\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.series_name", ",", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.directed_by", "=", "value", "intersect", "select", "t1.series_name", ",", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.directed_by", "=", "value", ";"], "ru": ["select", "t1.series_name", ",", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.directed_by", "=", "value", "intersect", "select", "t1.series_name", ",", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.directed_by", "=", "value", ";"]}}, {"id": "D_0639", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones';", "ru": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Николай Лебедев' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Федор Бондарчук';"}, "question": {"en": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?", "ru": "Какая программа и страна у всех телеканалов, которые показывают мультфильмы Федора Бондарчука и Николая Лебедева?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Michael Chang\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Николай Лебедев\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Федор Бондарчук\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "series", "name", "and", "country", "of", "all", "TV", "channels", "that", "are", "playing", "cartoons", "directed", "by", "Ben", "Jones", "and", "cartoons", "directed", "by", "Michael", "Chang", "?"], "ru": ["Какая", "программа", "и", "страна", "у", "всех", "телеканалов", ",", "которые", "показывают", "мультфильмы", "Федора", "Бондарчука", "и", "Николая", "Лебедева", "?"]}, "query_toks": {"en": ["select", "t1.series_name", ",", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.directed_by", "=", "\"Michael Chang\"", "intersect", "select", "t1.series_name", ",", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.directed_by", "=", "\"Ben Jones\"", ";"], "ru": ["select", "t1.series_name", ",", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.directed_by", "=", "\"Николай Лебедев\"", "intersect", "select", "t1.series_name", ",", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.directed_by", "=", "\"Федор Бондарчук\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.series_name", ",", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.directed_by", "=", "value", "intersect", "select", "t1.series_name", ",", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.directed_by", "=", "value", ";"], "ru": ["select", "t1.series_name", ",", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.directed_by", "=", "value", "intersect", "select", "t1.series_name", ",", "t1.country", "from", "tv_channel", "as", "t1", "join", "cartoon", "as", "t2", "on", "t1.id", "=", "t2.channel", "where", "t2.directed_by", "=", "value", ";"]}}, {"id": "D_0640", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English';", "ru": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'Албанский';"}, "question": {"en": "find the pixel aspect ratio and nation of the tv channels that do not use English.", "ru": "Найдите соотношение сторон пикселей и страну телеканалов, которые не используют албанский язык."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"Албанский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["find", "the", "pixel", "aspect", "ratio", "and", "nation", "of", "the", "tv", "channels", "that", "do", "not", "use", "English", "."], "ru": ["Найдите", "соотношение", "сторон", "пикселей", "и", "страну", "телеканалов", ",", "которые", "не", "используют", "албанский", "язык", "."]}, "query_toks": {"en": ["select", "pixel_aspect_ratio_par", ",", "country", "from", "tv_channel", "where", "language", "!=", "\"English\"", ";"], "ru": ["select", "pixel_aspect_ratio_par", ",", "country", "from", "tv_channel", "where", "language", "!=", "\"Албанский\"", ";"]}, "query_toks_no_values": {"en": ["select", "pixel_aspect_ratio_par", ",", "country", "from", "tv_channel", "where", "language", "!=", "value", ";"], "ru": ["select", "pixel_aspect_ratio_par", ",", "country", "from", "tv_channel", "where", "language", "!=", "value", ";"]}}, {"id": "D_0641", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English';", "ru": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'Албанский';"}, "question": {"en": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?", "ru": "Какое соотношение сторон пикселей и страна происхождения у всех телеканалов, не использующих албанский язык?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"Албанский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "pixel", "aspect", "ratio", "and", "country", "of", "origin", "for", "all", "TV", "channels", "that", "do", "not", "use", "English", "?"], "ru": ["Какое", "соотношение", "сторон", "пикселей", "и", "страна", "происхождения", "у", "всех", "телеканалов", ",", "не", "использующих", "албанский", "язык", "?"]}, "query_toks": {"en": ["select", "pixel_aspect_ratio_par", ",", "country", "from", "tv_channel", "where", "language", "!=", "\"English\"", ";"], "ru": ["select", "pixel_aspect_ratio_par", ",", "country", "from", "tv_channel", "where", "language", "!=", "\"Албанский\"", ";"]}, "query_toks_no_values": {"en": ["select", "pixel_aspect_ratio_par", ",", "country", "from", "tv_channel", "where", "language", "!=", "value", ";"], "ru": ["select", "pixel_aspect_ratio_par", ",", "country", "from", "tv_channel", "where", "language", "!=", "value", ";"]}}, {"id": "D_0642", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2;", "ru": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2;"}, "question": {"en": "find id of the tv channels that from the countries where have more than two tv channels.", "ru": "найти id телеканалов из стран, где есть более двух телеканалов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["find", "id", "of", "the", "tv", "channels", "that", "from", "the", "countries", "where", "have", "more", "than", "two", "tv", "channels", "."], "ru": ["найти", "id", "телеканалов", "из", "стран", ",", "где", "есть", "более", "двух", "телеканалов", "."]}, "query_toks": {"en": ["select", "id", "from", "tv_channel", "group", "by", "country", "having", "count", "(", "*", ")", ">", "2", ";"], "ru": ["select", "id", "from", "tv_channel", "group", "by", "country", "having", "count", "(", "*", ")", ">", "2", ";"]}, "query_toks_no_values": {"en": ["select", "id", "from", "tv_channel", "group", "by", "country", "having", "count", "(", "*", ")", ">", "2", ";"], "ru": ["select", "id", "from", "tv_channel", "group", "by", "country", "having", "count", "(", "*", ")", ">", "2", ";"]}}, {"id": "D_0643", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2;", "ru": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2;"}, "question": {"en": "What are the ids of all tv channels that have more than 2 TV channels?", "ru": "Какие id у всех телеканалов, на которых больше 2 программ?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "ids", "of", "all", "tv", "channels", "that", "have", "more", "than", "2", "TV", "channels", "?"], "ru": ["Какие", "id", "у", "всех", "телеканалов", ",", "на", "которых", "больше", "2", "программ", "?"]}, "query_toks": {"en": ["select", "id", "from", "tv_channel", "group", "by", "country", "having", "count", "(", "*", ")", ">", "2", ";"], "ru": ["select", "id", "from", "tv_channel", "group", "by", "country", "having", "count", "(", "*", ")", ">", "2", ";"]}, "query_toks_no_values": {"en": ["select", "id", "from", "tv_channel", "group", "by", "country", "having", "count", "(", "*", ")", ">", "2", ";"], "ru": ["select", "id", "from", "tv_channel", "group", "by", "country", "having", "count", "(", "*", ")", ">", "2", ";"]}}, {"id": "D_0644", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones';", "ru": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Федор Бондарчук';"}, "question": {"en": "find the id of tv channels that do not play any cartoon directed by Ben Jones.", "ru": "найти id телеканалов, на которых не воспроизводятся мультфильмы Федора Бондарчука."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Федор Бондарчук\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["find", "the", "id", "of", "tv", "channels", "that", "do", "not", "play", "any", "cartoon", "directed", "by", "Ben", "Jones", "."], "ru": ["найти", "id", "телеканалов", ",", "на", "которых", "не", "воспроизводятся", "мультфильмы", "Федора", "Бондарчука", "."]}, "query_toks": {"en": ["select", "id", "from", "tv_channel", "except", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "\"Ben Jones\"", ";"], "ru": ["select", "id", "from", "tv_channel", "except", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "\"Федор Бондарчук\"", ";"]}, "query_toks_no_values": {"en": ["select", "id", "from", "tv_channel", "except", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "value", ";"], "ru": ["select", "id", "from", "tv_channel", "except", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "value", ";"]}}, {"id": "D_0645", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones';", "ru": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Федор Бондарчук';"}, "question": {"en": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?", "ru": "Какие id телеканалов, на которых нет мультфильмов Федора Бондарчука?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Федор Бондарчук\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["What", "are", "the", "ids", "of", "the", "TV", "channels", "that", "do", "not", "have", "any", "cartoons", "directed", "by", "Ben", "Jones", "?"], "ru": ["Какие", "id", "телеканалов", ",", "на", "которых", "нет", "мультфильмов", "Федора", "Бондарчука", "?"]}, "query_toks": {"en": ["select", "id", "from", "tv_channel", "except", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "\"Ben Jones\"", ";"], "ru": ["select", "id", "from", "tv_channel", "except", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "\"Федор Бондарчук\"", ";"]}, "query_toks_no_values": {"en": ["select", "id", "from", "tv_channel", "except", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "value", ";"], "ru": ["select", "id", "from", "tv_channel", "except", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "value", ";"]}}, {"id": "D_0646", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones');", "ru": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Федор Бондарчук');"}, "question": {"en": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.", "ru": "найдите вариант пакета телеканалов, в котором нет ни одного мультфильма Федора Бондарчука."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Федор Бондарчук\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["find", "the", "package", "option", "of", "the", "tv", "channel", "that", "do", "not", "have", "any", "cartoon", "directed", "by", "Ben", "Jones", "."], "ru": ["найдите", "вариант", "пакета", "телеканалов", ",", "в", "котором", "нет", "ни", "одного", "мультфильма", "Федора", "Бондарчука", "."]}, "query_toks": {"en": ["select", "package_option", "from", "tv_channel", "where", "id", "not", "in", "(", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "\"Ben Jones\"", ")", ";"], "ru": ["select", "package_option", "from", "tv_channel", "where", "id", "not", "in", "(", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "\"Федор Бондарчук\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "package_option", "from", "tv_channel", "where", "id", "not", "in", "(", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "value", ")", ";"], "ru": ["select", "package_option", "from", "tv_channel", "where", "id", "not", "in", "(", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "value", ")", ";"]}}, {"id": "D_0647", "db_id": "tvshow", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones');", "ru": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Федор Бондарчук');"}, "question": {"en": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?", "ru": "Какие есть варианты пакетов телеканалов, на которых не воспроизводятся мультфильмы Федора Бондарчука?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Ben Jones\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 21, false], null], "\"Федор Бондарчук\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "package", "options", "of", "all", "tv", "channels", "that", "are", "not", "playing", "any", "cartoons", "directed", "by", "Ben", "Jones", "?"], "ru": ["Какие", "есть", "варианты", "пакетов", "телеканалов", ",", "на", "которых", "не", "воспроизводятся", "мультфильмы", "Федора", "Бондарчука", "?"]}, "query_toks": {"en": ["select", "package_option", "from", "tv_channel", "where", "id", "not", "in", "(", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "\"Ben Jones\"", ")", ";"], "ru": ["select", "package_option", "from", "tv_channel", "where", "id", "not", "in", "(", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "\"Федор Бондарчук\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "package_option", "from", "tv_channel", "where", "id", "not", "in", "(", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "value", ")", ";"], "ru": ["select", "package_option", "from", "tv_channel", "where", "id", "not", "in", "(", "select", "channel", "from", "cartoon", "where", "directed_by", "=", "value", ")", ";"]}}, {"id": "D_0648", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM poker_player;", "ru": "SELECT count(*) FROM poker_player;"}, "question": {"en": "How many poker players are there?", "ru": "Сколько в покере игроков?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "poker", "players", "are", "there", "?"], "ru": ["Сколько", "в", "покере", "игроков", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "poker_player", ";"], "ru": ["select", "count", "(", "*", ")", "from", "poker_player", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "poker_player", ";"], "ru": ["select", "count", "(", "*", ")", "from", "poker_player", ";"]}}, {"id": "D_0649", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM poker_player;", "ru": "SELECT count(*) FROM poker_player;"}, "question": {"en": "Count the number of poker players.", "ru": "Подсчитайте количество игроков в покер."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "poker", "players", "."], "ru": ["Подсчитайте", "количество", "игроков", "в", "покер", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "poker_player", ";"], "ru": ["select", "count", "(", "*", ")", "from", "poker_player", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "poker_player", ";"], "ru": ["select", "count", "(", "*", ")", "from", "poker_player", ";"]}}, {"id": "D_0650", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC;", "ru": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC;"}, "question": {"en": "List the earnings of poker players in descending order.", "ru": "Перечислите заработки игроков в покер в порядке убывания."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "earnings", "of", "poker", "players", "in", "descending", "order", "."], "ru": ["Перечислите", "заработки", "игроков", "в", "покер", "в", "порядке", "убывания", "."]}, "query_toks": {"en": ["select", "earnings", "from", "poker_player", "order", "by", "earnings", "desc", ";"], "ru": ["select", "earnings", "from", "poker_player", "order", "by", "earnings", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "earnings", "from", "poker_player", "order", "by", "earnings", "desc", ";"], "ru": ["select", "earnings", "from", "poker_player", "order", "by", "earnings", "desc", ";"]}}, {"id": "D_0651", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC;", "ru": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC;"}, "question": {"en": "What are the earnings of poker players, ordered descending by value?", "ru": "Каковы доходы игроков в покер, отсортированные по убыванию значения?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "earnings", "of", "poker", "players", ",", "ordered", "descending", "by", "value", "?"], "ru": ["Каковы", "доходы", "игроков", "в", "покер", ",", "отсортированные", "по", "убыванию", "значения", "?"]}, "query_toks": {"en": ["select", "earnings", "from", "poker_player", "order", "by", "earnings", "desc", ";"], "ru": ["select", "earnings", "from", "poker_player", "order", "by", "earnings", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "earnings", "from", "poker_player", "order", "by", "earnings", "desc", ";"], "ru": ["select", "earnings", "from", "poker_player", "order", "by", "earnings", "desc", ";"]}}, {"id": "D_0652", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player;", "ru": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player;"}, "question": {"en": "List the final tables made and the best finishes of poker players.", "ru": "Составь список составленных финальных столов и лучших результатов игроков в покер."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "final", "tables", "made", "and", "the", "best", "finishes", "of", "poker", "players", "."], "ru": ["Составь", "список", "составленных", "финальных", "столов", "и", "лучших", "результатов", "игроков", "в", "покер", "."]}, "query_toks": {"en": ["select", "final_table_made", ",", "best_finish", "from", "poker_player", ";"], "ru": ["select", "final_table_made", ",", "best_finish", "from", "poker_player", ";"]}, "query_toks_no_values": {"en": ["select", "final_table_made", ",", "best_finish", "from", "poker_player", ";"], "ru": ["select", "final_table_made", ",", "best_finish", "from", "poker_player", ";"]}}, {"id": "D_0653", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player;", "ru": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player;"}, "question": {"en": "What are the final tables made and best finishes for all poker players?", "ru": "Каковы финальные столы и лучшие результаты для всех игроков в покер?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "final", "tables", "made", "and", "best", "finishes", "for", "all", "poker", "players", "?"], "ru": ["Каковы", "финальные", "столы", "и", "лучшие", "результаты", "для", "всех", "игроков", "в", "покер", "?"]}, "query_toks": {"en": ["select", "final_table_made", ",", "best_finish", "from", "poker_player", ";"], "ru": ["select", "final_table_made", ",", "best_finish", "from", "poker_player", ";"]}, "query_toks_no_values": {"en": ["select", "final_table_made", ",", "best_finish", "from", "poker_player", ";"], "ru": ["select", "final_table_made", ",", "best_finish", "from", "poker_player", ";"]}}, {"id": "D_0654", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(Earnings) FROM poker_player;", "ru": "SELECT avg(Earnings) FROM poker_player;"}, "question": {"en": "What is the average earnings of poker players?", "ru": "Каков средний заработок игроков в покер?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "earnings", "of", "poker", "players", "?"], "ru": ["Каков", "средний", "заработок", "игроков", "в", "покер", "?"]}, "query_toks": {"en": ["select", "avg", "(", "earnings", ")", "from", "poker_player", ";"], "ru": ["select", "avg", "(", "earnings", ")", "from", "poker_player", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "earnings", ")", "from", "poker_player", ";"], "ru": ["select", "avg", "(", "earnings", ")", "from", "poker_player", ";"]}}, {"id": "D_0655", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(Earnings) FROM poker_player;", "ru": "SELECT avg(Earnings) FROM poker_player;"}, "question": {"en": "Return the average earnings across all poker players.", "ru": "Показать средний заработок по всем игрокам в покер."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "average", "earnings", "across", "all", "poker", "players", "."], "ru": ["Показать", "средний", "заработок", "по", "всем", "игрокам", "в", "покер", "."]}, "query_toks": {"en": ["select", "avg", "(", "earnings", ")", "from", "poker_player", ";"], "ru": ["select", "avg", "(", "earnings", ")", "from", "poker_player", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "earnings", ")", "from", "poker_player", ";"], "ru": ["select", "avg", "(", "earnings", ")", "from", "poker_player", ";"]}}, {"id": "D_0656", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1;", "ru": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1;"}, "question": {"en": "What is the money rank of the poker player with the highest earnings?", "ru": "Какой денежный ранг у игрока в покер с самым высоким заработком?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "money", "rank", "of", "the", "poker", "player", "with", "the", "highest", "earnings", "?"], "ru": ["Какой", "денежный", "ранг", "у", "игрока", "в", "покер", "с", "самым", "высоким", "заработком", "?"]}, "query_toks": {"en": ["select", "money_rank", "from", "poker_player", "order", "by", "earnings", "desc", "limit", "1", ";"], "ru": ["select", "money_rank", "from", "poker_player", "order", "by", "earnings", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "money_rank", "from", "poker_player", "order", "by", "earnings", "desc", "limit", "1", ";"], "ru": ["select", "money_rank", "from", "poker_player", "order", "by", "earnings", "desc", "limit", "1", ";"]}}, {"id": "D_0657", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1;", "ru": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1;"}, "question": {"en": "Return the money rank of the player with the greatest earnings.", "ru": "Показать денежный ранг игрока с наибольшим заработком."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "money", "rank", "of", "the", "player", "with", "the", "greatest", "earnings", "."], "ru": ["Показать", "денежный", "ранг", "игрока", "с", "наибольшим", "заработком", "."]}, "query_toks": {"en": ["select", "money_rank", "from", "poker_player", "order", "by", "earnings", "desc", "limit", "1", ";"], "ru": ["select", "money_rank", "from", "poker_player", "order", "by", "earnings", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "money_rank", "from", "poker_player", "order", "by", "earnings", "desc", "limit", "1", ";"], "ru": ["select", "money_rank", "from", "poker_player", "order", "by", "earnings", "desc", "limit", "1", ";"]}}, {"id": "D_0658", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000;", "ru": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000;"}, "question": {"en": "What is the maximum number of final tables made among poker players with earnings less than 200000?", "ru": "Каково максимальное количество финальных столов среди игроков в покер с заработком менее 200000?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 4, [0, [0, 6, false], null], 200000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 4, [0, [0, 6, false], null], 200000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "maximum", "number", "of", "final", "tables", "made", "among", "poker", "players", "with", "earnings", "less", "than", "200000", "?"], "ru": ["Каково", "максимальное", "количество", "финальных", "столов", "среди", "игроков", "в", "покер", "с", "заработком", "менее", "200000", "?"]}, "query_toks": {"en": ["select", "max", "(", "final_table_made", ")", "from", "poker_player", "where", "earnings", "<", "200000", ";"], "ru": ["select", "max", "(", "final_table_made", ")", "from", "poker_player", "where", "earnings", "<", "200000", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "final_table_made", ")", "from", "poker_player", "where", "earnings", "<", "200000", ";"], "ru": ["select", "max", "(", "final_table_made", ")", "from", "poker_player", "where", "earnings", "<", "200000", ";"]}}, {"id": "D_0659", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000;", "ru": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000;"}, "question": {"en": "Return the maximum final tables made across all poker players who have earnings below 200000.", "ru": "Показать максимальное количество финальных столов, сделанное всеми игроками в покер, чей заработок ниже 200000."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 4, [0, [0, 6, false], null], 200000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 4, [0, [0, 6, false], null], 200000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "maximum", "final", "tables", "made", "across", "all", "poker", "players", "who", "have", "earnings", "below", "200000", "."], "ru": ["Показать", "максимальное", "количество", "финальных", "столов", ",", "сделанное", "всеми", "игроками", "в", "покер", ",", "чей", "заработок", "ниже", "200000", "."]}, "query_toks": {"en": ["select", "max", "(", "final_table_made", ")", "from", "poker_player", "where", "earnings", "<", "200000", ";"], "ru": ["select", "max", "(", "final_table_made", ")", "from", "poker_player", "where", "earnings", "<", "200000", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "final_table_made", ")", "from", "poker_player", "where", "earnings", "<", "200000", ";"], "ru": ["select", "max", "(", "final_table_made", ")", "from", "poker_player", "where", "earnings", "<", "200000", ";"]}}, {"id": "D_0660", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID;", "ru": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID;"}, "question": {"en": "What are the names of poker players?", "ru": "Как зовут игроков в покер?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "poker", "players", "?"], "ru": ["Как", "зовут", "игроков", "в", "покер", "?"]}, "query_toks": {"en": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", ";"], "ru": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", ";"], "ru": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", ";"]}}, {"id": "D_0661", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID;", "ru": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID;"}, "question": {"en": "Return the names of all the poker players.", "ru": "Указать имена всех игроков в покер."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "names", "of", "all", "the", "poker", "players", "."], "ru": ["Указать", "имена", "всех", "игроков", "в", "покер", "."]}, "query_toks": {"en": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", ";"], "ru": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", ";"], "ru": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", ";"]}}, {"id": "D_0662", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000;", "ru": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000;"}, "question": {"en": "What are the names of poker players whose earnings is higher than 300000?", "ru": "Как зовут игроков в покер, чей заработок превышает 300000?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], 300000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], 300000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "poker", "players", "whose", "earnings", "is", "higher", "than", "300000", "?"], "ru": ["Как", "зовут", "игроков", "в", "покер", ",", "чей", "заработок", "превышает", "300000", "?"]}, "query_toks": {"en": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "where", "t2.earnings", ">", "300000", ";"], "ru": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "where", "t2.earnings", ">", "300000", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "where", "t2.earnings", ">", "300000", ";"], "ru": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "where", "t2.earnings", ">", "300000", ";"]}}, {"id": "D_0663", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000;", "ru": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000;"}, "question": {"en": "Give the names of poker players who have earnings above 300000.", "ru": "Назовите имена игроков в покер, чей заработок превышает 300000."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], 300000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], 300000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "names", "of", "poker", "players", "who", "have", "earnings", "above", "300000", "."], "ru": ["Назовите", "имена", "игроков", "в", "покер", ",", "чей", "заработок", "превышает", "300000", "."]}, "query_toks": {"en": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "where", "t2.earnings", ">", "300000", ";"], "ru": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "where", "t2.earnings", ">", "300000", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "where", "t2.earnings", ">", "300000", ";"], "ru": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "where", "t2.earnings", ">", "300000", ";"]}}, {"id": "D_0664", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made;", "ru": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made;"}, "question": {"en": "List the names of poker players ordered by the final tables made in ascending order.", "ru": "Перечислите имена игроков в покер в порядке возрастания финальных столов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "names", "of", "poker", "players", "ordered", "by", "the", "final", "tables", "made", "in", "ascending", "order", "."], "ru": ["Перечислите", "имена", "игроков", "в", "покер", "в", "порядке", "возрастания", "финальных", "столов", "."]}, "query_toks": {"en": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.final_table_made", ";"], "ru": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.final_table_made", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.final_table_made", ";"], "ru": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.final_table_made", ";"]}}, {"id": "D_0665", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made;", "ru": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made;"}, "question": {"en": "What are the names of poker players, ordered ascending by the number of final tables they have made?", "ru": "Как зовутся игроки в покер в порядке возрастания по количеству проведенных ими финальных столов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "poker", "players", ",", "ordered", "ascending", "by", "the", "number", "of", "final", "tables", "they", "have", "made", "?"], "ru": ["Как", "зовутся", "игроки", "в", "покер", "в", "порядке", "возрастания", "по", "количеству", "проведенных", "ими", "финальных", "столов", "?"]}, "query_toks": {"en": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.final_table_made", ";"], "ru": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.final_table_made", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.final_table_made", ";"], "ru": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.final_table_made", ";"]}}, {"id": "D_0666", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1;", "ru": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1;"}, "question": {"en": "What is the birth date of the poker player with the lowest earnings?", "ru": "Какая дата рождения игрока в покер с самым низким доходом?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "birth", "date", "of", "the", "poker", "player", "with", "the", "lowest", "earnings", "?"], "ru": ["Какая", "дата", "рождения", "игрока", "в", "покер", "с", "самым", "низким", "доходом", "?"]}, "query_toks": {"en": ["select", "t1.birth_date", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.earnings", "asc", "limit", "1", ";"], "ru": ["select", "t1.birth_date", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.earnings", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.birth_date", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.earnings", "asc", "limit", "1", ";"], "ru": ["select", "t1.birth_date", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.earnings", "asc", "limit", "1", ";"]}}, {"id": "D_0667", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1;", "ru": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1;"}, "question": {"en": "Return the birth date of the poker player with the lowest earnings.", "ru": "Показать дату рождения игрока в покер с наименьшим заработком."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "birth", "date", "of", "the", "poker", "player", "with", "the", "lowest", "earnings", "."], "ru": ["Показать", "дату", "рождения", "игрока", "в", "покер", "с", "наименьшим", "заработком", "."]}, "query_toks": {"en": ["select", "t1.birth_date", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.earnings", "asc", "limit", "1", ";"], "ru": ["select", "t1.birth_date", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.earnings", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.birth_date", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.earnings", "asc", "limit", "1", ";"], "ru": ["select", "t1.birth_date", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.earnings", "asc", "limit", "1", ";"]}}, {"id": "D_0668", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1;", "ru": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1;"}, "question": {"en": "What is the money rank of the tallest poker player?", "ru": "Какой денежный ранг у самого высокого игрока в покер?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "money", "rank", "of", "the", "tallest", "poker", "player", "?"], "ru": ["Какой", "денежный", "ранг", "у", "самого", "высокого", "игрока", "в", "покер", "?"]}, "query_toks": {"en": ["select", "t2.money_rank", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t1.height", "desc", "limit", "1", ";"], "ru": ["select", "t2.money_rank", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t1.height", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.money_rank", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t1.height", "desc", "limit", "1", ";"], "ru": ["select", "t2.money_rank", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t1.height", "desc", "limit", "1", ";"]}}, {"id": "D_0669", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1;", "ru": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1;"}, "question": {"en": "Return the money rank of the poker player with the greatest height.", "ru": "Показать денежный ранг игрока в покер с наибольшим ростом."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "money", "rank", "of", "the", "poker", "player", "with", "the", "greatest", "height", "."], "ru": ["Показать", "денежный", "ранг", "игрока", "в", "покер", "с", "наибольшим", "ростом", "."]}, "query_toks": {"en": ["select", "t2.money_rank", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t1.height", "desc", "limit", "1", ";"], "ru": ["select", "t2.money_rank", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t1.height", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.money_rank", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t1.height", "desc", "limit", "1", ";"], "ru": ["select", "t2.money_rank", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t1.height", "desc", "limit", "1", ";"]}}, {"id": "D_0670", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200;", "ru": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200;"}, "question": {"en": "What is the average earnings of poker players with height higher than 200?", "ru": "Каков средний заработок игроков в покер ростом выше 200?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 200.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 200.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "earnings", "of", "poker", "players", "with", "height", "higher", "than", "200", "?"], "ru": ["Каков", "средний", "заработок", "игроков", "в", "покер", "ростом", "выше", "200", "?"]}, "query_toks": {"en": ["select", "avg", "(", "t2.earnings", ")", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "where", "t1.height", ">", "200", ";"], "ru": ["select", "avg", "(", "t2.earnings", ")", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "where", "t1.height", ">", "200", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "t2.earnings", ")", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "where", "t1.height", ">", "200", ";"], "ru": ["select", "avg", "(", "t2.earnings", ")", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "where", "t1.height", ">", "200", ";"]}}, {"id": "D_0671", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200;", "ru": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200;"}, "question": {"en": "Give average earnings of poker players who are taller than 200.", "ru": "Приведите средний заработок игроков в покер которые ростом выше 200."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 200.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 200.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "average", "earnings", "of", "poker", "players", "who", "are", "taller", "than", "200", "."], "ru": ["Приведите", "средний", "заработок", "игроков", "в", "покер", "которые", "ростом", "выше", "200", "."]}, "query_toks": {"en": ["select", "avg", "(", "t2.earnings", ")", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "where", "t1.height", ">", "200", ";"], "ru": ["select", "avg", "(", "t2.earnings", ")", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "where", "t1.height", ">", "200", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "t2.earnings", ")", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "where", "t1.height", ">", "200", ";"], "ru": ["select", "avg", "(", "t2.earnings", ")", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "where", "t1.height", ">", "200", ";"]}}, {"id": "D_0672", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC;", "ru": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC;"}, "question": {"en": "What are the names of poker players in descending order of earnings?", "ru": "Как зовут игроков в покер в порядке убывания их доходов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "poker", "players", "in", "descending", "order", "of", "earnings", "?"], "ru": ["Как", "зовут", "игроков", "в", "покер", "в", "порядке", "убывания", "их", "доходов", "?"]}, "query_toks": {"en": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.earnings", "desc", ";"], "ru": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.earnings", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.earnings", "desc", ";"], "ru": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.earnings", "desc", ";"]}}, {"id": "D_0673", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC;", "ru": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC;"}, "question": {"en": "Return the names of poker players sorted by their earnings descending.", "ru": "Покажи имена игроков в покер, отсортированные по убыванию их заработка."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "names", "of", "poker", "players", "sorted", "by", "their", "earnings", "descending", "."], "ru": ["Покажи", "имена", "игроков", "в", "покер", ",", "отсортированные", "по", "убыванию", "их", "заработка", "."]}, "query_toks": {"en": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.earnings", "desc", ";"], "ru": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.earnings", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.earnings", "desc", ";"], "ru": ["select", "t1.name", "from", "people", "as", "t1", "join", "poker_player", "as", "t2", "on", "t1.people_id", "=", "t2.people_id", "order", "by", "t2.earnings", "desc", ";"]}}, {"id": "D_0674", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality;", "ru": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality;"}, "question": {"en": "What are different nationalities of people and the corresponding number of people from each nation?", "ru": "Каковы разные национальности людей и соответствующее количество людей от каждой нации?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "different", "nationalities", "of", "people", "and", "the", "corresponding", "number", "of", "people", "from", "each", "nation", "?"], "ru": ["Каковы", "разные", "национальности", "людей", "и", "соответствующее", "количество", "людей", "от", "каждой", "нации", "?"]}, "query_toks": {"en": ["select", "nationality", ",", "count", "(", "*", ")", "from", "people", "group", "by", "nationality", ";"], "ru": ["select", "nationality", ",", "count", "(", "*", ")", "from", "people", "group", "by", "nationality", ";"]}, "query_toks_no_values": {"en": ["select", "nationality", ",", "count", "(", "*", ")", "from", "people", "group", "by", "nationality", ";"], "ru": ["select", "nationality", ",", "count", "(", "*", ")", "from", "people", "group", "by", "nationality", ";"]}}, {"id": "D_0675", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality;", "ru": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality;"}, "question": {"en": "How many people are there of each nationality?", "ru": "Сколько людей каждой национальности?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "people", "are", "there", "of", "each", "nationality", "?"], "ru": ["Сколько", "людей", "каждой", "национальности", "?"]}, "query_toks": {"en": ["select", "nationality", ",", "count", "(", "*", ")", "from", "people", "group", "by", "nationality", ";"], "ru": ["select", "nationality", ",", "count", "(", "*", ")", "from", "people", "group", "by", "nationality", ";"]}, "query_toks_no_values": {"en": ["select", "nationality", ",", "count", "(", "*", ")", "from", "people", "group", "by", "nationality", ";"], "ru": ["select", "nationality", ",", "count", "(", "*", ")", "from", "people", "group", "by", "nationality", ";"]}}, {"id": "D_0676", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;", "ru": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;"}, "question": {"en": "What is the most common nationality of people?", "ru": "Какая национальность у людей самая распространенная?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "most", "common", "nationality", "of", "people", "?"], "ru": ["Какая", "национальность", "у", "людей", "самая", "распространенная", "?"]}, "query_toks": {"en": ["select", "nationality", "from", "people", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "nationality", "from", "people", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "nationality", "from", "people", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "nationality", "from", "people", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0677", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;", "ru": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1;"}, "question": {"en": "Give the nationality that is most common across all people.", "ru": "Укажите национальность, которая наиболее характерна для всех людей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "nationality", "that", "is", "most", "common", "across", "all", "people", "."], "ru": ["Укажите", "национальность", ",", "которая", "наиболее", "характерна", "для", "всех", "людей", "."]}, "query_toks": {"en": ["select", "nationality", "from", "people", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "nationality", "from", "people", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "nationality", "from", "people", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "nationality", "from", "people", "group", "by", "nationality", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0678", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2;", "ru": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2;"}, "question": {"en": "What are the nationalities that are shared by at least two people?", "ru": "Какие национальности разделяют как минимум два человека?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "nationalities", "that", "are", "shared", "by", "at", "least", "two", "people", "?"], "ru": ["Какие", "национальности", "разделяют", "как", "минимум", "два", "человека", "?"]}, "query_toks": {"en": ["select", "nationality", "from", "people", "group", "by", "nationality", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "nationality", "from", "people", "group", "by", "nationality", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "nationality", "from", "people", "group", "by", "nationality", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "nationality", "from", "people", "group", "by", "nationality", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0679", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2;", "ru": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2;"}, "question": {"en": "Return the nationalities for which there are two or more people.", "ru": "Показать национальности, к которым принадлежат два и более человека."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "nationalities", "for", "which", "there", "are", "two", "or", "more", "people", "."], "ru": ["Показать", "национальности", ",", "к", "которым", "принадлежат", "два", "и", "более", "человека", "."]}, "query_toks": {"en": ["select", "nationality", "from", "people", "group", "by", "nationality", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "nationality", "from", "people", "group", "by", "nationality", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "nationality", "from", "people", "group", "by", "nationality", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "nationality", "from", "people", "group", "by", "nationality", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0680", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC;", "ru": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC;"}, "question": {"en": "List the names and birth dates of people in ascending alphabetical order of name.", "ru": "Перечислите имена и даты рождения людей в возрастающем алфавитном порядке имен."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "names", "and", "birth", "dates", "of", "people", "in", "ascending", "alphabetical", "order", "of", "name", "."], "ru": ["Перечислите", "имена", "и", "даты", "рождения", "людей", "в", "возрастающем", "алфавитном", "порядке", "имен", "."]}, "query_toks": {"en": ["select", "name", ",", "birth_date", "from", "people", "order", "by", "name", "asc", ";"], "ru": ["select", "name", ",", "birth_date", "from", "people", "order", "by", "name", "asc", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "birth_date", "from", "people", "order", "by", "name", "asc", ";"], "ru": ["select", "name", ",", "birth_date", "from", "people", "order", "by", "name", "asc", ";"]}}, {"id": "D_0681", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC;", "ru": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC;"}, "question": {"en": "What are the names and birth dates of people, ordered by their names in alphabetical order?", "ru": "Каковы имена и даты рождения людей, отсортированные по именам в алфавитном порядке?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "and", "birth", "dates", "of", "people", ",", "ordered", "by", "their", "names", "in", "alphabetical", "order", "?"], "ru": ["Каковы", "имена", "и", "даты", "рождения", "людей", ",", "отсортированные", "по", "именам", "в", "алфавитном", "порядке", "?"]}, "query_toks": {"en": ["select", "name", ",", "birth_date", "from", "people", "order", "by", "name", "asc", ";"], "ru": ["select", "name", ",", "birth_date", "from", "people", "order", "by", "name", "asc", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "birth_date", "from", "people", "order", "by", "name", "asc", ";"], "ru": ["select", "name", ",", "birth_date", "from", "people", "order", "by", "name", "asc", ";"]}}, {"id": "D_0682", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM people WHERE Nationality != \"Russia\";", "ru": "SELECT Name FROM people WHERE Nationality != \"Украина\";"}, "question": {"en": "Show names of people whose nationality is not \"Russia\".", "ru": "Покажите имена людей, национальность которых не «Украина»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 7, [0, [0, 8, false], null], "\"Russia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 7, [0, [0, 8, false], null], "\"Украина\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "names", "of", "people", "whose", "nationality", "is", "not", "``", "Russia", "''", "."], "ru": ["Покажите", "имена", "людей", ",", "национальность", "которых", "не", "«", "Украина", "»", "."]}, "query_toks": {"en": ["select", "name", "from", "people", "where", "nationality", "!=", "\"Russia\"", ";"], "ru": ["select", "name", "from", "people", "where", "nationality", "!=", "\"Украина\"", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "people", "where", "nationality", "!=", "value", ";"], "ru": ["select", "name", "from", "people", "where", "nationality", "!=", "value", ";"]}}, {"id": "D_0683", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM people WHERE Nationality != \"Russia\";", "ru": "SELECT Name FROM people WHERE Nationality != \"Украина\";"}, "question": {"en": "What are the names of people who are not from Russia?", "ru": "Как зовут людей не из Украины?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 7, [0, [0, 8, false], null], "\"Russia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 7, [0, [0, 8, false], null], "\"Украина\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "people", "who", "are", "not", "from", "Russia", "?"], "ru": ["Как", "зовут", "людей", "не", "из", "Украины", "?"]}, "query_toks": {"en": ["select", "name", "from", "people", "where", "nationality", "!=", "\"Russia\"", ";"], "ru": ["select", "name", "from", "people", "where", "nationality", "!=", "\"Украина\"", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "people", "where", "nationality", "!=", "value", ";"], "ru": ["select", "name", "from", "people", "where", "nationality", "!=", "value", ";"]}}, {"id": "D_0684", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player);", "ru": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player);"}, "question": {"en": "List the names of people that are not poker players.", "ru": "Перечислите имена людей, не играющих в покер."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "names", "of", "people", "that", "are", "not", "poker", "players", "."], "ru": ["Перечислите", "имена", "людей", ",", "не", "играющих", "в", "покер", "."]}, "query_toks": {"en": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "poker_player", ")", ";"], "ru": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "poker_player", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "poker_player", ")", ";"], "ru": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "poker_player", ")", ";"]}}, {"id": "D_0685", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player);", "ru": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player);"}, "question": {"en": "What are the names of people who do not play poker?", "ru": "Как зовут людей, которые не играют в покер?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "people", "who", "do", "not", "play", "poker", "?"], "ru": ["Как", "зовут", "людей", ",", "которые", "не", "играют", "в", "покер", "?"]}, "query_toks": {"en": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "poker_player", ")", ";"], "ru": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "poker_player", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "poker_player", ")", ";"], "ru": ["select", "name", "from", "people", "where", "people_id", "not", "in", "(", "select", "people_id", "from", "poker_player", ")", ";"]}}, {"id": "D_0686", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT Nationality) FROM people;", "ru": "SELECT count(DISTINCT Nationality) FROM people;"}, "question": {"en": "How many distinct nationalities are there?", "ru": "Сколько существует разных национальностей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 8, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 8, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "distinct", "nationalities", "are", "there", "?"], "ru": ["Сколько", "существует", "разных", "национальностей", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "nationality", ")", "from", "people", ";"], "ru": ["select", "count", "(", "distinct", "nationality", ")", "from", "people", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "nationality", ")", "from", "people", ";"], "ru": ["select", "count", "(", "distinct", "nationality", ")", "from", "people", ";"]}}, {"id": "D_0687", "db_id": "poker_player", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT Nationality) FROM people;", "ru": "SELECT count(DISTINCT Nationality) FROM people;"}, "question": {"en": "Count the number of different nationalities.", "ru": "Подсчитай количество разных национальностей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 8, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 8, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "different", "nationalities", "."], "ru": ["Подсчитай", "количество", "разных", "национальностей", "."]}, "query_toks": {"en": ["select", "count", "(", "distinct", "nationality", ")", "from", "people", ";"], "ru": ["select", "count", "(", "distinct", "nationality", ")", "from", "people", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "nationality", ")", "from", "people", ";"], "ru": ["select", "count", "(", "distinct", "nationality", ")", "from", "people", ";"]}}, {"id": "D_0688", "db_id": "voter_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM area_code_state;", "ru": "SELECT count(*) FROM area_code_state;"}, "question": {"en": "How many states are there?", "ru": "Сколько там штатов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "states", "are", "there", "?"], "ru": ["Сколько", "там", "штатов", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "area_code_state", ";"], "ru": ["select", "count", "(", "*", ")", "from", "area_code_state", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "area_code_state", ";"], "ru": ["select", "count", "(", "*", ")", "from", "area_code_state", ";"]}}, {"id": "D_0689", "db_id": "voter_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC;", "ru": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC;"}, "question": {"en": "List the contestant numbers and names, ordered by contestant name descending.", "ru": "Перечислить номера и имена участников в порядке убывания имен участников."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "contestant", "numbers", "and", "names", ",", "ordered", "by", "contestant", "name", "descending", "."], "ru": ["Перечислить", "номера", "и", "имена", "участников", "в", "порядке", "убывания", "имен", "участников", "."]}, "query_toks": {"en": ["select", "contestant_number", ",", "contestant_name", "from", "contestants", "order", "by", "contestant_name", "desc", ";"], "ru": ["select", "contestant_number", ",", "contestant_name", "from", "contestants", "order", "by", "contestant_name", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "contestant_number", ",", "contestant_name", "from", "contestants", "order", "by", "contestant_name", "desc", ";"], "ru": ["select", "contestant_number", ",", "contestant_name", "from", "contestants", "order", "by", "contestant_name", "desc", ";"]}}, {"id": "D_0690", "db_id": "voter_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT vote_id ,  phone_number ,  state FROM votes;", "ru": "SELECT vote_id ,  phone_number ,  state FROM votes;"}, "question": {"en": "List the vote ids, phone numbers and states of all votes.", "ru": "Перечислите id голосов, номера телефонов и штаты всех голосов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "vote", "ids", ",", "phone", "numbers", "and", "states", "of", "all", "votes", "."], "ru": ["Перечислите", "id", "голосов", ",", "номера", "телефонов", "и", "штаты", "всех", "голосов", "."]}, "query_toks": {"en": ["select", "vote_id", ",", "phone_number", ",", "state", "from", "votes", ";"], "ru": ["select", "vote_id", ",", "phone_number", ",", "state", "from", "votes", ";"]}, "query_toks_no_values": {"en": ["select", "vote_id", ",", "phone_number", ",", "state", "from", "votes", ";"], "ru": ["select", "vote_id", ",", "phone_number", ",", "state", "from", "votes", ";"]}}, {"id": "D_0691", "db_id": "voter_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(area_code) ,  min(area_code) FROM area_code_state;", "ru": "SELECT max(area_code) ,  min(area_code) FROM area_code_state;"}, "question": {"en": "What are the maximum and minimum values of area codes?", "ru": "Каковы максимальные и минимальные значения кодов городов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 1, false], null]], [2, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 1, false], null]], [2, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "maximum", "and", "minimum", "values", "of", "area", "codes", "?"], "ru": ["Каковы", "максимальные", "и", "минимальные", "значения", "кодов", "городов", "?"]}, "query_toks": {"en": ["select", "max", "(", "area_code", ")", ",", "min", "(", "area_code", ")", "from", "area_code_state", ";"], "ru": ["select", "max", "(", "area_code", ")", ",", "min", "(", "area_code", ")", "from", "area_code_state", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "area_code", ")", ",", "min", "(", "area_code", ")", "from", "area_code_state", ";"], "ru": ["select", "max", "(", "area_code", ")", ",", "min", "(", "area_code", ")", "from", "area_code_state", ";"]}}, {"id": "D_0692", "db_id": "voter_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(created) FROM votes WHERE state  =  'CA';", "ru": "SELECT max(created) FROM votes WHERE state  =  'CA';"}, "question": {"en": "What is last date created of votes from the state 'CA'?", "ru": "Какова последняя дата создания голосов от штата «CA»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"CA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"CA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "last", "date", "created", "of", "votes", "from", "the", "state", "'CA", "'", "?"], "ru": ["Какова", "последняя", "дата", "создания", "голосов", "от", "штата", "«", "CA", "»", "?"]}, "query_toks": {"en": ["select", "max", "(", "created", ")", "from", "votes", "where", "state", "=", "\"CA\"", ";"], "ru": ["select", "max", "(", "created", ")", "from", "votes", "where", "state", "=", "\"CA\"", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "created", ")", "from", "votes", "where", "state", "=", "value", ";"], "ru": ["select", "max", "(", "created", ")", "from", "votes", "where", "state", "=", "value", ";"]}}, {"id": "D_0693", "db_id": "voter_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway';", "ru": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Павел Нестеров';"}, "question": {"en": "What are the names of the contestants whose names are not 'Jessie Alloway'", "ru": "Как зовут участников, чьи имена не «Павел Нестеров»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"Jessie Alloway\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"Павел Нестеров\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "contestants", "whose", "names", "are", "not", "'Jessie", "Alloway", "'"], "ru": ["Как", "зовут", "участников", ",", "чьи", "имена", "не", "«", "Павел", "Нестеров", "»", "?"]}, "query_toks": {"en": ["select", "contestant_name", "from", "contestants", "where", "contestant_name", "!=", "\"Jessie Alloway\"", ";"], "ru": ["select", "contestant_name", "from", "contestants", "where", "contestant_name", "!=", "\"Павел Нестеров\"", ";"]}, "query_toks_no_values": {"en": ["select", "contestant_name", "from", "contestants", "where", "contestant_name", "!=", "value", ";"], "ru": ["select", "contestant_name", "from", "contestants", "where", "contestant_name", "!=", "value", ";"]}}, {"id": "D_0694", "db_id": "voter_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT state ,  created FROM votes;", "ru": "SELECT DISTINCT state ,  created FROM votes;"}, "question": {"en": "What are the distinct states and create time of all votes?", "ru": "Каковы различные штаты и время оформления всех голосов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "distinct", "states", "and", "create", "time", "of", "all", "votes", "?"], "ru": ["Каковы", "различные", "штаты", "и", "время", "оформления", "всех", "голосов", "?"]}, "query_toks": {"en": ["select", "distinct", "state", ",", "created", "from", "votes", ";"], "ru": ["select", "distinct", "state", ",", "created", "from", "votes", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "state", ",", "created", "from", "votes", ";"], "ru": ["select", "distinct", "state", ",", "created", "from", "votes", ";"]}}, {"id": "D_0695", "db_id": "voter_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2;", "ru": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2;"}, "question": {"en": "What are the contestant numbers and names of the contestants who had at least two votes?", "ru": "Каковы номера участников и имена участников, набравших не менее двух голосов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "contestant", "numbers", "and", "names", "of", "the", "contestants", "who", "had", "at", "least", "two", "votes", "?"], "ru": ["Каковы", "номера", "участников", "и", "имена", "участников", ",", "набравших", "не", "менее", "двух", "голосов", "?"]}, "query_toks": {"en": ["select", "t1.contestant_number", ",", "t1.contestant_name", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "group", "by", "t1.contestant_number", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t1.contestant_number", ",", "t1.contestant_name", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "group", "by", "t1.contestant_number", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t1.contestant_number", ",", "t1.contestant_name", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "group", "by", "t1.contestant_number", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t1.contestant_number", ",", "t1.contestant_name", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "group", "by", "t1.contestant_number", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0696", "db_id": "voter_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1;", "ru": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1;"}, "question": {"en": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?", "ru": "Из всех проголосовавших участников, каков номер и имя участника, набравшего наименьшее количество голосов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Of", "all", "the", "contestants", "who", "got", "voted", ",", "what", "is", "the", "contestant", "number", "and", "name", "of", "the", "contestant", "who", "got", "least", "votes", "?"], "ru": ["Из", "всех", "проголосовавших", "участников", ",", "каков", "номер", "и", "имя", "участника", ",", "набравшего", "наименьшее", "количество", "голосов", "?"]}, "query_toks": {"en": ["select", "t1.contestant_number", ",", "t1.contestant_name", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "group", "by", "t1.contestant_number", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"], "ru": ["select", "t1.contestant_number", ",", "t1.contestant_name", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "group", "by", "t1.contestant_number", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.contestant_number", ",", "t1.contestant_name", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "group", "by", "t1.contestant_number", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"], "ru": ["select", "t1.contestant_number", ",", "t1.contestant_name", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "group", "by", "t1.contestant_number", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ";"]}}, {"id": "D_0697", "db_id": "voter_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA';", "ru": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA';"}, "question": {"en": "What are the number of votes from state 'NY' or 'CA'?", "ru": "Каково количество голосов от штата Нью-Йорк или Калифорния?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"NY\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"CA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"NY\"", null], "or", [false, 2, [0, [0, 7, false], null], "\"CA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "number", "of", "votes", "from", "state", "'NY", "'", "or", "'CA", "'", "?"], "ru": ["Каково", "количество", "голосов", "от", "штата", "Нью-Йорк", "или", "Калифорния", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "votes", "where", "state", "=", "\"NY\"", "or", "state", "=", "\"CA\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "votes", "where", "state", "=", "\"NY\"", "or", "state", "=", "\"CA\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "votes", "where", "state", "=", "value", "or", "state", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "votes", "where", "state", "=", "value", "or", "state", "=", "value", ";"]}}, {"id": "D_0698", "db_id": "voter_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes );", "ru": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes );"}, "question": {"en": "How many contestants did not get voted?", "ru": "Сколько конкурсантов не проголосовали?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "contestants", "did", "not", "get", "voted", "?"], "ru": ["Сколько", "конкурсантов", "не", "проголосовали", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "contestants", "where", "contestant_number", "not", "in", "(", "select", "contestant_number", "from", "votes", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "contestants", "where", "contestant_number", "not", "in", "(", "select", "contestant_number", "from", "votes", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "contestants", "where", "contestant_number", "not", "in", "(", "select", "contestant_number", "from", "votes", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "contestants", "where", "contestant_number", "not", "in", "(", "select", "contestant_number", "from", "votes", ")", ";"]}}, {"id": "D_0699", "db_id": "voter_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the area code in which the most voters voted?", "ru": "Каков код города, в котором проголосовало наибольшее количество избирателей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "area", "code", "in", "which", "the", "most", "voters", "voted", "?"], "ru": ["Каков", "код", "города", ",", "в", "котором", "проголосовало", "наибольшее", "количество", "избирателей", "?"]}, "query_toks": {"en": ["select", "t1.area_code", "from", "area_code_state", "as", "t1", "join", "votes", "as", "t2", "on", "t1.state", "=", "t2.state", "group", "by", "t1.area_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.area_code", "from", "area_code_state", "as", "t1", "join", "votes", "as", "t2", "on", "t1.state", "=", "t2.state", "group", "by", "t1.area_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.area_code", "from", "area_code_state", "as", "t1", "join", "votes", "as", "t2", "on", "t1.state", "=", "t2.state", "group", "by", "t1.area_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.area_code", "from", "area_code_state", "as", "t1", "join", "votes", "as", "t2", "on", "t1.state", "=", "t2.state", "group", "by", "t1.area_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0700", "db_id": "voter_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling';", "ru": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Матвей Гончаров';"}, "question": {"en": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?", "ru": "Каковы даты оформления, штаты и номера телефонов при голосовании за участника по имени Матвей Гончаров?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Tabatha Gehling\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Матвей Гончаров\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "create", "dates", ",", "states", ",", "and", "phone", "numbers", "of", "the", "votes", "that", "were", "for", "the", "contestant", "named", "'Tabatha", "Gehling", "'", "?"], "ru": ["Каковы", "даты", "оформления", ",", "штаты", "и", "номера", "телефонов", "при", "голосовании", "за", "участника", "по", "имени", "Матвей", "Гончаров", "?"]}, "query_toks": {"en": ["select", "t2.created", ",", "t2.state", ",", "t2.phone_number", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "where", "t1.contestant_name", "=", "\"Tabatha Gehling\"", ";"], "ru": ["select", "t2.created", ",", "t2.state", ",", "t2.phone_number", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "where", "t1.contestant_name", "=", "\"Матвей Гончаров\"", ";"]}, "query_toks_no_values": {"en": ["select", "t2.created", ",", "t2.state", ",", "t2.phone_number", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "where", "t1.contestant_name", "=", "value", ";"], "ru": ["select", "t2.created", ",", "t2.state", ",", "t2.phone_number", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "where", "t1.contestant_name", "=", "value", ";"]}}, {"id": "D_0701", "db_id": "voter_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Alana Bregman';", "ru": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Матвей Гончаров' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Арина Филиппова';"}, "question": {"en": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Alana Bregman'.", "ru": "Перечислите коды городов, в которых избиратели голосовали как за кандидатуру «Матвей Гончаров», так и за кандидатуру «Арина Филиппова»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Tabatha Gehling\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Alana Bregman\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Матвей Гончаров\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 7, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Арина Филиппова\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "area", "codes", "in", "which", "voters", "voted", "both", "for", "the", "contestant", "'Tabatha", "Gehling", "'", "and", "the", "contestant", "'Alana", "Bregman", "'", "."], "ru": ["Перечислите", "коды", "городов", ",", "в", "которых", "избиратели", "голосовали", "как", "за", "кандидатуру", "«", "Матвей", "Гончаров", "»", ",", "так", "и", "за", "кандидатуру", "«", "Арина", "Филиппова", "»", "."]}, "query_toks": {"en": ["select", "t3.area_code", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "join", "area_code_state", "as", "t3", "on", "t2.state", "=", "t3.state", "where", "t1.contestant_name", "=", "\"Tabatha Gehling\"", "intersect", "select", "t3.area_code", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "join", "area_code_state", "as", "t3", "on", "t2.state", "=", "t3.state", "where", "t1.contestant_name", "=", "\"Alana Bregman\"", ";"], "ru": ["select", "t3.area_code", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "join", "area_code_state", "as", "t3", "on", "t2.state", "=", "t3.state", "where", "t1.contestant_name", "=", "\"Матвей Гончаров\"", "intersect", "select", "t3.area_code", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "join", "area_code_state", "as", "t3", "on", "t2.state", "=", "t3.state", "where", "t1.contestant_name", "=", "\"Арина Филиппова\"", ";"]}, "query_toks_no_values": {"en": ["select", "t3.area_code", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "join", "area_code_state", "as", "t3", "on", "t2.state", "=", "t3.state", "where", "t1.contestant_name", "=", "value", "intersect", "select", "t3.area_code", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "join", "area_code_state", "as", "t3", "on", "t2.state", "=", "t3.state", "where", "t1.contestant_name", "=", "value", ";"], "ru": ["select", "t3.area_code", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "join", "area_code_state", "as", "t3", "on", "t2.state", "=", "t3.state", "where", "t1.contestant_name", "=", "value", "intersect", "select", "t3.area_code", "from", "contestants", "as", "t1", "join", "votes", "as", "t2", "on", "t1.contestant_number", "=", "t2.contestant_number", "join", "area_code_state", "as", "t3", "on", "t2.state", "=", "t3.state", "where", "t1.contestant_name", "=", "value", ";"]}}, {"id": "D_0702", "db_id": "voter_1", "source": "spider-dev", "type": "dev", "query": {"en": "select contestant_name from contestants where contestant_name like \"%al%\";", "ru": "select contestant_name from contestants where contestant_name like \"%ов%\";"}, "question": {"en": "Return the names of the contestants whose names contain the substring 'Al' .", "ru": "Показать имена участников, имена которых содержат подстроку «ов»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 4, false], null], "\"%al%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 4, false], null], "\"%ов%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "names", "of", "the", "contestants", "whose", "names", "contain", "the", "substring", "'Al", "'", "."], "ru": ["Показать", "имена", "участников", ",", "имена", "которых", "содержат", "подстроку", "«", "ов", "»", "."]}, "query_toks": {"en": ["select", "contestant_name", "from", "contestants", "where", "contestant_name", "like", "\"%al%\"", ";"], "ru": ["select", "contestant_name", "from", "contestants", "where", "contestant_name", "like", "\"%ов%\"", ";"]}, "query_toks_no_values": {"en": ["select", "contestant_name", "from", "contestants", "where", "contestant_name", "like", "value", ";"], "ru": ["select", "contestant_name", "from", "contestants", "where", "contestant_name", "like", "value", ";"]}}, {"id": "D_0703", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "select sum(population) , avg(surfacearea) from country where continent = \"North America\" and surfacearea > 3000;", "ru": "SELECT Name FROM country WHERE IndepYear  >  1950;"}, "question": {"en": "What are the names of all the countries that became independent after 1950?", "ru": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"North America\"", null], "and", [false, 3, [0, [0, 12, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 1950.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "all", "the", "countries", "that", "became", "independent", "after", "1950", "?"], "ru": ["What", "is", "the", "total", "population", "and", "average", "area", "of", "countries", "in", "the", "continent", "of", "North", "America", "whose", "area", "is", "bigger", "than", "3000", "?"]}, "query_toks": {"en": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"North America\"", "and", "surfacearea", ">", "3000", ";"], "ru": ["select", "name", "from", "country", "where", "indepyear", ">", "1950", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "and", "surfacearea", ">", "3000", ";"], "ru": ["select", "name", "from", "country", "where", "indepyear", ">", "1950", ";"]}}, {"id": "D_0704", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "select sum(population) , avg(surfacearea) from country where continent = \"North America\" and surfacearea > 3000;", "ru": "SELECT Name FROM country WHERE IndepYear  >  1950;"}, "question": {"en": "Give the names of the nations that were founded after 1950.", "ru": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 ."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"North America\"", null], "and", [false, 3, [0, [0, 12, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 1950.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "names", "of", "the", "nations", "that", "were", "founded", "after", "1950", "."], "ru": ["Give", "the", "total", "population", "and", "average", "surface", "area", "corresponding", "to", "countries", "in", "North", "America", "that", "have", "a", "surface", "area", "greater", "than", "3000", "."]}, "query_toks": {"en": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"North America\"", "and", "surfacearea", ">", "3000", ";"], "ru": ["select", "name", "from", "country", "where", "indepyear", ">", "1950", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "and", "surfacearea", ">", "3000", ";"], "ru": ["select", "name", "from", "country", "where", "indepyear", ">", "1950", ";"]}}, {"id": "D_0705", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\";", "ru": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Абсолютная монархия\";"}, "question": {"en": "How many countries have a republic as their form of government?", "ru": "В скольких странах форма правления является абсолютной монархией?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Абсолютная монархия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "countries", "have", "a", "republic", "as", "their", "form", "of", "government", "?"], "ru": ["В", "скольких", "странах", "форма", "правления", "является", "абсолютной", "монархией", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "country", "where", "governmentform", "=", "\"Republic\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "country", "where", "governmentform", "=", "\"Абсолютная монархия\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "country", "where", "governmentform", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "country", "where", "governmentform", "=", "value", ";"]}}, {"id": "D_0706", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\";", "ru": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Абсолютная монархия\";"}, "question": {"en": "How many countries have governments that are republics?", "ru": "В скольких странах есть абсолютные монархические правительства?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Абсолютная монархия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "countries", "have", "governments", "that", "are", "republics", "?"], "ru": ["В", "скольких", "странах", "есть", "абсолютные", "монархические", "правительства", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "country", "where", "governmentform", "=", "\"Republic\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "country", "where", "governmentform", "=", "\"Абсолютная монархия\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "country", "where", "governmentform", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "country", "where", "governmentform", "=", "value", ";"]}}, {"id": "D_0707", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\";", "ru": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Средиземье\";"}, "question": {"en": "What is the total surface area of the countries in the Caribbean region?", "ru": "Какова общая площадь стран Средиземного региона?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Caribbean\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Средиземье\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "total", "surface", "area", "of", "the", "countries", "in", "the", "Caribbean", "region", "?"], "ru": ["Какова", "общая", "площадь", "стран", "Средиземного", "региона", "?"]}, "query_toks": {"en": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "region", "=", "\"Caribbean\"", ";"], "ru": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "region", "=", "\"Средиземье\"", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "region", "=", "value", ";"], "ru": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "region", "=", "value", ";"]}}, {"id": "D_0708", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\";", "ru": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Средиземье\";"}, "question": {"en": "How much surface area do the countires in the Carribean cover together?", "ru": "Какую площадь покрывают вместе страны Средиземного бассейна?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Caribbean\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Средиземье\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "much", "surface", "area", "do", "the", "countires", "in", "the", "Carribean", "cover", "together", "?"], "ru": ["Какую", "площадь", "покрывают", "вместе", "страны", "Средиземного", "бассейна", "?"]}, "query_toks": {"en": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "region", "=", "\"Caribbean\"", ";"], "ru": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "region", "=", "\"Средиземье\"", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "region", "=", "value", ";"], "ru": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "region", "=", "value", ";"]}}, {"id": "D_0709", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\";", "ru": "SELECT Continent FROM country WHERE Name  =  \"Ваканда\";"}, "question": {"en": "Which continent is Anguilla in?", "ru": "На каком континенте находится Ваканда?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Anguilla\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Ваканда\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "continent", "is", "Anguilla", "in", "?"], "ru": ["На", "каком", "континенте", "находится", "Ваканда", "?"]}, "query_toks": {"en": ["select", "continent", "from", "country", "where", "name", "=", "\"Anguilla\"", ";"], "ru": ["select", "continent", "from", "country", "where", "name", "=", "\"Ваканда\"", ";"]}, "query_toks_no_values": {"en": ["select", "continent", "from", "country", "where", "name", "=", "value", ";"], "ru": ["select", "continent", "from", "country", "where", "name", "=", "value", ";"]}}, {"id": "D_0710", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\";", "ru": "SELECT Continent FROM country WHERE Name  =  \"Ваканда\";"}, "question": {"en": "What is the continent name which Anguilla belongs to?", "ru": "Как называется континент, к которому принадлежит Ваканда?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Anguilla\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Ваканда\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "continent", "name", "which", "Anguilla", "belongs", "to", "?"], "ru": ["Как", "называется", "континент", ",", "к", "которому", "принадлежит", "Ваканда", "?"]}, "query_toks": {"en": ["select", "continent", "from", "country", "where", "name", "=", "\"Anguilla\"", ";"], "ru": ["select", "continent", "from", "country", "where", "name", "=", "\"Ваканда\"", ";"]}, "query_toks_no_values": {"en": ["select", "continent", "from", "country", "where", "name", "=", "value", ";"], "ru": ["select", "continent", "from", "country", "where", "name", "=", "value", ";"]}}, {"id": "D_0711", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\";", "ru": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Сайлент Хилл\";"}, "question": {"en": "Which region is the city Kabul located in?", "ru": "В каком регионе находится город Сайлент Хилл?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kabul\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Сайлент Хилл\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "region", "is", "the", "city", "Kabul", "located", "in", "?"], "ru": ["В", "каком", "регионе", "находится", "город", "Сайлент", "Хилл", "?"]}, "query_toks": {"en": ["select", "region", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.name", "=", "\"Kabul\"", ";"], "ru": ["select", "region", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.name", "=", "\"Сайлент Хилл\"", ";"]}, "query_toks_no_values": {"en": ["select", "region", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.name", "=", "value", ";"], "ru": ["select", "region", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.name", "=", "value", ";"]}}, {"id": "D_0712", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\";", "ru": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Сайлент Хилл\";"}, "question": {"en": "What region is Kabul in?", "ru": "В каком регионе находится Сайлент Хилл?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kabul\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Сайлент Хилл\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "region", "is", "Kabul", "in", "?"], "ru": ["В", "каком", "регионе", "находится", "Сайлент", "Хилл", "?"]}, "query_toks": {"en": ["select", "region", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.name", "=", "\"Kabul\"", ";"], "ru": ["select", "region", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.name", "=", "\"Сайлент Хилл\"", ";"]}, "query_toks_no_values": {"en": ["select", "region", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.name", "=", "value", ";"], "ru": ["select", "region", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.name", "=", "value", ";"]}}, {"id": "D_0713", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1;", "ru": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Ваканда\" ORDER BY Percentage DESC LIMIT 1;"}, "question": {"en": "Which language is the most popular in Aruba?", "ru": "Какой язык наиболее популярен в Ваканде?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Aruba\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 26, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Ваканда\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 26, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "language", "is", "the", "most", "popular", "in", "Aruba", "?"], "ru": ["Какой", "язык", "наиболее", "популярен", "в", "Ваканде", "?"]}, "query_toks": {"en": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "\"Aruba\"", "order", "by", "percentage", "desc", "limit", "1", ";"], "ru": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "\"Ваканда\"", "order", "by", "percentage", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "value", "order", "by", "percentage", "desc", "limit", "1", ";"], "ru": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "value", "order", "by", "percentage", "desc", "limit", "1", ";"]}}, {"id": "D_0714", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1;", "ru": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Ваканда\" ORDER BY Percentage DESC LIMIT 1;"}, "question": {"en": "What language is predominantly spoken in Aruba?", "ru": "На каком языке преимущественно говорят в Ваканде?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Aruba\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 26, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Ваканда\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 26, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "language", "is", "predominantly", "spoken", "in", "Aruba", "?"], "ru": ["На", "каком", "языке", "преимущественно", "говорят", "в", "Ваканде", "?"]}, "query_toks": {"en": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "\"Aruba\"", "order", "by", "percentage", "desc", "limit", "1", ";"], "ru": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "\"Ваканда\"", "order", "by", "percentage", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "value", "order", "by", "percentage", "desc", "limit", "1", ";"], "ru": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "value", "order", "by", "percentage", "desc", "limit", "1", ";"]}}, {"id": "D_0715", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\";", "ru": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Ваканда\";"}, "question": {"en": "What are the population and life expectancies in Brazil?", "ru": "Какова численность населения и ожидаемая продолжительность жизни в Ваканде?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Brazil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Ваканда\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "population", "and", "life", "expectancies", "in", "Brazil", "?"], "ru": ["Какова", "численность", "населения", "и", "ожидаемая", "продолжительность", "жизни", "в", "Ваканде", "?"]}, "query_toks": {"en": ["select", "population", ",", "lifeexpectancy", "from", "country", "where", "name", "=", "\"Brazil\"", ";"], "ru": ["select", "population", ",", "lifeexpectancy", "from", "country", "where", "name", "=", "\"Ваканда\"", ";"]}, "query_toks_no_values": {"en": ["select", "population", ",", "lifeexpectancy", "from", "country", "where", "name", "=", "value", ";"], "ru": ["select", "population", ",", "lifeexpectancy", "from", "country", "where", "name", "=", "value", ";"]}}, {"id": "D_0716", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\";", "ru": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Ваканда\";"}, "question": {"en": "Give me Brazil’s population and life expectancies.", "ru": "Показать количество населения Ваканды и продолжительность жизни."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Brazil\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Ваканда\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "me", "Brazil", "’", "s", "population", "and", "life", "expectancies", "."], "ru": ["Показать", "количество", "населения", "Ваканды", "и", "продолжительность", "жизни", "."]}, "query_toks": {"en": ["select", "population", ",", "lifeexpectancy", "from", "country", "where", "name", "=", "\"Brazil\"", ";"], "ru": ["select", "population", ",", "lifeexpectancy", "from", "country", "where", "name", "=", "\"Ваканда\"", ";"]}, "query_toks_no_values": {"en": ["select", "population", ",", "lifeexpectancy", "from", "country", "where", "name", "=", "value", ";"], "ru": ["select", "population", ",", "lifeexpectancy", "from", "country", "where", "name", "=", "value", ";"]}}, {"id": "D_0717", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\";", "ru": "SELECT Population ,  Region FROM country WHERE Name  =  \"Вальверде\";"}, "question": {"en": "What are the region and population of Angola?", "ru": "К какому региону относится Вальверде и какое в ней количество населения?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Angola\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Вальверде\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "region", "and", "population", "of", "Angola", "?"], "ru": ["К", "какому", "региону", "относится", "Вальверде", "и", "какое", "в", "ней", "количество", "населения", "?"]}, "query_toks": {"en": ["select", "population", ",", "region", "from", "country", "where", "name", "=", "\"Angola\"", ";"], "ru": ["select", "population", ",", "region", "from", "country", "where", "name", "=", "\"Вальверде\"", ";"]}, "query_toks_no_values": {"en": ["select", "population", ",", "region", "from", "country", "where", "name", "=", "value", ";"], "ru": ["select", "population", ",", "region", "from", "country", "where", "name", "=", "value", ";"]}}, {"id": "D_0718", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\";", "ru": "SELECT Population ,  Region FROM country WHERE Name  =  \"Вальверде\";"}, "question": {"en": "What region does Angola belong to and what is its population?", "ru": "К какому региону принадлежит Вальверде и каково ее население?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Angola\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Вальверде\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "region", "does", "Angola", "belong", "to", "and", "what", "is", "its", "population", "?"], "ru": ["К", "какому", "региону", "принадлежит", "Вальверде", "и", "каково", "ее", "население", "?"]}, "query_toks": {"en": ["select", "population", ",", "region", "from", "country", "where", "name", "=", "\"Angola\"", ";"], "ru": ["select", "population", ",", "region", "from", "country", "where", "name", "=", "\"Вальверде\"", ";"]}, "query_toks_no_values": {"en": ["select", "population", ",", "region", "from", "country", "where", "name", "=", "value", ";"], "ru": ["select", "population", ",", "region", "from", "country", "where", "name", "=", "value", ";"]}}, {"id": "D_0719", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\";", "ru": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Средиземье\";"}, "question": {"en": "What is the average expected life expectancy for countries in the region of Central Africa?", "ru": "Какова средняя ожидаемая продолжительность жизни в странах региона Средиземье?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Central Africa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Средиземье\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "expected", "life", "expectancy", "for", "countries", "in", "the", "region", "of", "Central", "Africa", "?"], "ru": ["Какова", "средняя", "ожидаемая", "продолжительность", "жизни", "в", "странах", "региона", "Средиземье", "?"]}, "query_toks": {"en": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "region", "=", "\"Central Africa\"", ";"], "ru": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "region", "=", "\"Средиземье\"", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "region", "=", "value", ";"], "ru": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "region", "=", "value", ";"]}}, {"id": "D_0720", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\";", "ru": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Средиземье\";"}, "question": {"en": "How long is the people’s average life expectancy in Central Africa?", "ru": "Какая средняя продолжительность жизни в Средиземье?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Central Africa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Средиземье\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "long", "is", "the", "people", "’", "s", "average", "life", "expectancy", "in", "Central", "Africa", "?"], "ru": ["Какая", "средняя", "продолжительность", "жизни", "в", "Средиземье", "?"]}, "query_toks": {"en": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "region", "=", "\"Central Africa\"", ";"], "ru": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "region", "=", "\"Средиземье\"", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "region", "=", "value", ";"], "ru": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "region", "=", "value", ";"]}}, {"id": "D_0721", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1;", "ru": "SELECT Name FROM country WHERE Continent  =  \"Атлантида\" ORDER BY LifeExpectancy LIMIT 1;"}, "question": {"en": "What is the name of country that has the shortest life expectancy in Asia?", "ru": "Как называется страна с самой короткой продолжительностью жизни в Атлантиде?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "country", "that", "has", "the", "shortest", "life", "expectancy", "in", "Asia", "?"], "ru": ["Как", "называется", "страна", "с", "самой", "короткой", "продолжительностью", "жизни", "в", "Атлантиде", "?"]}, "query_toks": {"en": ["select", "name", "from", "country", "where", "continent", "=", "\"Asia\"", "order", "by", "lifeexpectancy", "limit", "1", ";"], "ru": ["select", "name", "from", "country", "where", "continent", "=", "\"Атлантида\"", "order", "by", "lifeexpectancy", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "country", "where", "continent", "=", "value", "order", "by", "lifeexpectancy", "limit", "1", ";"], "ru": ["select", "name", "from", "country", "where", "continent", "=", "value", "order", "by", "lifeexpectancy", "limit", "1", ";"]}}, {"id": "D_0722", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1;", "ru": "SELECT Name FROM country WHERE Continent  =  \"Атлантида\" ORDER BY LifeExpectancy LIMIT 1;"}, "question": {"en": "Give the name of the country in Asia with the lowest life expectancy.", "ru": "Назовите страну в Атлантиде с самой низкой продолжительностью жизни."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "name", "of", "the", "country", "in", "Asia", "with", "the", "lowest", "life", "expectancy", "."], "ru": ["Назовите", "страну", "в", "Атлантиде", "с", "самой", "низкой", "продолжительностью", "жизни", "."]}, "query_toks": {"en": ["select", "name", "from", "country", "where", "continent", "=", "\"Asia\"", "order", "by", "lifeexpectancy", "limit", "1", ";"], "ru": ["select", "name", "from", "country", "where", "continent", "=", "\"Атлантида\"", "order", "by", "lifeexpectancy", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "country", "where", "continent", "=", "value", "order", "by", "lifeexpectancy", "limit", "1", ";"], "ru": ["select", "name", "from", "country", "where", "continent", "=", "value", "order", "by", "lifeexpectancy", "limit", "1", ";"]}}, {"id": "D_0723", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\";", "ru": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Атлантида\";"}, "question": {"en": "What is the total population and maximum GNP in Asia?", "ru": "Какова общая численность населения и максимальный ВНП в Атлантиде?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [1, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [1, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "total", "population", "and", "maximum", "GNP", "in", "Asia", "?"], "ru": ["Какова", "общая", "численность", "населения", "и", "максимальный", "ВНП", "в", "Атлантиде", "?"]}, "query_toks": {"en": ["select", "sum", "(", "population", ")", ",", "max", "(", "gnp", ")", "from", "country", "where", "continent", "=", "\"Asia\"", ";"], "ru": ["select", "sum", "(", "population", ")", ",", "max", "(", "gnp", ")", "from", "country", "where", "continent", "=", "\"Атлантида\"", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "population", ")", ",", "max", "(", "gnp", ")", "from", "country", "where", "continent", "=", "value", ";"], "ru": ["select", "sum", "(", "population", ")", ",", "max", "(", "gnp", ")", "from", "country", "where", "continent", "=", "value", ";"]}}, {"id": "D_0724", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\";", "ru": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Атлантида\";"}, "question": {"en": "How many people live in Asia, and what is the largest GNP among them?", "ru": "Сколько людей живет в Атлантиде и какой у них самый большой ВНП?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [1, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [1, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "people", "live", "in", "Asia", ",", "and", "what", "is", "the", "largest", "GNP", "among", "them", "?"], "ru": ["Сколько", "людей", "живет", "в", "Атлантиде", "и", "какой", "у", "них", "самый", "большой", "ВНП", "?"]}, "query_toks": {"en": ["select", "sum", "(", "population", ")", ",", "max", "(", "gnp", ")", "from", "country", "where", "continent", "=", "\"Asia\"", ";"], "ru": ["select", "sum", "(", "population", ")", ",", "max", "(", "gnp", ")", "from", "country", "where", "continent", "=", "\"Атлантида\"", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "population", ")", ",", "max", "(", "gnp", ")", "from", "country", "where", "continent", "=", "value", ";"], "ru": ["select", "sum", "(", "population", ")", ",", "max", "(", "gnp", ")", "from", "country", "where", "continent", "=", "value", ";"]}}, {"id": "D_0725", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\";", "ru": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Атлантида\" AND GovernmentForm  =  \"Абсолютная монархия\";"}, "question": {"en": "What is the average life expectancy in African countries that are republics?", "ru": "Какова средняя продолжительность жизни в абсолютных монархиях Атлантиды?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"Абсолютная монархия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "life", "expectancy", "in", "African", "countries", "that", "are", "republics", "?"], "ru": ["Какова", "средняя", "продолжительность", "жизни", "в", "абсолютных", "монархиях", "Атлантиды", "?"]}, "query_toks": {"en": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "continent", "=", "\"Africa\"", "and", "governmentform", "=", "\"Republic\"", ";"], "ru": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "continent", "=", "\"Атлантида\"", "and", "governmentform", "=", "\"Абсолютная монархия\"", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "continent", "=", "value", "and", "governmentform", "=", "value", ";"], "ru": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "continent", "=", "value", "and", "governmentform", "=", "value", ";"]}}, {"id": "D_0726", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\";", "ru": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Атлантида\" AND GovernmentForm  =  \"Абсолютная монархия\";"}, "question": {"en": "Give the average life expectancy for countries in Africa which are republics?", "ru": "Приведи среднюю продолжительность жизни в странах Атлантиды, которые являются абсолютными монархиями"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null], "and", [false, 2, [0, [0, 19, false], null], "\"Абсолютная монархия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "average", "life", "expectancy", "for", "countries", "in", "Africa", "which", "are", "republics", "?"], "ru": ["Приведи", "среднюю", "продолжительность", "жизни", "в", "странах", "Атлантиды", ",", "которые", "являются", "абсолютными", "монархиями"]}, "query_toks": {"en": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "continent", "=", "\"Africa\"", "and", "governmentform", "=", "\"Republic\"", ";"], "ru": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "continent", "=", "\"Атлантида\"", "and", "governmentform", "=", "\"Абсолютная монархия\"", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "continent", "=", "value", "and", "governmentform", "=", "value", ";"], "ru": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "continent", "=", "value", "and", "governmentform", "=", "value", ";"]}}, {"id": "D_0727", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\";", "ru": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Атлантида\" OR Continent  =  \"Гиперборея\";"}, "question": {"en": "What is the total surface area of the continents Asia and Europe?", "ru": "Какова общая площадь континентов Атлантида и Гиперборея?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Europe\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Гиперборея\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "total", "surface", "area", "of", "the", "continents", "Asia", "and", "Europe", "?"], "ru": ["Какова", "общая", "площадь", "континентов", "Атлантида", "и", "Гиперборея", "?"]}, "query_toks": {"en": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"Asia\"", "or", "continent", "=", "\"Europe\"", ";"], "ru": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"Атлантида\"", "or", "continent", "=", "\"Гиперборея\"", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "or", "continent", "=", "value", ";"], "ru": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "or", "continent", "=", "value", ";"]}}, {"id": "D_0728", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\";", "ru": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Атлантида\" OR Continent  =  \"Гиперборея\";"}, "question": {"en": "Give the total surface area covered by countries in Asia or Europe.", "ru": "Укажите общую площадь, покрытую странами Атлантиды или Гипербореи."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Europe\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null], "or", [false, 2, [0, [0, 10, false], null], "\"Гиперборея\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "total", "surface", "area", "covered", "by", "countries", "in", "Asia", "or", "Europe", "."], "ru": ["Укажите", "общую", "площадь", ",", "покрытую", "странами", "Атлантиды", "или", "Гипербореи", "."]}, "query_toks": {"en": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"Asia\"", "or", "continent", "=", "\"Europe\"", ";"], "ru": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"Атлантида\"", "or", "continent", "=", "\"Гиперборея\"", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "or", "continent", "=", "value", ";"], "ru": ["select", "sum", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "or", "continent", "=", "value", ";"]}}, {"id": "D_0729", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\";", "ru": "SELECT sum(Population) FROM city WHERE District  =  \"Одинцовский\";"}, "question": {"en": "How many people live in Gelderland district?", "ru": "Сколько человек проживает в районе Одинцовский?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[4, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Gelderland\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[4, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Одинцовский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "people", "live", "in", "Gelderland", "district", "?"], "ru": ["Сколько", "человек", "проживает", "в", "районе", "Одинцовский", "?"]}, "query_toks": {"en": ["select", "sum", "(", "population", ")", "from", "city", "where", "district", "=", "\"Gelderland\"", ";"], "ru": ["select", "sum", "(", "population", ")", "from", "city", "where", "district", "=", "\"Одинцовский\"", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "population", ")", "from", "city", "where", "district", "=", "value", ";"], "ru": ["select", "sum", "(", "population", ")", "from", "city", "where", "district", "=", "value", ";"]}}, {"id": "D_0730", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\";", "ru": "SELECT sum(Population) FROM city WHERE District  =  \"Одинцовский\";"}, "question": {"en": "What is the total population of Gelderland district?", "ru": "Какова общая численность населения Одинцовского района?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[4, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Gelderland\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[4, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Одинцовский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "total", "population", "of", "Gelderland", "district", "?"], "ru": ["Какова", "общая", "численность", "населения", "Одинцовского", "района", "?"]}, "query_toks": {"en": ["select", "sum", "(", "population", ")", "from", "city", "where", "district", "=", "\"Gelderland\"", ";"], "ru": ["select", "sum", "(", "population", ")", "from", "city", "where", "district", "=", "\"Одинцовский\"", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "population", ")", "from", "city", "where", "district", "=", "value", ";"], "ru": ["select", "sum", "(", "population", ")", "from", "city", "where", "district", "=", "value", ";"]}}, {"id": "D_0731", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\";", "ru": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"Смешанная республика\";"}, "question": {"en": "What is the average GNP and total population in all nations whose government is US territory?", "ru": "Каков средний ВНП и общая численность населения во всех странах, правительство которых смешанная республика?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 16, false], null]], [4, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"US Territory\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 16, false], null]], [4, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Смешанная республика\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "GNP", "and", "total", "population", "in", "all", "nations", "whose", "government", "is", "US", "territory", "?"], "ru": ["Каков", "средний", "ВНП", "и", "общая", "численность", "населения", "во", "всех", "странах", ",", "правительство", "которых", "смешанная", "республика", "?"]}, "query_toks": {"en": ["select", "avg", "(", "gnp", ")", ",", "sum", "(", "population", ")", "from", "country", "where", "governmentform", "=", "\"US Territory\"", ";"], "ru": ["select", "avg", "(", "gnp", ")", ",", "sum", "(", "population", ")", "from", "country", "where", "governmentform", "=", "\"Смешанная республика\"", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "gnp", ")", ",", "sum", "(", "population", ")", "from", "country", "where", "governmentform", "=", "value", ";"], "ru": ["select", "avg", "(", "gnp", ")", ",", "sum", "(", "population", ")", "from", "country", "where", "governmentform", "=", "value", ";"]}}, {"id": "D_0732", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\";", "ru": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"Смешанная республика\";"}, "question": {"en": "Give the mean GNP and total population of nations which are considered US territory.", "ru": "Укажите средний ВНП и общую численность населения стран, считающихся смешанной республикой."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 16, false], null]], [4, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"US Territory\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 16, false], null]], [4, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Смешанная республика\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "mean", "GNP", "and", "total", "population", "of", "nations", "which", "are", "considered", "US", "territory", "."], "ru": ["Укажите", "средний", "ВНП", "и", "общую", "численность", "населения", "стран", ",", "считающихся", "смешанной", "республикой", "."]}, "query_toks": {"en": ["select", "avg", "(", "gnp", ")", ",", "sum", "(", "population", ")", "from", "country", "where", "governmentform", "=", "\"US Territory\"", ";"], "ru": ["select", "avg", "(", "gnp", ")", ",", "sum", "(", "population", ")", "from", "country", "where", "governmentform", "=", "\"Смешанная республика\"", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "gnp", ")", ",", "sum", "(", "population", ")", "from", "country", "where", "governmentform", "=", "value", ";"], "ru": ["select", "avg", "(", "gnp", ")", ",", "sum", "(", "population", ")", "from", "country", "where", "governmentform", "=", "value", ";"]}}, {"id": "D_0733", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage;", "ru": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage;"}, "question": {"en": "How many unique languages are spoken in the world?", "ru": "На скольких уникальных языках говорят в мире?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 24, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 24, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "unique", "languages", "are", "spoken", "in", "the", "world", "?"], "ru": ["На", "скольких", "уникальных", "языках", "говорят", "в", "мире", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "language", ")", "from", "countrylanguage", ";"], "ru": ["select", "count", "(", "distinct", "language", ")", "from", "countrylanguage", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "language", ")", "from", "countrylanguage", ";"], "ru": ["select", "count", "(", "distinct", "language", ")", "from", "countrylanguage", ";"]}}, {"id": "D_0734", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage;", "ru": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage;"}, "question": {"en": "What is the number of distinct languages used around the world?", "ru": "Какое количество различных языков используется в мире?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 24, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 24, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "number", "of", "distinct", "languages", "used", "around", "the", "world", "?"], "ru": ["Какое", "количество", "различных", "языков", "используется", "в", "мире", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "language", ")", "from", "countrylanguage", ";"], "ru": ["select", "count", "(", "distinct", "language", ")", "from", "countrylanguage", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "language", ")", "from", "countrylanguage", ";"], "ru": ["select", "count", "(", "distinct", "language", ")", "from", "countrylanguage", ";"]}}, {"id": "D_0735", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\";", "ru": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Гиперборея\";"}, "question": {"en": "How many type of governments are in Africa?", "ru": "Сколько типов правительств существует в Гиперборее?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 19, true], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 19, true], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Гиперборея\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "type", "of", "governments", "are", "in", "Africa", "?"], "ru": ["Сколько", "типов", "правительств", "существует", "в", "Гиперборее", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "governmentform", ")", "from", "country", "where", "continent", "=", "\"Africa\"", ";"], "ru": ["select", "count", "(", "distinct", "governmentform", ")", "from", "country", "where", "continent", "=", "\"Гиперборея\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "governmentform", ")", "from", "country", "where", "continent", "=", "value", ";"], "ru": ["select", "count", "(", "distinct", "governmentform", ")", "from", "country", "where", "continent", "=", "value", ";"]}}, {"id": "D_0736", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\";", "ru": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Гиперборея\";"}, "question": {"en": "How many different forms of governments are there in Africa?", "ru": "Сколько различных форм правления существует в Гиперборее?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 19, true], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 19, true], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Гиперборея\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "different", "forms", "of", "governments", "are", "there", "in", "Africa", "?"], "ru": ["Сколько", "различных", "форм", "правления", "существует", "в", "Гиперборее", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "governmentform", ")", "from", "country", "where", "continent", "=", "\"Africa\"", ";"], "ru": ["select", "count", "(", "distinct", "governmentform", ")", "from", "country", "where", "continent", "=", "\"Гиперборея\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "governmentform", ")", "from", "country", "where", "continent", "=", "value", ";"], "ru": ["select", "count", "(", "distinct", "governmentform", ")", "from", "country", "where", "continent", "=", "value", ";"]}}, {"id": "D_0737", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\";", "ru": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Ваканда\";"}, "question": {"en": "What is the total number of languages used in Aruba?", "ru": "Какое общее количество языков используется в Ваканде?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Aruba\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Ваканда\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "total", "number", "of", "languages", "used", "in", "Aruba", "?"], "ru": ["Какое", "общее", "количество", "языков", "используется", "в", "Ваканде", "?"]}, "query_toks": {"en": ["select", "count", "(", "t2.language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "\"Aruba\"", ";"], "ru": ["select", "count", "(", "t2.language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "\"Ваканда\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "t2.language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "value", ";"], "ru": ["select", "count", "(", "t2.language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "value", ";"]}}, {"id": "D_0738", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\";", "ru": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Ваканда\";"}, "question": {"en": "How many languages are spoken in Aruba?", "ru": "На скольких языках говорят в Ваканде?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Aruba\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Ваканда\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "languages", "are", "spoken", "in", "Aruba", "?"], "ru": ["На", "скольких", "языках", "говорят", "в", "Ваканде", "?"]}, "query_toks": {"en": ["select", "count", "(", "t2.language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "\"Aruba\"", ";"], "ru": ["select", "count", "(", "t2.language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "\"Ваканда\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "t2.language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "value", ";"], "ru": ["select", "count", "(", "t2.language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "value", ";"]}}, {"id": "D_0739", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\";", "ru": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Нордхейм\" AND IsOfficial  =  \"T\";"}, "question": {"en": "How many official languages does Afghanistan have?", "ru": "Сколько официальных языков в Нордхейме?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Afghanistan\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Нордхейм\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "official", "languages", "does", "Afghanistan", "have", "?"], "ru": ["Сколько", "официальных", "языков", "в", "Нордхейме", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "\"Afghanistan\"", "and", "isofficial", "=", "\"T\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "\"Нордхейм\"", "and", "isofficial", "=", "\"T\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "value", "and", "isofficial", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "value", "and", "isofficial", "=", "value", ";"]}}, {"id": "D_0740", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\";", "ru": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Нордхейм\" AND IsOfficial  =  \"T\";"}, "question": {"en": "How many official languages are spoken in Afghanistan?", "ru": "На скольких официальных языках говорят в Нордхейме?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Afghanistan\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Нордхейм\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "official", "languages", "are", "spoken", "in", "Afghanistan", "?"], "ru": ["На", "скольких", "официальных", "языках", "говорят", "в", "Нордхейме", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "\"Afghanistan\"", "and", "isofficial", "=", "\"T\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "\"Нордхейм\"", "and", "isofficial", "=", "\"T\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "value", "and", "isofficial", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.name", "=", "value", "and", "isofficial", "=", "value", ";"]}}, {"id": "D_0741", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1;", "ru": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1;"}, "question": {"en": "What is name of the country that speaks the largest number of languages?", "ru": "Как называется страна, говорящая на наибольшем количестве языков?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "name", "of", "the", "country", "that", "speaks", "the", "largest", "number", "of", "languages", "?"], "ru": ["Как", "называется", "страна", ",", "говорящая", "на", "наибольшем", "количестве", "языков", "?"]}, "query_toks": {"en": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0742", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1;", "ru": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1;"}, "question": {"en": "Give the name of the nation that uses the greatest amount of languages.", "ru": "Укажи название нации, которая использует наибольшее количество языков."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "name", "of", "the", "nation", "that", "uses", "the", "greatest", "amount", "of", "languages", "."], "ru": ["Укажи", "название", "нации", ",", "которая", "использует", "наибольшее", "количество", "языков", "."]}, "query_toks": {"en": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0743", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1;", "ru": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1;"}, "question": {"en": "Which continent has the most diverse languages?", "ru": "На каком континенте самые разные языки?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "continent", "has", "the", "most", "diverse", "languages", "?"], "ru": ["На", "каком", "континенте", "самые", "разные", "языки", "?"]}, "query_toks": {"en": ["select", "t1.continent", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.continent", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.continent", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.continent", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.continent", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.continent", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.continent", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.continent", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0744", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1;", "ru": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1;"}, "question": {"en": "Which continent speaks the most languages?", "ru": "На каком континенте больше всего языков?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "continent", "speaks", "the", "most", "languages", "?"], "ru": ["На", "каком", "континенте", "больше", "всего", "языков", "?"]}, "query_toks": {"en": ["select", "t1.continent", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.continent", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.continent", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.continent", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.continent", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.continent", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.continent", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.continent", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0745", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\");", "ru": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Вакандийский\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Нордовский\");"}, "question": {"en": "How many countries speak both English and Dutch?", "ru": "Сколько стран говорят на вакандийском и нордовском языках?"}, "sql": {"en": {"from": {"table_units": [["sql", {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Dutch\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["sql", {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Нордовский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "countries", "speak", "both", "English", "and", "Dutch", "?"], "ru": ["Сколько", "стран", "говорят", "на", "вакандийском", "и", "нордовском", "языках", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"English\"", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Dutch\"", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Вакандийский\"", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Нордовский\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", ")", ";"]}}, {"id": "D_0746", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\");", "ru": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Вакандийский\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Нордовский\");"}, "question": {"en": "What is the number of nations that use English and Dutch?", "ru": "Сколько стран используют вакандийский и нордовский языки?"}, "sql": {"en": {"from": {"table_units": [["sql", {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Dutch\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["sql", {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Нордовский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "number", "of", "nations", "that", "use", "English", "and", "Dutch", "?"], "ru": ["Сколько", "стран", "используют", "вакандийский", "и", "нордовский", "языки", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"English\"", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Dutch\"", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Вакандийский\"", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Нордовский\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", ")", ";"]}}, {"id": "D_0747", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\";", "ru": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Вакандийский\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Дженоши\";"}, "question": {"en": "What are the names of nations speak both English and French?", "ru": "Как называются народы, говорящие на вакандийском и дженоши языках?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"French\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Дженоши\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "nations", "speak", "both", "English", "and", "French", "?"], "ru": ["Как", "называются", "народы", ",", "говорящие", "на", "вакандийском", "и", "дженоши", "языках", "?"]}, "query_toks": {"en": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"English\"", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"French\"", ";"], "ru": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Вакандийский\"", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Дженоши\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", ";"], "ru": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", ";"]}}, {"id": "D_0748", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\";", "ru": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Вакандийский\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Дженоши\";"}, "question": {"en": "Give the names of nations that speak both English and French.", "ru": "Назовите страны, говорящие на вакандийском и дженоши языках."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"French\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Дженоши\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "names", "of", "nations", "that", "speak", "both", "English", "and", "French", "."], "ru": ["Назовите", "страны", ",", "говорящие", "на", "вакандийском", "и", "дженоши", "языках", "."]}, "query_toks": {"en": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"English\"", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"French\"", ";"], "ru": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Вакандийский\"", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Дженоши\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", ";"], "ru": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", ";"]}}, {"id": "D_0749", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\";", "ru": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Вакандийский\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Дженоши\" AND T2.IsOfficial  =  \"T\";"}, "question": {"en": "What are the names of nations where both English and French are official languages?", "ru": "Как называются страны, в которых вакандийский и дженоши являются официальными языками?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"French\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Дженоши\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "nations", "where", "both", "English", "and", "French", "are", "official", "languages", "?"], "ru": ["Как", "называются", "страны", ",", "в", "которых", "вакандийский", "и", "дженоши", "являются", "официальными", "языками", "?"]}, "query_toks": {"en": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"English\"", "and", "t2.isofficial", "=", "\"T\"", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"French\"", "and", "t2.isofficial", "=", "\"T\"", ";"], "ru": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Вакандийский\"", "and", "t2.isofficial", "=", "\"T\"", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Дженоши\"", "and", "t2.isofficial", "=", "\"T\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "t2.isofficial", "=", "value", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "t2.isofficial", "=", "value", ";"], "ru": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "t2.isofficial", "=", "value", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "t2.isofficial", "=", "value", ";"]}}, {"id": "D_0750", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\";", "ru": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Вакандийский\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Дженоши\" AND T2.IsOfficial  =  \"T\";"}, "question": {"en": "Give the names of countries with English and French as official languages.", "ru": "Назовите страны, официальными языками которых являются вакандийский и дженоши."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"French\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Дженоши\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "names", "of", "countries", "with", "English", "and", "French", "as", "official", "languages", "."], "ru": ["Назовите", "страны", ",", "официальными", "языками", "которых", "являются", "вакандийский", "и", "дженоши", "."]}, "query_toks": {"en": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"English\"", "and", "t2.isofficial", "=", "\"T\"", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"French\"", "and", "t2.isofficial", "=", "\"T\"", ";"], "ru": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Вакандийский\"", "and", "t2.isofficial", "=", "\"T\"", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Дженоши\"", "and", "t2.isofficial", "=", "\"T\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "t2.isofficial", "=", "value", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "t2.isofficial", "=", "value", ";"], "ru": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "t2.isofficial", "=", "value", "intersect", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "t2.isofficial", "=", "value", ";"]}}, {"id": "D_0751", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\";", "ru": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Клингонский\";"}, "question": {"en": "What is the number of distinct continents where Chinese is spoken?", "ru": "На каком количестве разных континентов говорят по-клингонски?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Chinese\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Клингонский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "number", "of", "distinct", "continents", "where", "Chinese", "is", "spoken", "?"], "ru": ["На", "каком", "количестве", "разных", "континентов", "говорят", "по-клингонски", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "continent", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Chinese\"", ";"], "ru": ["select", "count", "(", "distinct", "continent", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Клингонский\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "continent", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", ";"], "ru": ["select", "count", "(", "distinct", "continent", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", ";"]}}, {"id": "D_0752", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\";", "ru": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Клингонский\";"}, "question": {"en": "How many continents speak Chinese?", "ru": "На скольких континентах говорят по-клингонски?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Chinese\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Клингонский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "continents", "speak", "Chinese", "?"], "ru": ["На", "скольких", "континентах", "говорят", "по-клингонски", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "continent", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Chinese\"", ";"], "ru": ["select", "count", "(", "distinct", "continent", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Клингонский\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "continent", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", ";"], "ru": ["select", "count", "(", "distinct", "continent", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", ";"]}}, {"id": "D_0753", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\";", "ru": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Вакандийский\" OR T2.Language  =  \"Нордовский\";"}, "question": {"en": "What are the regions that use English or Dutch?", "ru": "В каких регионах используется вакандийский или нордовский язык?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "or", [false, 2, [0, [0, 24, false], null], "\"Dutch\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null], "or", [false, 2, [0, [0, 24, false], null], "\"Нордовский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "regions", "that", "use", "English", "or", "Dutch", "?"], "ru": ["В", "каких", "регионах", "используется", "вакандийский", "или", "нордовский", "язык", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.region", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"English\"", "or", "t2.language", "=", "\"Dutch\"", ";"], "ru": ["select", "distinct", "t1.region", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Вакандийский\"", "or", "t2.language", "=", "\"Нордовский\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.region", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "or", "t2.language", "=", "value", ";"], "ru": ["select", "distinct", "t1.region", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "or", "t2.language", "=", "value", ";"]}}, {"id": "D_0754", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\";", "ru": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Вакандийский\" OR T2.Language  =  \"Нордовский\";"}, "question": {"en": "Which regions speak Dutch or English?", "ru": "В каких регионах говорят на нордовском или вакандийском?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "or", [false, 2, [0, [0, 24, false], null], "\"Dutch\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null], "or", [false, 2, [0, [0, 24, false], null], "\"Нордовский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "regions", "speak", "Dutch", "or", "English", "?"], "ru": ["В", "каких", "регионах", "говорят", "на", "нордовском", "или", "вакандийском", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.region", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"English\"", "or", "t2.language", "=", "\"Dutch\"", ";"], "ru": ["select", "distinct", "t1.region", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Вакандийский\"", "or", "t2.language", "=", "\"Нордовский\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.region", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "or", "t2.language", "=", "value", ";"], "ru": ["select", "distinct", "t1.region", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "or", "t2.language", "=", "value", ";"]}}, {"id": "D_0755", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"English\" and isofficial  =  \"T\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"Dutch\" and isofficial  =  \"T\";", "ru": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"Вакандийский\" and isofficial  =  \"T\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"Нордовский\" and isofficial  =  \"T\";"}, "question": {"en": "What are the countries where either English or Dutch is the official language ?", "ru": "В каких странах вакандийский или нордовский язык является официальным языком?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Dutch\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Нордовский\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}}, "question_toks": {"en": ["What", "are", "the", "countries", "where", "either", "English", "or", "Dutch", "is", "the", "official", "language", "?"], "ru": ["В", "каких", "странах", "вакандийский", "или", "нордовский", "язык", "является", "официальным", "языком", "?"]}, "query_toks": {"en": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"English\"", "and", "isofficial", "=", "\"T\"", "union", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Dutch\"", "and", "isofficial", "=", "\"T\"", ";"], "ru": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Вакандийский\"", "and", "isofficial", "=", "\"T\"", "union", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Нордовский\"", "and", "isofficial", "=", "\"T\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "isofficial", "=", "value", "union", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "isofficial", "=", "value", ";"], "ru": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "isofficial", "=", "value", "union", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "isofficial", "=", "value", ";"]}}, {"id": "D_0756", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\";", "ru": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"Вакандийский\" and isofficial  =  \"T\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"Нордовский\" and isofficial  =  \"T\";"}, "question": {"en": "Which countries have either English or Dutch as an official language?", "ru": "В каких странах вакандийский или нордовский является официальным языком?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Dutch\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Нордовский\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}}, "question_toks": {"en": ["Which", "countries", "have", "either", "English", "or", "Dutch", "as", "an", "official", "language", "?"], "ru": ["В", "каких", "странах", "вакандийский", "или", "нордовский", "является", "официальным", "языком", "?"]}, "query_toks": {"en": ["select", "*", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"English\"", "and", "isofficial", "=", "\"T\"", "union", "select", "*", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Dutch\"", "and", "isofficial", "=", "\"T\"", ";"], "ru": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Вакандийский\"", "and", "isofficial", "=", "\"T\"", "union", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Нордовский\"", "and", "isofficial", "=", "\"T\"", ";"]}, "query_toks_no_values": {"en": ["select", "*", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "isofficial", "=", "value", "union", "select", "*", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "isofficial", "=", "value", ";"], "ru": ["select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "isofficial", "=", "value", "union", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "isofficial", "=", "value", ";"]}}, {"id": "D_0757", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1;", "ru": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Атлантида\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1;"}, "question": {"en": "Which language is the most popular on the Asian continent?", "ru": "Какой язык самый популярный на континенте Атлантиды?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [[0, 24, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null]], "groupBy": [[0, 24, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "language", "is", "the", "most", "popular", "on", "the", "Asian", "continent", "?"], "ru": ["Какой", "язык", "самый", "популярный", "на", "континенте", "Атлантиды", "?"]}, "query_toks": {"en": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.continent", "=", "\"Asia\"", "group", "by", "t2.language", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.continent", "=", "\"Атлантида\"", "group", "by", "t2.language", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.continent", "=", "value", "group", "by", "t2.language", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.continent", "=", "value", "group", "by", "t2.language", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0758", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1;", "ru": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Атлантида\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1;"}, "question": {"en": "What is the language that is used by the largest number of Asian nations?", "ru": "Какой язык используется большинством народов Атлантиды?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [[0, 24, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null]], "groupBy": [[0, 24, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "language", "that", "is", "used", "by", "the", "largest", "number", "of", "Asian", "nations", "?"], "ru": ["Какой", "язык", "используется", "большинством", "народов", "Атлантиды", "?"]}, "query_toks": {"en": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.continent", "=", "\"Asia\"", "group", "by", "t2.language", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.continent", "=", "\"Атлантида\"", "group", "by", "t2.language", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.continent", "=", "value", "group", "by", "t2.language", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.continent", "=", "value", "group", "by", "t2.language", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0759", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1;", "ru": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Абсолютная монархия\" GROUP BY T2.Language HAVING COUNT(*)  =  1;"}, "question": {"en": "Which languages are spoken by only one country in republic governments?", "ru": "На каких языках говорит только одна страна с абсолютной монархией?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [[0, 24, false]], "having": [[false, 2, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Абсолютная монархия\"", null]], "groupBy": [[0, 24, false]], "having": [[false, 2, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "languages", "are", "spoken", "by", "only", "one", "country", "in", "republic", "governments", "?"], "ru": ["На", "каких", "языках", "говорит", "только", "одна", "страна", "с", "абсолютной", "монархией", "?"]}, "query_toks": {"en": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.governmentform", "=", "\"Republic\"", "group", "by", "t2.language", "having", "count", "(", "*", ")", "=", "1", ";"], "ru": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.governmentform", "=", "\"Абсолютная монархия\"", "group", "by", "t2.language", "having", "count", "(", "*", ")", "=", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.governmentform", "=", "value", "group", "by", "t2.language", "having", "count", "(", "*", ")", "=", "1", ";"], "ru": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.governmentform", "=", "value", "group", "by", "t2.language", "having", "count", "(", "*", ")", "=", "1", ";"]}}, {"id": "D_0760", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1;", "ru": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Абсолютная монархия\" GROUP BY T2.Language HAVING COUNT(*)  =  1;"}, "question": {"en": "What languages are only used by a single country with a republic government?", "ru": "Какие языки используются только в одной стране с абсолютным монархическим правительством?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [[0, 24, false]], "having": [[false, 2, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"Абсолютная монархия\"", null]], "groupBy": [[0, 24, false]], "having": [[false, 2, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "languages", "are", "only", "used", "by", "a", "single", "country", "with", "a", "republic", "government", "?"], "ru": ["Какие", "языки", "используются", "только", "в", "одной", "стране", "с", "абсолютным", "монархическим", "правительством", "?"]}, "query_toks": {"en": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.governmentform", "=", "\"Republic\"", "group", "by", "t2.language", "having", "count", "(", "*", ")", "=", "1", ";"], "ru": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.governmentform", "=", "\"Абсолютная монархия\"", "group", "by", "t2.language", "having", "count", "(", "*", ")", "=", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.governmentform", "=", "value", "group", "by", "t2.language", "having", "count", "(", "*", ")", "=", "1", ";"], "ru": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.governmentform", "=", "value", "group", "by", "t2.language", "having", "count", "(", "*", ")", "=", "1", ";"]}}, {"id": "D_0761", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1;", "ru": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"Вакандийский\" ORDER BY T1.Population DESC LIMIT 1;"}, "question": {"en": "Find the city with the largest population that uses English.", "ru": "Найдите город с самым большим населением, использующим вакандийский язык."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "city", "with", "the", "largest", "population", "that", "uses", "English", "."], "ru": ["Найдите", "город", "с", "самым", "большим", "населением", ",", "использующим", "вакандийский", "язык", "."]}, "query_toks": {"en": ["select", "t1.name", ",", "t1.population", "from", "city", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.countrycode", "=", "t2.countrycode", "where", "t2.language", "=", "\"English\"", "order", "by", "t1.population", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", ",", "t1.population", "from", "city", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.countrycode", "=", "t2.countrycode", "where", "t2.language", "=", "\"Вакандийский\"", "order", "by", "t1.population", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", ",", "t1.population", "from", "city", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.countrycode", "=", "t2.countrycode", "where", "t2.language", "=", "value", "order", "by", "t1.population", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", ",", "t1.population", "from", "city", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.countrycode", "=", "t2.countrycode", "where", "t2.language", "=", "value", "order", "by", "t1.population", "desc", "limit", "1", ";"]}}, {"id": "D_0762", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1;", "ru": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"Вакандийский\" ORDER BY T1.Population DESC LIMIT 1;"}, "question": {"en": "What is the most populace city that speaks English?", "ru": "В каком городе с наибольшим населением говорят по-вакандийски?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "most", "populace", "city", "that", "speaks", "English", "?"], "ru": ["В", "каком", "городе", "с", "наибольшим", "населением", "говорят", "по-вакандийски", "?"]}, "query_toks": {"en": ["select", "t1.name", ",", "t1.population", "from", "city", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.countrycode", "=", "t2.countrycode", "where", "t2.language", "=", "\"English\"", "order", "by", "t1.population", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", ",", "t1.population", "from", "city", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.countrycode", "=", "t2.countrycode", "where", "t2.language", "=", "\"Вакандийский\"", "order", "by", "t1.population", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", ",", "t1.population", "from", "city", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.countrycode", "=", "t2.countrycode", "where", "t2.language", "=", "value", "order", "by", "t1.population", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", ",", "t1.population", "from", "city", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.countrycode", "=", "t2.countrycode", "where", "t2.language", "=", "value", "order", "by", "t1.population", "desc", "limit", "1", ";"]}}, {"id": "D_0763", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1;", "ru": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Атлантида\" ORDER BY SurfaceArea DESC LIMIT 1;"}, "question": {"en": "Find the name, population and expected life length of asian country with the largest area?", "ru": "Найдите название, население и ожидаемую продолжительность жизни страны в Атлантиде с самой большой площадью?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "name", ",", "population", "and", "expected", "life", "length", "of", "asian", "country", "with", "the", "largest", "area", "?"], "ru": ["Найдите", "название", ",", "население", "и", "ожидаемую", "продолжительность", "жизни", "страны", "в", "Атлантиде", "с", "самой", "большой", "площадью", "?"]}, "query_toks": {"en": ["select", "name", ",", "population", ",", "lifeexpectancy", "from", "country", "where", "continent", "=", "\"Asia\"", "order", "by", "surfacearea", "desc", "limit", "1", ";"], "ru": ["select", "name", ",", "population", ",", "lifeexpectancy", "from", "country", "where", "continent", "=", "\"Атлантида\"", "order", "by", "surfacearea", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "population", ",", "lifeexpectancy", "from", "country", "where", "continent", "=", "value", "order", "by", "surfacearea", "desc", "limit", "1", ";"], "ru": ["select", "name", ",", "population", ",", "lifeexpectancy", "from", "country", "where", "continent", "=", "value", "order", "by", "surfacearea", "desc", "limit", "1", ";"]}}, {"id": "D_0764", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1;", "ru": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Атлантида\" ORDER BY SurfaceArea DESC LIMIT 1;"}, "question": {"en": "What are the name, population, and life expectancy of the largest Asian country by land?", "ru": "Каково название, население и продолжительность жизни самой большой по территории суши страны в Атлантиде?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "name", ",", "population", ",", "and", "life", "expectancy", "of", "the", "largest", "Asian", "country", "by", "land", "?"], "ru": ["Каково", "название", ",", "население", "и", "продолжительность", "жизни", "самой", "большой", "по", "территории", "суши", "страны", "в", "Атлантиде", "?"]}, "query_toks": {"en": ["select", "name", ",", "population", ",", "lifeexpectancy", "from", "country", "where", "continent", "=", "\"Asia\"", "order", "by", "surfacearea", "desc", "limit", "1", ";"], "ru": ["select", "name", ",", "population", ",", "lifeexpectancy", "from", "country", "where", "continent", "=", "\"Атлантида\"", "order", "by", "surfacearea", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "population", ",", "lifeexpectancy", "from", "country", "where", "continent", "=", "value", "order", "by", "surfacearea", "desc", "limit", "1", ";"], "ru": ["select", "name", ",", "population", ",", "lifeexpectancy", "from", "country", "where", "continent", "=", "value", "order", "by", "surfacearea", "desc", "limit", "1", ";"]}}, {"id": "D_0765", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\");", "ru": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Вакандийский\" AND T2.IsOfficial  =  \"T\");"}, "question": {"en": "What is average life expectancy in the countries where English is not the official language?", "ru": "Какова средняя продолжительность жизни в странах, где вакандийский не является официальным языком?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "average", "life", "expectancy", "in", "the", "countries", "where", "English", "is", "not", "the", "official", "language", "?"], "ru": ["Какова", "средняя", "продолжительность", "жизни", "в", "странах", ",", "где", "вакандийский", "не", "является", "официальным", "языком", "?"]}, "query_toks": {"en": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"English\"", "and", "t2.isofficial", "=", "\"T\"", ")", ";"], "ru": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Вакандийский\"", "and", "t2.isofficial", "=", "\"T\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "t2.isofficial", "=", "value", ")", ";"], "ru": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "t2.isofficial", "=", "value", ")", ";"]}}, {"id": "D_0766", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\");", "ru": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Вакандийский\" AND T2.IsOfficial  =  \"T\");"}, "question": {"en": "Give the mean life expectancy of countries in which English is not the official language.", "ru": "Приведите среднюю продолжительность жизни в странах, в которых вакандийский не является официальным языком."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 15, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "mean", "life", "expectancy", "of", "countries", "in", "which", "English", "is", "not", "the", "official", "language", "."], "ru": ["Приведите", "среднюю", "продолжительность", "жизни", "в", "странах", ",", "в", "которых", "вакандийский", "не", "является", "официальным", "языком", "."]}, "query_toks": {"en": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"English\"", "and", "t2.isofficial", "=", "\"T\"", ")", ";"], "ru": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Вакандийский\"", "and", "t2.isofficial", "=", "\"T\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "t2.isofficial", "=", "value", ")", ";"], "ru": ["select", "avg", "(", "lifeexpectancy", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", "and", "t2.isofficial", "=", "value", ")", ";"]}}, {"id": "D_0767", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\");", "ru": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Вакандийский\");"}, "question": {"en": "What is the total number of people living in the nations that do not use English?", "ru": "Каково общее количество людей, проживающих в странах, не использующих вакандийский язык?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "total", "number", "of", "people", "living", "in", "the", "nations", "that", "do", "not", "use", "English", "?"], "ru": ["Каково", "общее", "количество", "людей", ",", "проживающих", "в", "странах", ",", "не", "использующих", "вакандийский", "язык", "?"]}, "query_toks": {"en": ["select", "sum", "(", "population", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"English\"", ")", ";"], "ru": ["select", "sum", "(", "population", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Вакандийский\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "population", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", ")", ";"], "ru": ["select", "sum", "(", "population", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", ")", ";"]}}, {"id": "D_0768", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\");", "ru": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Вакандийский\");"}, "question": {"en": "How many people live in countries that do not speak English?", "ru": "Сколько людей живет в странах, где не говорят по-вакандийски?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "people", "live", "in", "countries", "that", "do", "not", "speak", "English", "?"], "ru": ["Сколько", "людей", "живет", "в", "странах", ",", "где", "не", "говорят", "по-вакандийски", "?"]}, "query_toks": {"en": ["select", "sum", "(", "population", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"English\"", ")", ";"], "ru": ["select", "sum", "(", "population", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "\"Вакандийский\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "population", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", ")", ";"], "ru": ["select", "sum", "(", "population", ")", "from", "country", "where", "name", "not", "in", "(", "select", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t2.language", "=", "value", ")", ";"]}}, {"id": "D_0769", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\";", "ru": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Ангела\" AND T2.IsOfficial  =  \"T\";"}, "question": {"en": "What is the official language spoken in the country whose head of state is Beatrix?", "ru": "На каком официальном языке говорят в стране, главой государства которой является Ангела?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Beatrix\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Ангела\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "official", "language", "spoken", "in", "the", "country", "whose", "head", "of", "state", "is", "Beatrix", "?"], "ru": ["На", "каком", "официальном", "языке", "говорят", "в", "стране", ",", "главой", "государства", "которой", "является", "Ангела", "?"]}, "query_toks": {"en": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.headofstate", "=", "\"Beatrix\"", "and", "t2.isofficial", "=", "\"T\"", ";"], "ru": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.headofstate", "=", "\"Ангела\"", "and", "t2.isofficial", "=", "\"T\"", ";"]}, "query_toks_no_values": {"en": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.headofstate", "=", "value", "and", "t2.isofficial", "=", "value", ";"], "ru": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.headofstate", "=", "value", "and", "t2.isofficial", "=", "value", ";"]}}, {"id": "D_0770", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\";", "ru": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Ангела\" AND T2.IsOfficial  =  \"T\";"}, "question": {"en": "What is the official language used in the country the name of whose head of state is Beatrix.", "ru": "Какой официальный язык используется в стране, главу государства которой зовут Ангела?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Beatrix\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Ангела\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "official", "language", "used", "in", "the", "country", "the", "name", "of", "whose", "head", "of", "state", "is", "Beatrix", "."], "ru": ["Какой", "официальный", "язык", "используется", "в", "стране", ",", "главу", "государства", "которой", "зовут", "Ангела", "?"]}, "query_toks": {"en": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.headofstate", "=", "\"Beatrix\"", "and", "t2.isofficial", "=", "\"T\"", ";"], "ru": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.headofstate", "=", "\"Ангела\"", "and", "t2.isofficial", "=", "\"T\"", ";"]}, "query_toks_no_values": {"en": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.headofstate", "=", "value", "and", "t2.isofficial", "=", "value", ";"], "ru": ["select", "t2.language", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "t1.headofstate", "=", "value", "and", "t2.isofficial", "=", "value", ";"]}}, {"id": "D_0771", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\";", "ru": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\";"}, "question": {"en": "What is the total number of unique official languages spoken in the countries that are founded before 1930?", "ru": "Каково общее количество уникальных официальных языков, на которых говорят в странах, основанных до 1930 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, true], null]]]], "where": [[false, 4, [0, [0, 13, false], null], 1930.0, null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, true], null]]]], "where": [[false, 4, [0, [0, 13, false], null], 1930.0, null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "total", "number", "of", "unique", "official", "languages", "spoken", "in", "the", "countries", "that", "are", "founded", "before", "1930", "?"], "ru": ["Каково", "общее", "количество", "уникальных", "официальных", "языков", ",", "на", "которых", "говорят", "в", "странах", ",", "основанных", "до", "1930", "года", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "t2.language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "indepyear", "<", "1930", "and", "t2.isofficial", "=", "\"T\"", ";"], "ru": ["select", "count", "(", "distinct", "t2.language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "indepyear", "<", "1930", "and", "t2.isofficial", "=", "\"T\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "t2.language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "indepyear", "<", "1930", "and", "t2.isofficial", "=", "value", ";"], "ru": ["select", "count", "(", "distinct", "t2.language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "indepyear", "<", "1930", "and", "t2.isofficial", "=", "value", ";"]}}, {"id": "D_0772", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\";", "ru": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\";"}, "question": {"en": "For the countries founded before 1930, what is the total number of distinct official languages?", "ru": "Каково общее количество различных официальных языков в странах, основанных до 1930 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, true], null]]]], "where": [[false, 4, [0, [0, 13, false], null], 1930.0, null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, true], null]]]], "where": [[false, 4, [0, [0, 13, false], null], 1930.0, null], "and", [false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["For", "the", "countries", "founded", "before", "1930", ",", "what", "is", "the", "total", "number", "of", "distinct", "official", "languages", "?"], "ru": ["Каково", "общее", "количество", "различных", "официальных", "языков", "в", "странах", ",", "основанных", "до", "1930", "года", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "t2.language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "indepyear", "<", "1930", "and", "t2.isofficial", "=", "\"T\"", ";"], "ru": ["select", "count", "(", "distinct", "t2.language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "indepyear", "<", "1930", "and", "t2.isofficial", "=", "\"T\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "t2.language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "indepyear", "<", "1930", "and", "t2.isofficial", "=", "value", ";"], "ru": ["select", "count", "(", "distinct", "t2.language", ")", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "where", "indepyear", "<", "1930", "and", "t2.isofficial", "=", "value", ";"]}}, {"id": "D_0773", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\");", "ru": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Лемурия\");"}, "question": {"en": "What are the countries that have greater surface area than any country in Europe?", "ru": "Какие страны имеют большую площадь, чем любая страна в Лемурии?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Лемурия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "countries", "that", "have", "greater", "surface", "area", "than", "any", "country", "in", "Europe", "?"], "ru": ["Какие", "страны", "имеют", "большую", "площадь", ",", "чем", "любая", "страна", "в", "Лемурии", "?"]}, "query_toks": {"en": ["select", "name", "from", "country", "where", "surfacearea", ">", "(", "select", "min", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"Europe\"", ")", ";"], "ru": ["select", "name", "from", "country", "where", "surfacearea", ">", "(", "select", "min", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"Лемурия\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "country", "where", "surfacearea", ">", "(", "select", "min", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", ")", ";"], "ru": ["select", "name", "from", "country", "where", "surfacearea", ">", "(", "select", "min", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", ")", ";"]}}, {"id": "D_0774", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\");", "ru": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Лемурия\");"}, "question": {"en": "Which countries have greater area than that of any country in Europe?", "ru": "Какие страны имеют большую площадь, чем у любой страны Лемурии?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Лемурия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "countries", "have", "greater", "area", "than", "that", "of", "any", "country", "in", "Europe", "?"], "ru": ["Какие", "страны", "имеют", "большую", "площадь", ",", "чем", "у", "любой", "страны", "Лемурии", "?"]}, "query_toks": {"en": ["select", "name", "from", "country", "where", "surfacearea", ">", "(", "select", "min", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"Europe\"", ")", ";"], "ru": ["select", "name", "from", "country", "where", "surfacearea", ">", "(", "select", "min", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"Лемурия\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "country", "where", "surfacearea", ">", "(", "select", "min", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", ")", ";"], "ru": ["select", "name", "from", "country", "where", "surfacearea", ">", "(", "select", "min", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", ")", ";"]}}, {"id": "D_0775", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\");", "ru": "SELECT Name FROM country WHERE Continent  =  \"Гиперборея\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Атлантида\");"}, "question": {"en": "What are the African countries that have a  population less than any country in Asia?", "ru": "В каких гиперборейских странах проживает меньше людей, чем в любой стране Атлантиды?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null], "and", [false, 4, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Гиперборея\"", null], "and", [false, 4, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "African", "countries", "that", "have", "a", "population", "less", "than", "any", "country", "in", "Asia", "?"], "ru": ["В", "каких", "гиперборейских", "странах", "проживает", "меньше", "людей", ",", "чем", "в", "любой", "стране", "Атлантиды", "?"]}, "query_toks": {"en": ["select", "name", "from", "country", "where", "continent", "=", "\"Africa\"", "and", "population", "<", "(", "select", "max", "(", "population", ")", "from", "country", "where", "continent", "=", "\"Asia\"", ")", ";"], "ru": ["select", "name", "from", "country", "where", "continent", "=", "\"Гиперборея\"", "and", "population", "<", "(", "select", "max", "(", "population", ")", "from", "country", "where", "continent", "=", "\"Атлантида\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "<", "(", "select", "max", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")", ";"], "ru": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "<", "(", "select", "max", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")", ";"]}}, {"id": "D_0776", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\");", "ru": "SELECT Name FROM country WHERE Continent  =  \"Гиперборея\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Атлантида\");"}, "question": {"en": "Which African countries have a smaller population than that of any country in Asia?", "ru": "В каких гиперборейских странах проживает меньше населения, чем в любой стране Атлантиды?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null], "and", [false, 4, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Гиперборея\"", null], "and", [false, 4, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "African", "countries", "have", "a", "smaller", "population", "than", "that", "of", "any", "country", "in", "Asia", "?"], "ru": ["В", "каких", "гиперборейских", "странах", "проживает", "меньше", "населения", ",", "чем", "в", "любой", "стране", "Атлантиды", "?"]}, "query_toks": {"en": ["select", "name", "from", "country", "where", "continent", "=", "\"Africa\"", "and", "population", "<", "(", "select", "min", "(", "population", ")", "from", "country", "where", "continent", "=", "\"Asia\"", ")", ";"], "ru": ["select", "name", "from", "country", "where", "continent", "=", "\"Гиперборея\"", "and", "population", "<", "(", "select", "max", "(", "population", ")", "from", "country", "where", "continent", "=", "\"Атлантида\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "<", "(", "select", "min", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")", ";"], "ru": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "<", "(", "select", "max", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")", ";"]}}, {"id": "D_0777", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\");", "ru": "SELECT Name FROM country WHERE Continent  =  \"Атлантида\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Гиперборея\");"}, "question": {"en": "Which Asian countries have a population that is larger than any country in Africa?", "ru": "Население каких стран Атлантиды больше, чем в любой стране Гипербореи?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null], "and", [false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null], "and", [false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Гиперборея\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "Asian", "countries", "have", "a", "population", "that", "is", "larger", "than", "any", "country", "in", "Africa", "?"], "ru": ["Население", "каких", "стран", "Атлантиды", "больше", ",", "чем", "в", "любой", "стране", "Гипербореи", "?"]}, "query_toks": {"en": ["select", "name", "from", "country", "where", "continent", "=", "\"Asia\"", "and", "population", ">", "(", "select", "max", "(", "population", ")", "from", "country", "where", "continent", "=", "\"Africa\"", ")", ";"], "ru": ["select", "name", "from", "country", "where", "continent", "=", "\"Атлантида\"", "and", "population", ">", "(", "select", "max", "(", "population", ")", "from", "country", "where", "continent", "=", "\"Гиперборея\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", ">", "(", "select", "max", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")", ";"], "ru": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", ">", "(", "select", "max", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")", ";"]}}, {"id": "D_0778", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\");", "ru": "SELECT Name FROM country WHERE Continent  =  \"Атлантида\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Гиперборея\");"}, "question": {"en": "What are the Asian countries which have a population larger than that of any country in Africa?", "ru": "В каких странах Атлантиды проживает больше людей, чем в любой другой стране Гипербореи?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null], "and", [false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[2, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Africa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null], "and", [false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Гиперборея\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "Asian", "countries", "which", "have", "a", "population", "larger", "than", "that", "of", "any", "country", "in", "Africa", "?"], "ru": ["В", "каких", "странах", "Атлантиды", "проживает", "больше", "людей", ",", "чем", "в", "любой", "другой", "стране", "Гипербореи", "?"]}, "query_toks": {"en": ["select", "name", "from", "country", "where", "continent", "=", "\"Asia\"", "and", "population", ">", "(", "select", "min", "(", "population", ")", "from", "country", "where", "continent", "=", "\"Africa\"", ")", ";"], "ru": ["select", "name", "from", "country", "where", "continent", "=", "\"Атлантида\"", "and", "population", ">", "(", "select", "max", "(", "population", ")", "from", "country", "where", "continent", "=", "\"Гиперборея\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", ">", "(", "select", "min", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")", ";"], "ru": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", ">", "(", "select", "max", "(", "population", ")", "from", "country", "where", "continent", "=", "value", ")", ";"]}}, {"id": "D_0779", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\";", "ru": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"Вакандийский\";"}, "question": {"en": "What are the country codes for countries that do not speak English?", "ru": "Какие коды стран у стран, в которых не говорят по-вакандийски?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["What", "are", "the", "country", "codes", "for", "countries", "that", "do", "not", "speak", "English", "?"], "ru": ["Какие", "коды", "стран", "у", "стран", ",", "в", "которых", "не", "говорят", "по-вакандийски", "?"]}, "query_toks": {"en": ["select", "countrycode", "from", "countrylanguage", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "\"English\"", ";"], "ru": ["select", "countrycode", "from", "countrylanguage", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "\"Вакандийский\"", ";"]}, "query_toks_no_values": {"en": ["select", "countrycode", "from", "countrylanguage", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value", ";"], "ru": ["select", "countrycode", "from", "countrylanguage", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value", ";"]}}, {"id": "D_0780", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\";", "ru": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"Вакандийский\";"}, "question": {"en": "Return the country codes for countries that do not speak English.", "ru": "Покажи коды стран для стран, в которых не говорят по-вакандийски."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["Return", "the", "country", "codes", "for", "countries", "that", "do", "not", "speak", "English", "."], "ru": ["Покажи", "коды", "стран", "для", "стран", ",", "в", "которых", "не", "говорят", "по-вакандийски", "."]}, "query_toks": {"en": ["select", "countrycode", "from", "countrylanguage", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "\"English\"", ";"], "ru": ["select", "countrycode", "from", "countrylanguage", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "\"Вакандийский\"", ";"]}, "query_toks_no_values": {"en": ["select", "countrycode", "from", "countrylanguage", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value", ";"], "ru": ["select", "countrycode", "from", "countrylanguage", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value", ";"]}}, {"id": "D_0781", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\";", "ru": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"Вакандийский\";"}, "question": {"en": "What are the country codes of countries where people use languages other than English?", "ru": "Каковы коды стран, в которых люди используют другие языки, кроме вакандийского?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [[false, 7, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [[false, 7, [0, [0, 24, false], null], "\"Вакандийский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "country", "codes", "of", "countries", "where", "people", "use", "languages", "other", "than", "English", "?"], "ru": ["Каковы", "коды", "стран", ",", "в", "которых", "люди", "используют", "другие", "языки", ",", "кроме", "вакандийского", "?"]}, "query_toks": {"en": ["select", "distinct", "countrycode", "from", "countrylanguage", "where", "language", "!=", "\"English\"", ";"], "ru": ["select", "distinct", "countrycode", "from", "countrylanguage", "where", "language", "!=", "\"Вакандийский\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "countrycode", "from", "countrylanguage", "where", "language", "!=", "value", ";"], "ru": ["select", "distinct", "countrycode", "from", "countrylanguage", "where", "language", "!=", "value", ";"]}}, {"id": "D_0782", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\";", "ru": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"Вакандийский\";"}, "question": {"en": "Give the country codes for countries in which people speak langauges that are not English.", "ru": "Укажите коды стран для стран, в которых люди говорят не на вакандийском языке."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [[false, 7, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [[false, 7, [0, [0, 24, false], null], "\"Вакандийский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "country", "codes", "for", "countries", "in", "which", "people", "speak", "langauges", "that", "are", "not", "English", "."], "ru": ["Укажите", "коды", "стран", "для", "стран", ",", "в", "которых", "люди", "говорят", "не", "на", "вакандийском", "языке", "."]}, "query_toks": {"en": ["select", "distinct", "countrycode", "from", "countrylanguage", "where", "language", "!=", "\"English\"", ";"], "ru": ["select", "distinct", "countrycode", "from", "countrylanguage", "where", "language", "!=", "\"Вакандийский\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "countrycode", "from", "countrylanguage", "where", "language", "!=", "value", ";"], "ru": ["select", "distinct", "countrycode", "from", "countrylanguage", "where", "language", "!=", "value", ";"]}}, {"id": "D_0783", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\";", "ru": "SELECT Code FROM country WHERE GovernmentForm != \"Абсолютная монархия\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"Вакандийский\";"}, "question": {"en": "What are the codes of the countries that do not speak English and whose government forms are not Republic?", "ru": "Каковы коды стран, которые не говорят по-вакандийски и чьи государственные формы не являются абсолютными монархиями?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 7, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 7, [0, [0, 19, false], null], "\"Абсолютная монархия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["What", "are", "the", "codes", "of", "the", "countries", "that", "do", "not", "speak", "English", "and", "whose", "government", "forms", "are", "not", "Republic", "?"], "ru": ["Каковы", "коды", "стран", ",", "которые", "не", "говорят", "по-вакандийски", "и", "чьи", "государственные", "формы", "не", "являются", "абсолютными", "монархиями", "?"]}, "query_toks": {"en": ["select", "code", "from", "country", "where", "governmentform", "!=", "\"Republic\"", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "\"English\"", ";"], "ru": ["select", "code", "from", "country", "where", "governmentform", "!=", "\"Абсолютная монархия\"", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "\"Вакандийский\"", ";"]}, "query_toks_no_values": {"en": ["select", "code", "from", "country", "where", "governmentform", "!=", "value", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value", ";"], "ru": ["select", "code", "from", "country", "where", "governmentform", "!=", "value", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value", ";"]}}, {"id": "D_0784", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\";", "ru": "SELECT Code FROM country WHERE GovernmentForm != \"Абсолютная монархия\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"Вакандийский\";"}, "question": {"en": "Return the codes of countries that do not speak English and do not have Republics for governments.", "ru": "Показать коды стран, в которых не говорят по-вакандийски и чья форма правительства не абсолютная монархия."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 7, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 7, [0, [0, 19, false], null], "\"Абсолютная монархия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["Return", "the", "codes", "of", "countries", "that", "do", "not", "speak", "English", "and", "do", "not", "have", "Republics", "for", "governments", "."], "ru": ["Показать", "коды", "стран", ",", "в", "которых", "не", "говорят", "по-вакандийски", "и", "чья", "форма", "правительства", "не", "абсолютная", "монархия", "."]}, "query_toks": {"en": ["select", "code", "from", "country", "where", "governmentform", "!=", "\"Republic\"", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "\"English\"", ";"], "ru": ["select", "code", "from", "country", "where", "governmentform", "!=", "\"Абсолютная монархия\"", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "\"Вакандийский\"", ";"]}, "query_toks_no_values": {"en": ["select", "code", "from", "country", "where", "governmentform", "!=", "value", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value", ";"], "ru": ["select", "code", "from", "country", "where", "governmentform", "!=", "value", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value", ";"]}}, {"id": "D_0785", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English');", "ru": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Гиперборея' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'Вакандийский');"}, "question": {"en": "Which cities are in European countries where English is not the official language?", "ru": "В каких городах гиперборейских стран вакандийский не является официальным языком?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null], "and", [true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Гиперборея\"", null], "and", [true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "cities", "are", "in", "European", "countries", "where", "English", "is", "not", "the", "official", "language", "?"], "ru": ["В", "каких", "городах", "гиперборейских", "стран", "вакандийский", "не", "является", "официальным", "языком", "?"]}, "query_toks": {"en": ["select", "distinct", "t2.name", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t2.countrycode", "=", "t1.code", "where", "t1.continent", "=", "\"Europe\"", "and", "t1.name", "not", "in", "(", "select", "t3.name", "from", "country", "as", "t3", "join", "countrylanguage", "as", "t4", "on", "t3.code", "=", "t4.countrycode", "where", "t4.isofficial", "=", "\"T\"", "and", "t4.language", "=", "\"English\"", ")", ";"], "ru": ["select", "distinct", "t2.name", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t2.countrycode", "=", "t1.code", "where", "t1.continent", "=", "\"Гиперборея\"", "and", "t1.name", "not", "in", "(", "select", "t3.name", "from", "country", "as", "t3", "join", "countrylanguage", "as", "t4", "on", "t3.code", "=", "t4.countrycode", "where", "t4.isofficial", "=", "\"T\"", "and", "t4.language", "=", "\"Вакандийский\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t2.name", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t2.countrycode", "=", "t1.code", "where", "t1.continent", "=", "value", "and", "t1.name", "not", "in", "(", "select", "t3.name", "from", "country", "as", "t3", "join", "countrylanguage", "as", "t4", "on", "t3.code", "=", "t4.countrycode", "where", "t4.isofficial", "=", "value", "and", "t4.language", "=", "value", ")", ";"], "ru": ["select", "distinct", "t2.name", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t2.countrycode", "=", "t1.code", "where", "t1.continent", "=", "value", "and", "t1.name", "not", "in", "(", "select", "t3.name", "from", "country", "as", "t3", "join", "countrylanguage", "as", "t4", "on", "t3.code", "=", "t4.countrycode", "where", "t4.isofficial", "=", "value", "and", "t4.language", "=", "value", ")", ";"]}}, {"id": "D_0786", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English');", "ru": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Гиперборея' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'Вакандийский');"}, "question": {"en": "What are the names of cities in Europe for which English is not the official language?", "ru": "Как называются города в Гиперборее, для которых вакандийский не является официальным языком?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null], "and", [true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 3, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Гиперборея\"", null], "and", [true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"Вакандийский\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "cities", "in", "Europe", "for", "which", "English", "is", "not", "the", "official", "language", "?"], "ru": ["Как", "называются", "города", "в", "Гиперборее", ",", "для", "которых", "вакандийский", "не", "является", "официальным", "языком", "?"]}, "query_toks": {"en": ["select", "distinct", "t2.name", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t2.countrycode", "=", "t1.code", "where", "t1.continent", "=", "\"Europe\"", "and", "t1.name", "not", "in", "(", "select", "t3.name", "from", "country", "as", "t3", "join", "countrylanguage", "as", "t4", "on", "t3.code", "=", "t4.countrycode", "where", "t4.isofficial", "=", "\"T\"", "and", "t4.language", "=", "\"English\"", ")", ";"], "ru": ["select", "distinct", "t2.name", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t2.countrycode", "=", "t1.code", "where", "t1.continent", "=", "\"Гиперборея\"", "and", "t1.name", "not", "in", "(", "select", "t3.name", "from", "country", "as", "t3", "join", "countrylanguage", "as", "t4", "on", "t3.code", "=", "t4.countrycode", "where", "t4.isofficial", "=", "\"T\"", "and", "t4.language", "=", "\"Вакандийский\"", ")", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t2.name", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t2.countrycode", "=", "t1.code", "where", "t1.continent", "=", "value", "and", "t1.name", "not", "in", "(", "select", "t3.name", "from", "country", "as", "t3", "join", "countrylanguage", "as", "t4", "on", "t3.code", "=", "t4.countrycode", "where", "t4.isofficial", "=", "value", "and", "t4.language", "=", "value", ")", ";"], "ru": ["select", "distinct", "t2.name", "from", "country", "as", "t1", "join", "city", "as", "t2", "on", "t2.countrycode", "=", "t1.code", "where", "t1.continent", "=", "value", "and", "t1.name", "not", "in", "(", "select", "t3.name", "from", "country", "as", "t3", "join", "countrylanguage", "as", "t4", "on", "t3.code", "=", "t4.countrycode", "where", "t4.isofficial", "=", "value", "and", "t4.language", "=", "value", ")", ";"]}}, {"id": "D_0787", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  'T' and t2.language  =  'Chinese' and t1.continent  =  \"Asia\";", "ru": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Клингонский' AND T1.Continent  =  \"Атлантида\";"}, "question": {"en": "Which unique cities are in Asian countries where Chinese is the official language ?", "ru": "Какие уникальные города находятся в странах Атлантиды, где клингонский язык является официальным языком?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 3, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"Chinese\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 3, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"Клингонский\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "unique", "cities", "are", "in", "Asian", "countries", "where", "Chinese", "is", "the", "official", "language", "?"], "ru": ["Какие", "уникальные", "города", "находятся", "в", "странах", "Атлантиды", ",", "где", "клингонский", "язык", "является", "официальным", "языком", "?"]}, "query_toks": {"en": ["select", "distinct", "t3.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "join", "city", "as", "t3", "on", "t1.code", "=", "t3.countrycode", "where", "t2.isofficial", "=", "\"T\"", "and", "t2.language", "=", "\"Chinese\"", "and", "t1.continent", "=", "\"Asia\"", ";"], "ru": ["select", "distinct", "t3.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "join", "city", "as", "t3", "on", "t1.code", "=", "t3.countrycode", "where", "t2.isofficial", "=", "\"T\"", "and", "t2.language", "=", "\"Клингонский\"", "and", "t1.continent", "=", "\"Атлантида\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t3.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "join", "city", "as", "t3", "on", "t1.code", "=", "t3.countrycode", "where", "t2.isofficial", "=", "value", "and", "t2.language", "=", "value", "and", "t1.continent", "=", "value", ";"], "ru": ["select", "distinct", "t3.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "join", "city", "as", "t3", "on", "t1.code", "=", "t3.countrycode", "where", "t2.isofficial", "=", "value", "and", "t2.language", "=", "value", "and", "t1.continent", "=", "value", ";"]}}, {"id": "D_0788", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\";", "ru": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Клингонский' AND T1.Continent  =  \"Атлантида\";"}, "question": {"en": "Return the different names of cities that are in Asia and for which Chinese is the official language.", "ru": "Верните разные названия городов в Атлантиде, для которых клингонский является официальным языком."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 3, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"Chinese\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 3, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 24, false], null], "\"Клингонский\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "different", "names", "of", "cities", "that", "are", "in", "Asia", "and", "for", "which", "Chinese", "is", "the", "official", "language", "."], "ru": ["Верните", "разные", "названия", "городов", "в", "Атлантиде", ",", "для", "которых", "клингонский", "является", "официальным", "языком", "."]}, "query_toks": {"en": ["select", "distinct", "t3.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "join", "city", "as", "t3", "on", "t1.code", "=", "t3.countrycode", "where", "t2.isofficial", "=", "\"T\"", "and", "t2.language", "=", "\"Chinese\"", "and", "t1.continent", "=", "\"Asia\"", ";"], "ru": ["select", "distinct", "t3.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "join", "city", "as", "t3", "on", "t1.code", "=", "t3.countrycode", "where", "t2.isofficial", "=", "\"T\"", "and", "t2.language", "=", "\"Клингонский\"", "and", "t1.continent", "=", "\"Атлантида\"", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t3.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "join", "city", "as", "t3", "on", "t1.code", "=", "t3.countrycode", "where", "t2.isofficial", "=", "value", "and", "t2.language", "=", "value", "and", "t1.continent", "=", "value", ";"], "ru": ["select", "distinct", "t3.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "join", "city", "as", "t3", "on", "t1.code", "=", "t3.countrycode", "where", "t2.isofficial", "=", "value", "and", "t2.language", "=", "value", "and", "t1.continent", "=", "value", ";"]}}, {"id": "D_0789", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1;", "ru": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1;"}, "question": {"en": "What are the name, independence year, and surface area of the country with the smallest population?", "ru": "Название, год независимости и площадь страны с наименьшим населением"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "name", ",", "independence", "year", ",", "and", "surface", "area", "of", "the", "country", "with", "the", "smallest", "population", "?"], "ru": ["Название", ",", "год", "независимости", "и", "площадь", "страны", "с", "наименьшим", "населением"]}, "query_toks": {"en": ["select", "name", ",", "surfacearea", ",", "indepyear", "from", "country", "order", "by", "population", "limit", "1", ";"], "ru": ["select", "name", ",", "surfacearea", ",", "indepyear", "from", "country", "order", "by", "population", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "surfacearea", ",", "indepyear", "from", "country", "order", "by", "population", "limit", "1", ";"], "ru": ["select", "name", ",", "surfacearea", ",", "indepyear", "from", "country", "order", "by", "population", "limit", "1", ";"]}}, {"id": "D_0790", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1;", "ru": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1;"}, "question": {"en": "Give the name, year of independence, and surface area of the country that has the lowest population.", "ru": "Укажите название, год независимости и площадь страны с наименьшим населением."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "name", ",", "year", "of", "independence", ",", "and", "surface", "area", "of", "the", "country", "that", "has", "the", "lowest", "population", "."], "ru": ["Укажите", "название", ",", "год", "независимости", "и", "площадь", "страны", "с", "наименьшим", "населением", "."]}, "query_toks": {"en": ["select", "name", ",", "surfacearea", ",", "indepyear", "from", "country", "order", "by", "population", "limit", "1", ";"], "ru": ["select", "name", ",", "surfacearea", ",", "indepyear", "from", "country", "order", "by", "population", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "surfacearea", ",", "indepyear", "from", "country", "order", "by", "population", "limit", "1", ";"], "ru": ["select", "name", ",", "surfacearea", ",", "indepyear", "from", "country", "order", "by", "population", "limit", "1", ";"]}}, {"id": "D_0791", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1;", "ru": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1;"}, "question": {"en": "What are the population, name and leader of the country with the largest area?", "ru": "Каково население, название и лидер страны с самой большой площадью?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "population", ",", "name", "and", "leader", "of", "the", "country", "with", "the", "largest", "area", "?"], "ru": ["Каково", "население", ",", "название", "и", "лидер", "страны", "с", "самой", "большой", "площадью", "?"]}, "query_toks": {"en": ["select", "name", ",", "population", ",", "headofstate", "from", "country", "order", "by", "surfacearea", "desc", "limit", "1", ";"], "ru": ["select", "name", ",", "population", ",", "headofstate", "from", "country", "order", "by", "surfacearea", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "population", ",", "headofstate", "from", "country", "order", "by", "surfacearea", "desc", "limit", "1", ";"], "ru": ["select", "name", ",", "population", ",", "headofstate", "from", "country", "order", "by", "surfacearea", "desc", "limit", "1", ";"]}}, {"id": "D_0792", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1;", "ru": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1;"}, "question": {"en": "Give the name, population, and head of state for the country that has the largest area.", "ru": "Укажите название, численность населения и главу государства для страны с самой большой площадью."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 14, false], null]], [0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "name", ",", "population", ",", "and", "head", "of", "state", "for", "the", "country", "that", "has", "the", "largest", "area", "."], "ru": ["Укажите", "название", ",", "численность", "населения", "и", "главу", "государства", "для", "страны", "с", "самой", "большой", "площадью", "."]}, "query_toks": {"en": ["select", "name", ",", "population", ",", "headofstate", "from", "country", "order", "by", "surfacearea", "desc", "limit", "1", ";"], "ru": ["select", "name", ",", "population", ",", "headofstate", "from", "country", "order", "by", "surfacearea", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "population", ",", "headofstate", "from", "country", "order", "by", "surfacearea", "desc", "limit", "1", ";"], "ru": ["select", "name", ",", "population", ",", "headofstate", "from", "country", "order", "by", "surfacearea", "desc", "limit", "1", ";"]}}, {"id": "D_0793", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2;", "ru": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2;"}, "question": {"en": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.", "ru": "Показать название страны и количество языков для каждой страны, в которой говорят как минимум на 3 языках."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "country", "name", "and", "the", "numbers", "of", "languages", "spoken", "for", "each", "country", "that", "speaks", "at", "least", "3", "languages", "."], "ru": ["Показать", "название", "страны", "и", "количество", "языков", "для", "каждой", "страны", ",", "в", "которой", "говорят", "как", "минимум", "на", "3", "языках", "."]}, "query_toks": {"en": ["select", "count", "(", "t2.language", ")", ",", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.name", "having", "count", "(", "*", ")", ">", "2", ";"], "ru": ["select", "count", "(", "t2.language", ")", ",", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.name", "having", "count", "(", "*", ")", ">", "2", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "t2.language", ")", ",", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.name", "having", "count", "(", "*", ")", ">", "2", ";"], "ru": ["select", "count", "(", "t2.language", ")", ",", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.name", "having", "count", "(", "*", ")", ">", "2", ";"]}}, {"id": "D_0794", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2;", "ru": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2;"}, "question": {"en": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?", "ru": "Как называются страны, в которых говорят более чем на 2 языках, а также на скольких языках они говорят?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 23, false], null]]}, "select": [false, [[3, [0, [0, 24, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "countries", "that", "speak", "more", "than", "2", "languages", ",", "as", "well", "as", "how", "many", "languages", "they", "speak", "?"], "ru": ["Как", "называются", "страны", ",", "в", "которых", "говорят", "более", "чем", "на", "2", "языках", ",", "а", "также", "на", "скольких", "языках", "они", "говорят", "?"]}, "query_toks": {"en": ["select", "count", "(", "t2.language", ")", ",", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.name", "having", "count", "(", "*", ")", ">", "2", ";"], "ru": ["select", "count", "(", "t2.language", ")", ",", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.name", "having", "count", "(", "*", ")", ">", "2", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "t2.language", ")", ",", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.name", "having", "count", "(", "*", ")", ">", "2", ";"], "ru": ["select", "count", "(", "t2.language", ")", ",", "t1.name", "from", "country", "as", "t1", "join", "countrylanguage", "as", "t2", "on", "t1.code", "=", "t2.countrycode", "group", "by", "t1.name", "having", "count", "(", "*", ")", ">", "2", ";"]}}, {"id": "D_0795", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District;", "ru": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District;"}, "question": {"en": "Find the number of cities in each district whose population is greater than the average population of cities?", "ru": "Найдите количество городов в каждом районе, население которых превышает среднюю численность населения городов"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "cities", "in", "each", "district", "whose", "population", "is", "greater", "than", "the", "average", "population", "of", "cities", "?"], "ru": ["Найдите", "количество", "городов", "в", "каждом", "районе", ",", "население", "которых", "превышает", "среднюю", "численность", "населения", "городов"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "district", "from", "city", "where", "population", ">", "(", "select", "avg", "(", "population", ")", "from", "city", ")", "group", "by", "district", ";"], "ru": ["select", "count", "(", "*", ")", ",", "district", "from", "city", "where", "population", ">", "(", "select", "avg", "(", "population", ")", "from", "city", ")", "group", "by", "district", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "district", "from", "city", "where", "population", ">", "(", "select", "avg", "(", "population", ")", "from", "city", ")", "group", "by", "district", ";"], "ru": ["select", "count", "(", "*", ")", ",", "district", "from", "city", "where", "population", ">", "(", "select", "avg", "(", "population", ")", "from", "city", ")", "group", "by", "district", ";"]}}, {"id": "D_0796", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District;", "ru": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District;"}, "question": {"en": "How many cities in each district have a population that is above the average population across all cities?", "ru": "Сколько городов в каждом районе имеют население выше среднего по всем городам?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "cities", "in", "each", "district", "have", "a", "population", "that", "is", "above", "the", "average", "population", "across", "all", "cities", "?"], "ru": ["Сколько", "городов", "в", "каждом", "районе", "имеют", "население", "выше", "среднего", "по", "всем", "городам", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "district", "from", "city", "where", "population", ">", "(", "select", "avg", "(", "population", ")", "from", "city", ")", "group", "by", "district", ";"], "ru": ["select", "count", "(", "*", ")", ",", "district", "from", "city", "where", "population", ">", "(", "select", "avg", "(", "population", ")", "from", "city", ")", "group", "by", "district", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "district", "from", "city", "where", "population", ">", "(", "select", "avg", "(", "population", ")", "from", "city", ")", "group", "by", "district", ";"], "ru": ["select", "count", "(", "*", ")", ",", "district", "from", "city", "where", "population", ">", "(", "select", "avg", "(", "population", ")", "from", "city", ")", "group", "by", "district", ";"]}}, {"id": "D_0797", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72;", "ru": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72;"}, "question": {"en": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.", "ru": "Найдите название формы правления и общую численность населения для каждой формы правления, средняя продолжительность жизни при которой превышает 72 года."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [[false, 3, [0, [5, 15, false], null], 72.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [[false, 3, [0, [5, 15, false], null], 72.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "government", "form", "name", "and", "total", "population", "for", "each", "government", "form", "whose", "average", "life", "expectancy", "is", "longer", "than", "72", "."], "ru": ["Найдите", "название", "формы", "правления", "и", "общую", "численность", "населения", "для", "каждой", "формы", "правления", ",", "средняя", "продолжительность", "жизни", "при", "которой", "превышает", "72", "года", "."]}, "query_toks": {"en": ["select", "sum", "(", "population", ")", ",", "governmentform", "from", "country", "group", "by", "governmentform", "having", "avg", "(", "lifeexpectancy", ")", ">", "72", ";"], "ru": ["select", "sum", "(", "population", ")", ",", "governmentform", "from", "country", "group", "by", "governmentform", "having", "avg", "(", "lifeexpectancy", ")", ">", "72", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "population", ")", ",", "governmentform", "from", "country", "group", "by", "governmentform", "having", "avg", "(", "lifeexpectancy", ")", ">", "72", ";"], "ru": ["select", "sum", "(", "population", ")", ",", "governmentform", "from", "country", "group", "by", "governmentform", "having", "avg", "(", "lifeexpectancy", ")", ">", "72", ";"]}}, {"id": "D_0798", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72;", "ru": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72;"}, "question": {"en": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?", "ru": "Каковы различные формы правления и какова общая численность населения каждой из форм правления, средняя продолжительность жизни при которых превышает 72 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [[false, 3, [0, [5, 15, false], null], 72.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [[false, 3, [0, [5, 15, false], null], 72.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "different", "government", "forms", "and", "what", "is", "the", "total", "population", "of", "each", "for", "government", "forms", "that", "have", "an", "average", "life", "expectancy", "greater", "than", "72", "?"], "ru": ["Каковы", "различные", "формы", "правления", "и", "какова", "общая", "численность", "населения", "каждой", "из", "форм", "правления", ",", "средняя", "продолжительность", "жизни", "при", "которых", "превышает", "72", "года", "?"]}, "query_toks": {"en": ["select", "sum", "(", "population", ")", ",", "governmentform", "from", "country", "group", "by", "governmentform", "having", "avg", "(", "lifeexpectancy", ")", ">", "72", ";"], "ru": ["select", "sum", "(", "population", ")", ",", "governmentform", "from", "country", "group", "by", "governmentform", "having", "avg", "(", "lifeexpectancy", ")", ">", "72", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "population", ")", ",", "governmentform", "from", "country", "group", "by", "governmentform", "having", "avg", "(", "lifeexpectancy", ")", ">", "72", ";"], "ru": ["select", "sum", "(", "population", ")", ",", "governmentform", "from", "country", "group", "by", "governmentform", "having", "avg", "(", "lifeexpectancy", ")", ">", "72", ";"]}}, {"id": "D_0799", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72;", "ru": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72;"}, "question": {"en": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?", "ru": "Найдите среднюю продолжительность жизни и общую численность населения для каждого континента, где средняя продолжительность жизни меньше 72"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 15, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 4, [0, [5, 15, false], null], 72.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 15, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 4, [0, [5, 15, false], null], 72.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "average", "life", "expectancy", "and", "total", "population", "for", "each", "continent", "where", "the", "average", "life", "expectancy", "is", "shorter", "than", "72", "?"], "ru": ["Найдите", "среднюю", "продолжительность", "жизни", "и", "общую", "численность", "населения", "для", "каждого", "континента", ",", "где", "средняя", "продолжительность", "жизни", "меньше", "72"]}, "query_toks": {"en": ["select", "sum", "(", "population", ")", ",", "avg", "(", "lifeexpectancy", ")", ",", "continent", "from", "country", "group", "by", "continent", "having", "avg", "(", "lifeexpectancy", ")", "<", "72", ";"], "ru": ["select", "sum", "(", "population", ")", ",", "avg", "(", "lifeexpectancy", ")", ",", "continent", "from", "country", "group", "by", "continent", "having", "avg", "(", "lifeexpectancy", ")", "<", "72", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "population", ")", ",", "avg", "(", "lifeexpectancy", ")", ",", "continent", "from", "country", "group", "by", "continent", "having", "avg", "(", "lifeexpectancy", ")", "<", "72", ";"], "ru": ["select", "sum", "(", "population", ")", ",", "avg", "(", "lifeexpectancy", ")", ",", "continent", "from", "country", "group", "by", "continent", "having", "avg", "(", "lifeexpectancy", ")", "<", "72", ";"]}}, {"id": "D_0800", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72;", "ru": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72;"}, "question": {"en": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?", "ru": "Каковы различные континенты, общая численность населения и средняя продолжительность жизни, соответствующие каждому из континентов, средняя продолжительность жизни которых менее 72?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 15, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 4, [0, [5, 15, false], null], 72.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 15, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 4, [0, [5, 15, false], null], 72.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "different", "continents", "and", "the", "total", "popuation", "and", "average", "life", "expectancy", "corresponding", "to", "each", ",", "for", "continents", "that", "have", "an", "average", "life", "expectancy", "less", "than", "72", "?"], "ru": ["Каковы", "различные", "континенты", ",", "общая", "численность", "населения", "и", "средняя", "продолжительность", "жизни", ",", "соответствующие", "каждому", "из", "континентов", ",", "средняя", "продолжительность", "жизни", "которых", "менее", "72", "?"]}, "query_toks": {"en": ["select", "sum", "(", "population", ")", ",", "avg", "(", "lifeexpectancy", ")", ",", "continent", "from", "country", "group", "by", "continent", "having", "avg", "(", "lifeexpectancy", ")", "<", "72", ";"], "ru": ["select", "sum", "(", "population", ")", ",", "avg", "(", "lifeexpectancy", ")", ",", "continent", "from", "country", "group", "by", "continent", "having", "avg", "(", "lifeexpectancy", ")", "<", "72", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "population", ")", ",", "avg", "(", "lifeexpectancy", ")", ",", "continent", "from", "country", "group", "by", "continent", "having", "avg", "(", "lifeexpectancy", ")", "<", "72", ";"], "ru": ["select", "sum", "(", "population", ")", ",", "avg", "(", "lifeexpectancy", ")", ",", "continent", "from", "country", "group", "by", "continent", "having", "avg", "(", "lifeexpectancy", ")", "<", "72", ";"]}}, {"id": "D_0801", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;", "ru": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;"}, "question": {"en": "What are the names and areas of countries with the top 5 largest area?", "ru": "Как называются страны, входящие в пятерку крупнейших по площади, и каковы их территории?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 5, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 5, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "and", "areas", "of", "countries", "with", "the", "top", "5", "largest", "area", "?"], "ru": ["Как", "называются", "страны", ",", "входящие", "в", "пятерку", "крупнейших", "по", "площади", ",", "и", "каковы", "их", "территории", "?"]}, "query_toks": {"en": ["select", "name", ",", "surfacearea", "from", "country", "order", "by", "surfacearea", "desc", "limit", "5", ";"], "ru": ["select", "name", ",", "surfacearea", "from", "country", "order", "by", "surfacearea", "desc", "limit", "5", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "surfacearea", "from", "country", "order", "by", "surfacearea", "desc", "limit", "5", ";"], "ru": ["select", "name", ",", "surfacearea", "from", "country", "order", "by", "surfacearea", "desc", "limit", "5", ";"]}}, {"id": "D_0802", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;", "ru": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;"}, "question": {"en": "Return the names and surface areas of the 5 largest countries.", "ru": "Отображать имена и площади 5 крупнейших стран."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 5, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 12, false], null]]], "limit": 5, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "names", "and", "surface", "areas", "of", "the", "5", "largest", "countries", "."], "ru": ["Отображать", "имена", "и", "площади", "5", "крупнейших", "стран", "."]}, "query_toks": {"en": ["select", "name", ",", "surfacearea", "from", "country", "order", "by", "surfacearea", "desc", "limit", "5", ";"], "ru": ["select", "name", ",", "surfacearea", "from", "country", "order", "by", "surfacearea", "desc", "limit", "5", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "surfacearea", "from", "country", "order", "by", "surfacearea", "desc", "limit", "5", ";"], "ru": ["select", "name", ",", "surfacearea", "from", "country", "order", "by", "surfacearea", "desc", "limit", "5", ";"]}}, {"id": "D_0803", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3;", "ru": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3;"}, "question": {"en": "What are names of countries with the top 3 largest population?", "ru": "Как называются страны с топ-3 по численности населения?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 14, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 14, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "names", "of", "countries", "with", "the", "top", "3", "largest", "population", "?"], "ru": ["Как", "называются", "страны", "с", "топ-3", "по", "численности", "населения", "?"]}, "query_toks": {"en": ["select", "name", "from", "country", "order", "by", "population", "desc", "limit", "3", ";"], "ru": ["select", "name", "from", "country", "order", "by", "population", "desc", "limit", "3", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "country", "order", "by", "population", "desc", "limit", "3", ";"], "ru": ["select", "name", "from", "country", "order", "by", "population", "desc", "limit", "3", ";"]}}, {"id": "D_0804", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3;", "ru": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3;"}, "question": {"en": "Return the names of the 3 most populated countries.", "ru": "Показывать названия 3-х самых густонаселенных стран."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 14, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 14, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "names", "of", "the", "3", "most", "populated", "countries", "."], "ru": ["Показывать", "названия", "3-х", "самых", "густонаселенных", "стран", "."]}, "query_toks": {"en": ["select", "name", "from", "country", "order", "by", "population", "desc", "limit", "3", ";"], "ru": ["select", "name", "from", "country", "order", "by", "population", "desc", "limit", "3", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "country", "order", "by", "population", "desc", "limit", "3", ";"], "ru": ["select", "name", "from", "country", "order", "by", "population", "desc", "limit", "3", ";"]}}, {"id": "D_0805", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3;", "ru": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3;"}, "question": {"en": "What are the names of the nations with the 3 lowest populations?", "ru": "Как называются народы с 3 наименьшим количеством населения?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "nations", "with", "the", "3", "lowest", "populations", "?"], "ru": ["Как", "называются", "народы", "с", "3", "наименьшим", "количеством", "населения", "?"]}, "query_toks": {"en": ["select", "name", "from", "country", "order", "by", "population", "asc", "limit", "3", ";"], "ru": ["select", "name", "from", "country", "order", "by", "population", "asc", "limit", "3", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "country", "order", "by", "population", "asc", "limit", "3", ";"], "ru": ["select", "name", "from", "country", "order", "by", "population", "asc", "limit", "3", ";"]}}, {"id": "D_0806", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3;", "ru": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3;"}, "question": {"en": "Return the names of the 3 countries with the fewest people.", "ru": "Показать названия 3 стран с наименьшим количеством людей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "names", "of", "the", "3", "countries", "with", "the", "fewest", "people", "."], "ru": ["Показать", "названия", "3", "стран", "с", "наименьшим", "количеством", "людей", "."]}, "query_toks": {"en": ["select", "name", "from", "country", "order", "by", "population", "asc", "limit", "3", ";"], "ru": ["select", "name", "from", "country", "order", "by", "population", "asc", "limit", "3", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "country", "order", "by", "population", "asc", "limit", "3", ";"], "ru": ["select", "name", "from", "country", "order", "by", "population", "asc", "limit", "3", ";"]}}, {"id": "D_0807", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM country WHERE continent  =  \"Asia\";", "ru": "SELECT count(*) FROM country WHERE continent  =  \"Атлантида\";"}, "question": {"en": "how many countries are in Asia?", "ru": "Сколько стран в Атлантиде?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["how", "many", "countries", "are", "in", "Asia", "?"], "ru": ["Сколько", "стран", "в", "Атлантиде", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "country", "where", "continent", "=", "\"Asia\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "country", "where", "continent", "=", "\"Атлантида\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "country", "where", "continent", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "country", "where", "continent", "=", "value", ";"]}}, {"id": "D_0808", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM country WHERE continent  =  \"Asia\";", "ru": "SELECT count(*) FROM country WHERE continent  =  \"Атлантида\";"}, "question": {"en": "Count the number of countries in Asia.", "ru": "Подсчитайте количество стран в Атлантиде."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Asia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "countries", "in", "Asia", "."], "ru": ["Подсчитайте", "количество", "стран", "в", "Атлантиде", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "country", "where", "continent", "=", "\"Asia\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "country", "where", "continent", "=", "\"Атлантида\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "country", "where", "continent", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "country", "where", "continent", "=", "value", ";"]}}, {"id": "D_0809", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\";", "ru": "SELECT Name FROM country WHERE continent  =  \"Лемурия\" AND Population  =  \"80000\";"}, "question": {"en": "What are the names of the countries that are in the continent of Europe and have a population of 80000?", "ru": "Как называются страны лемурийского континента с населением 80000 человек?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"80000\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Лемурия\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"80000\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "countries", "that", "are", "in", "the", "continent", "of", "Europe", "and", "have", "a", "population", "of", "80000", "?"], "ru": ["Как", "называются", "страны", "лемурийского", "континента", "с", "населением", "80000", "человек", "?"]}, "query_toks": {"en": ["select", "name", "from", "country", "where", "continent", "=", "\"Europe\"", "and", "population", "=", "\"80000\"", ";"], "ru": ["select", "name", "from", "country", "where", "continent", "=", "\"Лемурия\"", "and", "population", "=", "\"80000\"", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "=", "value", ";"], "ru": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "=", "value", ";"]}}, {"id": "D_0810", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\";", "ru": "SELECT Name FROM country WHERE continent  =  \"Лемурия\" AND Population  =  \"80000\";"}, "question": {"en": "Give the names of countries that are in Europe and have a population equal to 80000.", "ru": "Назовите страны Лемурии с населением 80000 человек."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Europe\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"80000\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Лемурия\"", null], "and", [false, 2, [0, [0, 14, false], null], "\"80000\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "names", "of", "countries", "that", "are", "in", "Europe", "and", "have", "a", "population", "equal", "to", "80000", "."], "ru": ["Назовите", "страны", "Лемурии", "с", "населением", "80000", "человек", "."]}, "query_toks": {"en": ["select", "name", "from", "country", "where", "continent", "=", "\"Europe\"", "and", "population", "=", "\"80000\"", ";"], "ru": ["select", "name", "from", "country", "where", "continent", "=", "\"Лемурия\"", "and", "population", "=", "\"80000\"", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "=", "value", ";"], "ru": ["select", "name", "from", "country", "where", "continent", "=", "value", "and", "population", "=", "value", ";"]}}, {"id": "D_0811", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000;", "ru": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"Атлантида\" and surfacearea  >  3000;"}, "question": {"en": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?", "ru": "Какова общая численность населения и средняя площадь стран на континенте Атлантида, площадь которых превышает 3000?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"north america\"", null], "and", [false, 3, [0, [0, 12, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null], "and", [false, 3, [0, [0, 12, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "total", "population", "and", "average", "area", "of", "countries", "in", "the", "continent", "of", "North", "America", "whose", "area", "is", "bigger", "than", "3000", "?"], "ru": ["Какова", "общая", "численность", "населения", "и", "средняя", "площадь", "стран", "на", "континенте", "Атлантида", ",", "площадь", "которых", "превышает", "3000", "?"]}, "query_toks": {"en": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"north america\"", "and", "surfacearea", ">", "3000", ";"], "ru": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"Атлантида\"", "and", "surfacearea", ">", "3000", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "and", "surfacearea", ">", "3000", ";"], "ru": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "and", "surfacearea", ">", "3000", ";"]}}, {"id": "D_0812", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000;", "ru": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"Атлантида\" and surfacearea  >  3000;"}, "question": {"en": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .", "ru": "Приведи общую численность населения и среднюю площадь в соответствии со странами Атлантиды с площадью более 3000."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"north america\"", null], "and", [false, 3, [0, [0, 12, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Атлантида\"", null], "and", [false, 3, [0, [0, 12, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "total", "population", "and", "average", "surface", "area", "corresponding", "to", "countries", "in", "North", "America", "that", "have", "a", "surface", "area", "greater", "than", "3000", "."], "ru": ["Приведи", "общую", "численность", "населения", "и", "среднюю", "площадь", "в", "соответствии", "со", "странами", "Атлантиды", "с", "площадью", "более", "3000", "."]}, "query_toks": {"en": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"north america\"", "and", "surfacearea", ">", "3000", ";"], "ru": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"Атлантида\"", "and", "surfacearea", ">", "3000", ";"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "and", "surfacearea", ">", "3000", ";"], "ru": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "and", "surfacearea", ">", "3000", ";"]}}, {"id": "D_0813", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000;", "ru": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000;"}, "question": {"en": "What are the cities whose population is between 160000 and 900000?", "ru": "Какие города с населением от 160000 до 900000?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 1, [0, [0, 5, false], null], 160000.0, 900000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 1, [0, [0, 5, false], null], 160000.0, 900000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "cities", "whose", "population", "is", "between", "160000", "and", "900000", "?"], "ru": ["Какие", "города", "с", "населением", "от", "160000", "до", "900000", "?"]}, "query_toks": {"en": ["select", "name", "from", "city", "where", "population", "between", "160000", "and", "900000", ";"], "ru": ["select", "name", "from", "city", "where", "population", "between", "160000", "and", "900000", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "city", "where", "population", "between", "160000", "and", "900000", ";"], "ru": ["select", "name", "from", "city", "where", "population", "between", "160000", "and", "900000", ";"]}}, {"id": "D_0814", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "select name from city where population between 160000 and 900000;", "ru": "select name from city where population between 160000 and 900000;"}, "question": {"en": "Return the names of cities that have a population between 160000 and 900000 .", "ru": "Показать названия городов с населением от 160000 до 900000 человек."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 1, [0, [0, 5, false], null], 160000.0, 900000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 1, [0, [0, 5, false], null], 160000.0, 900000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "names", "of", "cities", "that", "have", "a", "population", "between", "160000", "and", "900000", "."], "ru": ["Показать", "названия", "городов", "с", "населением", "от", "160000", "до", "900000", "человек", "."]}, "query_toks": {"en": ["select", "name", "from", "city", "where", "population", "between", "160000", "and", "900000", ";"], "ru": ["select", "name", "from", "city", "where", "population", "between", "160000", "and", "900000", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "city", "where", "population", "between", "160000", "and", "900000", ";"], "ru": ["select", "name", "from", "city", "where", "population", "between", "160000", "and", "900000", ";"]}}, {"id": "D_0815", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which language is spoken by the largest number of countries?", "ru": "На каком языке говорит наибольшее количество стран?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [[0, 24, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [[0, 24, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "language", "is", "spoken", "by", "the", "largest", "number", "of", "countries", "?"], "ru": ["На", "каком", "языке", "говорит", "наибольшее", "количество", "стран", "?"]}, "query_toks": {"en": ["select", "language", "from", "countrylanguage", "group", "by", "language", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "language", "from", "countrylanguage", "group", "by", "language", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "language", "from", "countrylanguage", "group", "by", "language", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "language", "from", "countrylanguage", "group", "by", "language", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0816", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Give the language that is spoken in the most countries.", "ru": "Назовите язык, на котором говорят в большинстве стран."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [[0, 24, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [[0, 24, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "language", "that", "is", "spoken", "in", "the", "most", "countries", "."], "ru": ["Назовите", "язык", ",", "на", "котором", "говорят", "в", "большинстве", "стран", "."]}, "query_toks": {"en": ["select", "language", "from", "countrylanguage", "group", "by", "language", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "language", "from", "countrylanguage", "group", "by", "language", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "language", "from", "countrylanguage", "group", "by", "language", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "language", "from", "countrylanguage", "group", "by", "language", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0817", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode;", "ru": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode;"}, "question": {"en": "What is the language spoken by the largest percentage of people in each country?", "ru": "На каком языке говорит самый большой процент людей в каждой стране?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "language", "spoken", "by", "the", "largest", "percentage", "of", "people", "in", "each", "country", "?"], "ru": ["На", "каком", "языке", "говорит", "самый", "большой", "процент", "людей", "в", "каждой", "стране", "?"]}, "query_toks": {"en": ["select", "language", ",", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "group", "by", "countrycode", ";"], "ru": ["select", "language", ",", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "group", "by", "countrycode", ";"]}, "query_toks_no_values": {"en": ["select", "language", ",", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "group", "by", "countrycode", ";"], "ru": ["select", "language", ",", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "group", "by", "countrycode", ";"]}}, {"id": "D_0818", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode;", "ru": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode;"}, "question": {"en": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?", "ru": "Каковы коды стран в разных странах и на каких языках говорит наибольший процент людей в каждой из них?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "country", "codes", "of", "the", "different", "countries", ",", "and", "what", "are", "the", "languages", "spoken", "by", "the", "greatest", "percentage", "of", "people", "for", "each", "?"], "ru": ["Каковы", "коды", "стран", "в", "разных", "странах", "и", "на", "каких", "языках", "говорит", "наибольший", "процент", "людей", "в", "каждой", "из", "них", "?"]}, "query_toks": {"en": ["select", "language", ",", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "group", "by", "countrycode", ";"], "ru": ["select", "language", ",", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "group", "by", "countrycode", ";"]}, "query_toks_no_values": {"en": ["select", "language", ",", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "group", "by", "countrycode", ";"], "ru": ["select", "language", ",", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "group", "by", "countrycode", ";"]}}, {"id": "D_0819", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode;", "ru": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Новояз\" GROUP BY CountryCode;"}, "question": {"en": "What is the total number of countries where Spanish is spoken by the largest percentage of people?", "ru": "Каково общее количество стран, в которых на новоязском языке говорит наибольший процент людей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [1, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [1, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Новояз\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "total", "number", "of", "countries", "where", "Spanish", "is", "spoken", "by", "the", "largest", "percentage", "of", "people", "?"], "ru": ["Каково", "общее", "количество", "стран", ",", "в", "которых", "на", "новоязском", "языке", "говорит", "наибольший", "процент", "людей", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "\"Spanish\"", "group", "by", "countrycode", ";"], "ru": ["select", "count", "(", "*", ")", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "\"Новояз\"", "group", "by", "countrycode", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode", ";"], "ru": ["select", "count", "(", "*", ")", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode", ";"]}}, {"id": "D_0820", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode;", "ru": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Новояз\" GROUP BY CountryCode;"}, "question": {"en": "Count the number of countries for which Spanish is the predominantly spoken language.", "ru": "Подсчитайте количество стран, в которых новоязский является основным используемым языком."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [1, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [1, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Новояз\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "countries", "for", "which", "Spanish", "is", "the", "predominantly", "spoken", "language", "."], "ru": ["Подсчитайте", "количество", "стран", ",", "в", "которых", "новоязский", "является", "основным", "используемым", "языком", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "\"Spanish\"", "group", "by", "countrycode", ";"], "ru": ["select", "count", "(", "*", ")", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "\"Новояз\"", "group", "by", "countrycode", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode", ";"], "ru": ["select", "count", "(", "*", ")", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode", ";"]}}, {"id": "D_0821", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode;", "ru": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Новояз\" GROUP BY CountryCode;"}, "question": {"en": "What are the codes of countries where Spanish is spoken by the largest percentage of people?", "ru": "Каковы коды стран, в которых на новоязском языке говорит самый большой процент людей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Новояз\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "codes", "of", "countries", "where", "Spanish", "is", "spoken", "by", "the", "largest", "percentage", "of", "people", "?"], "ru": ["Каковы", "коды", "стран", ",", "в", "которых", "на", "новоязском", "языке", "говорит", "самый", "большой", "процент", "людей", "?"]}, "query_toks": {"en": ["select", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "\"Spanish\"", "group", "by", "countrycode", ";"], "ru": ["select", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "\"Новояз\"", "group", "by", "countrycode", ";"]}, "query_toks_no_values": {"en": ["select", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode", ";"], "ru": ["select", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode", ";"]}}, {"id": "D_0822", "db_id": "world_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode;", "ru": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Новояз\" GROUP BY CountryCode;"}, "question": {"en": "Return the codes of countries for which Spanish is the predominantly spoken language.", "ru": "Показать коды стран, для которых новояз является основным языком."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Spanish\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]], [1, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Новояз\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "codes", "of", "countries", "for", "which", "Spanish", "is", "the", "predominantly", "spoken", "language", "."], "ru": ["Показать", "коды", "стран", ",", "для", "которых", "новояз", "является", "основным", "языком", "."]}, "query_toks": {"en": ["select", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "\"Spanish\"", "group", "by", "countrycode", ";"], "ru": ["select", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "\"Новояз\"", "group", "by", "countrycode", ";"]}, "query_toks_no_values": {"en": ["select", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode", ";"], "ru": ["select", "countrycode", ",", "max", "(", "percentage", ")", "from", "countrylanguage", "where", "language", "=", "value", "group", "by", "countrycode", ";"]}}, {"id": "D_0823", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM conductor;", "ru": "SELECT count(*) FROM conductor;"}, "question": {"en": "How many conductors are there?", "ru": "Сколько здесь дирижеров?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "conductors", "are", "there", "?"], "ru": ["Сколько", "здесь", "дирижеров", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "conductor", ";"], "ru": ["select", "count", "(", "*", ")", "from", "conductor", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "conductor", ";"], "ru": ["select", "count", "(", "*", ")", "from", "conductor", ";"]}}, {"id": "D_0824", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM conductor;", "ru": "SELECT count(*) FROM conductor;"}, "question": {"en": "Count the number of conductors.", "ru": "Подсчитайте количество дирижеров."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "conductors", "."], "ru": ["Подсчитайте", "количество", "дирижеров", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "conductor", ";"], "ru": ["select", "count", "(", "*", ")", "from", "conductor", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "conductor", ";"], "ru": ["select", "count", "(", "*", ")", "from", "conductor", ";"]}}, {"id": "D_0825", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM conductor ORDER BY Age ASC;", "ru": "SELECT Name FROM conductor ORDER BY Age ASC;"}, "question": {"en": "List the names of conductors in ascending order of age.", "ru": "Перечислите имена дирижеров в порядке возрастания их возраста."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "names", "of", "conductors", "in", "ascending", "order", "of", "age", "."], "ru": ["Перечислите", "имена", "дирижеров", "в", "порядке", "возрастания", "их", "возраста", "."]}, "query_toks": {"en": ["select", "name", "from", "conductor", "order", "by", "age", "asc", ";"], "ru": ["select", "name", "from", "conductor", "order", "by", "age", "asc", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "conductor", "order", "by", "age", "asc", ";"], "ru": ["select", "name", "from", "conductor", "order", "by", "age", "asc", ";"]}}, {"id": "D_0826", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM conductor ORDER BY Age ASC;", "ru": "SELECT Name FROM conductor ORDER BY Age ASC;"}, "question": {"en": "What are the names of conductors, ordered by age?", "ru": "Как зовут дирижеров по возрасту?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "conductors", ",", "ordered", "by", "age", "?"], "ru": ["Как", "зовут", "дирижеров", "по", "возрасту", "?"]}, "query_toks": {"en": ["select", "name", "from", "conductor", "order", "by", "age", "asc", ";"], "ru": ["select", "name", "from", "conductor", "order", "by", "age", "asc", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "conductor", "order", "by", "age", "asc", ";"], "ru": ["select", "name", "from", "conductor", "order", "by", "age", "asc", ";"]}}, {"id": "D_0827", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM conductor WHERE Nationality != 'USA';", "ru": "SELECT Name FROM conductor WHERE Nationality != 'Россия';"}, "question": {"en": "What are the names of conductors whose nationalities are not \"USA\"?", "ru": "Как зовут дирижеров, чья национальность не «Россия»?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"Россия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "conductors", "whose", "nationalities", "are", "not", "``", "USA", "''", "?"], "ru": ["Как", "зовут", "дирижеров", ",", "чья", "национальность", "не", "«", "Россия", "»", "?"]}, "query_toks": {"en": ["select", "name", "from", "conductor", "where", "nationality", "!=", "\"USA\"", ";"], "ru": ["select", "name", "from", "conductor", "where", "nationality", "!=", "\"Россия\"", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "conductor", "where", "nationality", "!=", "value", ";"], "ru": ["select", "name", "from", "conductor", "where", "nationality", "!=", "value", ";"]}}, {"id": "D_0828", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM conductor WHERE Nationality != 'USA';", "ru": "SELECT Name FROM conductor WHERE Nationality != 'Россия';"}, "question": {"en": "Return the names of conductors that do not have the nationality \"USA\".", "ru": "Укажите имена дирижеров, не имеющих национальности «Россия»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"Россия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "names", "of", "conductors", "that", "do", "not", "have", "the", "nationality", "``", "USA", "''", "."], "ru": ["Укажите", "имена", "дирижеров", ",", "не", "имеющих", "национальности", "«", "Россия", "»", "."]}, "query_toks": {"en": ["select", "name", "from", "conductor", "where", "nationality", "!=", "\"USA\"", ";"], "ru": ["select", "name", "from", "conductor", "where", "nationality", "!=", "\"Россия\"", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "conductor", "where", "nationality", "!=", "value", ";"], "ru": ["select", "name", "from", "conductor", "where", "nationality", "!=", "value", ";"]}}, {"id": "D_0829", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;", "ru": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;"}, "question": {"en": "What are the record companies of orchestras in descending order of years in which they were founded?", "ru": "Каковы звукозаписывающие компании оркестров в порядке убывания года их основания?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "record", "companies", "of", "orchestras", "in", "descending", "order", "of", "years", "in", "which", "they", "were", "founded", "?"], "ru": ["Каковы", "звукозаписывающие", "компании", "оркестров", "в", "порядке", "убывания", "года", "их", "основания", "?"]}, "query_toks": {"en": ["select", "record_company", "from", "orchestra", "order", "by", "year_of_founded", "desc", ";"], "ru": ["select", "record_company", "from", "orchestra", "order", "by", "year_of_founded", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "record_company", "from", "orchestra", "order", "by", "year_of_founded", "desc", ";"], "ru": ["select", "record_company", "from", "orchestra", "order", "by", "year_of_founded", "desc", ";"]}}, {"id": "D_0830", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;", "ru": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;"}, "question": {"en": "Return the record companies of orchestras, sorted descending by the years in which they were founded.", "ru": "Показать звукозаписывающие компании оркестров, отсортированные по годам их основания."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "record", "companies", "of", "orchestras", ",", "sorted", "descending", "by", "the", "years", "in", "which", "they", "were", "founded", "."], "ru": ["Показать", "звукозаписывающие", "компании", "оркестров", ",", "отсортированные", "по", "годам", "их", "основания", "."]}, "query_toks": {"en": ["select", "record_company", "from", "orchestra", "order", "by", "year_of_founded", "desc", ";"], "ru": ["select", "record_company", "from", "orchestra", "order", "by", "year_of_founded", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "record_company", "from", "orchestra", "order", "by", "year_of_founded", "desc", ";"], "ru": ["select", "record_company", "from", "orchestra", "order", "by", "year_of_founded", "desc", ";"]}}, {"id": "D_0831", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(Attendance) FROM SHOW;", "ru": "SELECT avg(Attendance) FROM SHOW;"}, "question": {"en": "What is the average attendance of shows?", "ru": "Какова средняя посещаемость шоу?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "attendance", "of", "shows", "?"], "ru": ["Какова", "средняя", "посещаемость", "шоу", "?"]}, "query_toks": {"en": ["select", "avg", "(", "attendance", ")", "from", "show", ";"], "ru": ["select", "avg", "(", "attendance", ")", "from", "show", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "attendance", ")", "from", "show", ";"], "ru": ["select", "avg", "(", "attendance", ")", "from", "show", ";"]}}, {"id": "D_0832", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(Attendance) FROM SHOW;", "ru": "SELECT avg(Attendance) FROM SHOW;"}, "question": {"en": "Return the average attendance across all shows.", "ru": "Показать среднюю посещаемость по всем шоу."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "average", "attendance", "across", "all", "shows", "."], "ru": ["Показать", "среднюю", "посещаемость", "по", "всем", "шоу", "."]}, "query_toks": {"en": ["select", "avg", "(", "attendance", ")", "from", "show", ";"], "ru": ["select", "avg", "(", "attendance", ")", "from", "show", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "attendance", ")", "from", "show", ";"], "ru": ["select", "avg", "(", "attendance", ")", "from", "show", ";"]}}, {"id": "D_0833", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\";", "ru": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Предпоказ\";"}, "question": {"en": "What are the maximum and minimum share of performances whose type is not \"Live final\".", "ru": "Какова максимальная и минимальная доля выступлений, тип которых не является предоказом."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 18, false], null]], [2, [0, [0, 18, false], null]]]], "where": [[false, 7, [0, [0, 14, false], null], "\"Live final\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 18, false], null]], [2, [0, [0, 18, false], null]]]], "where": [[false, 7, [0, [0, 14, false], null], "\"Предпоказ\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "maximum", "and", "minimum", "share", "of", "performances", "whose", "type", "is", "not", "``", "Live", "final", "''", "."], "ru": ["Какова", "максимальная", "и", "минимальная", "доля", "выступлений", ",", "тип", "которых", "не", "является", "предоказом", "."]}, "query_toks": {"en": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "performance", "where", "type", "!=", "\"Live final\"", ";"], "ru": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "performance", "where", "type", "!=", "\"Предпоказ\"", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "performance", "where", "type", "!=", "value", ";"], "ru": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "performance", "where", "type", "!=", "value", ";"]}}, {"id": "D_0834", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\";", "ru": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Предпоказ\";"}, "question": {"en": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".", "ru": "Показать максимальную и минимальную долю выступлений, не имеющих типа «предпоказ»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 18, false], null]], [2, [0, [0, 18, false], null]]]], "where": [[false, 7, [0, [0, 14, false], null], "\"Live final\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 18, false], null]], [2, [0, [0, 18, false], null]]]], "where": [[false, 7, [0, [0, 14, false], null], "\"Предпоказ\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "maximum", "and", "minimum", "shares", "for", "performances", "that", "do", "not", "have", "the", "type", "``", "Live", "final", "''", "."], "ru": ["Показать", "максимальную", "и", "минимальную", "долю", "выступлений", ",", "не", "имеющих", "типа", "«", "предпоказ", "»", "."]}, "query_toks": {"en": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "performance", "where", "type", "!=", "\"Live final\"", ";"], "ru": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "performance", "where", "type", "!=", "\"Предпоказ\"", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "performance", "where", "type", "!=", "value", ";"], "ru": ["select", "max", "(", "share", ")", ",", "min", "(", "share", ")", "from", "performance", "where", "type", "!=", "value", ";"]}}, {"id": "D_0835", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT Nationality) FROM conductor;", "ru": "SELECT count(DISTINCT Nationality) FROM conductor;"}, "question": {"en": "How many different nationalities do conductors have?", "ru": "Сколько национальностей у дирижеров?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 4, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 4, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "different", "nationalities", "do", "conductors", "have", "?"], "ru": ["Сколько", "национальностей", "у", "дирижеров", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "nationality", ")", "from", "conductor", ";"], "ru": ["select", "count", "(", "distinct", "nationality", ")", "from", "conductor", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "nationality", ")", "from", "conductor", ";"], "ru": ["select", "count", "(", "distinct", "nationality", ")", "from", "conductor", ";"]}}, {"id": "D_0836", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT Nationality) FROM conductor;", "ru": "SELECT count(DISTINCT Nationality) FROM conductor;"}, "question": {"en": "Count the number of different nationalities of conductors.", "ru": "Подсчитайте количество дирижеров разных национальностей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 4, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 4, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "different", "nationalities", "of", "conductors", "."], "ru": ["Подсчитайте", "количество", "дирижеров", "разных", "национальностей", "."]}, "query_toks": {"en": ["select", "count", "(", "distinct", "nationality", ")", "from", "conductor", ";"], "ru": ["select", "count", "(", "distinct", "nationality", ")", "from", "conductor", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "nationality", ")", "from", "conductor", ";"], "ru": ["select", "count", "(", "distinct", "nationality", ")", "from", "conductor", ";"]}}, {"id": "D_0837", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC;", "ru": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC;"}, "question": {"en": "List names of conductors in descending order of years of work.", "ru": "Перечислите имена дирижеров в порядке убывания стажа работы."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "names", "of", "conductors", "in", "descending", "order", "of", "years", "of", "work", "."], "ru": ["Перечислите", "имена", "дирижеров", "в", "порядке", "убывания", "стажа", "работы", "."]}, "query_toks": {"en": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", ";"], "ru": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", ";"], "ru": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", ";"]}}, {"id": "D_0838", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC;", "ru": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC;"}, "question": {"en": "What are the names of conductors, sorted descending by the number of years they have worked?", "ru": "Как зовут дирижеров, отсортированных по количеству отработанных лет?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "conductors", ",", "sorted", "descending", "by", "the", "number", "of", "years", "they", "have", "worked", "?"], "ru": ["Как", "зовут", "дирижеров", ",", "отсортированных", "по", "количеству", "отработанных", "лет", "?"]}, "query_toks": {"en": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", ";"], "ru": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", ";"], "ru": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", ";"]}}, {"id": "D_0839", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1;", "ru": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1;"}, "question": {"en": "List the name of the conductor with the most years of work.", "ru": "Укажите фамилию дирижера с наибольшим количеством лет работы."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "name", "of", "the", "conductor", "with", "the", "most", "years", "of", "work", "."], "ru": ["Укажите", "фамилию", "дирижера", "с", "наибольшим", "количеством", "лет", "работы", "."]}, "query_toks": {"en": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", "limit", "1", ";"], "ru": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", "limit", "1", ";"], "ru": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", "limit", "1", ";"]}}, {"id": "D_0840", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1;", "ru": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1;"}, "question": {"en": "What is the name of the conductor who has worked the greatest number of years?", "ru": "Как зовут дирижера, проработавшего наибольшее количество лет?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "conductor", "who", "has", "worked", "the", "greatest", "number", "of", "years", "?"], "ru": ["Как", "зовут", "дирижера", ",", "проработавшего", "наибольшее", "количество", "лет", "?"]}, "query_toks": {"en": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", "limit", "1", ";"], "ru": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", "limit", "1", ";"], "ru": ["select", "name", "from", "conductor", "order", "by", "year_of_work", "desc", "limit", "1", ";"]}}, {"id": "D_0841", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID;", "ru": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID;"}, "question": {"en": "Show the names of conductors and the orchestras they have conducted.", "ru": "Покажите имена дирижеров и оркестров, которыми они дирижировали."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "names", "of", "conductors", "and", "the", "orchestras", "they", "have", "conducted", "."], "ru": ["Покажите", "имена", "дирижеров", "и", "оркестров", ",", "которыми", "они", "дирижировали", "."]}, "query_toks": {"en": ["select", "t1.name", ",", "t2.orchestra", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", ";"], "ru": ["select", "t1.name", ",", "t2.orchestra", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", ",", "t2.orchestra", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", ";"], "ru": ["select", "t1.name", ",", "t2.orchestra", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", ";"]}}, {"id": "D_0842", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID;", "ru": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID;"}, "question": {"en": "What are the names of conductors as well as the corresonding orchestras that they have conducted?", "ru": "Имена дирижеров и названия оркестров, которыми они дирижировали"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "conductors", "as", "well", "as", "the", "corresonding", "orchestras", "that", "they", "have", "conducted", "?"], "ru": ["Имена", "дирижеров", "и", "названия", "оркестров", ",", "которыми", "они", "дирижировали"]}, "query_toks": {"en": ["select", "t1.name", ",", "t2.orchestra", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", ";"], "ru": ["select", "t1.name", ",", "t2.orchestra", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", ",", "t2.orchestra", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", ";"], "ru": ["select", "t1.name", ",", "t2.orchestra", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", ";"]}}, {"id": "D_0843", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1;", "ru": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1;"}, "question": {"en": "Show the names of conductors that have conducted more than one orchestras.", "ru": "Укажите имена дирижеров, дирижировавших более чем одним оркестром."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "names", "of", "conductors", "that", "have", "conducted", "more", "than", "one", "orchestras", "."], "ru": ["Укажите", "имена", "дирижеров", ",", "дирижировавших", "более", "чем", "одним", "оркестром", "."]}, "query_toks": {"en": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "group", "by", "t2.conductor_id", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "group", "by", "t2.conductor_id", "having", "count", "(", "*", ")", ">", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "group", "by", "t2.conductor_id", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "group", "by", "t2.conductor_id", "having", "count", "(", "*", ")", ">", "1", ";"]}}, {"id": "D_0844", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1;", "ru": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1;"}, "question": {"en": "What are the names of conductors who have conducted at more than one orchestra?", "ru": "Как зовут дирижеров, дирижировавших более чем в одном оркестре?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "conductors", "who", "have", "conducted", "at", "more", "than", "one", "orchestra", "?"], "ru": ["Как", "зовут", "дирижеров", ",", "дирижировавших", "более", "чем", "в", "одном", "оркестре", "?"]}, "query_toks": {"en": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "group", "by", "t2.conductor_id", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "group", "by", "t2.conductor_id", "having", "count", "(", "*", ")", ">", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "group", "by", "t2.conductor_id", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "group", "by", "t2.conductor_id", "having", "count", "(", "*", ")", ">", "1", ";"]}}, {"id": "D_0845", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1;", "ru": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1;"}, "question": {"en": "Show the name of the conductor that has conducted the most number of orchestras.", "ru": "Укажите имя дирижера, дирижировавшего наибольшим количеством оркестров."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "name", "of", "the", "conductor", "that", "has", "conducted", "the", "most", "number", "of", "orchestras", "."], "ru": ["Укажите", "имя", "дирижера", ",", "дирижировавшего", "наибольшим", "количеством", "оркестров", "."]}, "query_toks": {"en": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "group", "by", "t2.conductor_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "group", "by", "t2.conductor_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "group", "by", "t2.conductor_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "group", "by", "t2.conductor_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0846", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1;", "ru": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1;"}, "question": {"en": "What is the name of the conductor who has conducted the most orchestras?", "ru": "Как зовут дирижера, дирижировавшего большинством оркестров?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "conductor", "who", "has", "conducted", "the", "most", "orchestras", "?"], "ru": ["Как", "зовут", "дирижера", ",", "дирижировавшего", "большинством", "оркестров", "?"]}, "query_toks": {"en": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "group", "by", "t2.conductor_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "group", "by", "t2.conductor_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "group", "by", "t2.conductor_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "group", "by", "t2.conductor_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0847", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008;", "ru": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008;"}, "question": {"en": "Please show the name of the conductor that has conducted orchestras founded after 2008.", "ru": "Укажите имя дирижера, дирижировавшего оркестрами, основанными после 2008 года."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 2008.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 2008.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Please", "show", "the", "name", "of", "the", "conductor", "that", "has", "conducted", "orchestras", "founded", "after", "2008", "."], "ru": ["Укажите", "имя", "дирижера", ",", "дирижировавшего", "оркестрами", ",", "основанными", "после", "2008", "года", "."]}, "query_toks": {"en": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "where", "year_of_founded", ">", "2008", ";"], "ru": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "where", "year_of_founded", ">", "2008", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "where", "year_of_founded", ">", "2008", ";"], "ru": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "where", "year_of_founded", ">", "2008", ";"]}}, {"id": "D_0848", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008;", "ru": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008;"}, "question": {"en": "What are the names of conductors who have conducted orchestras founded after the year 2008?", "ru": "Как зовут дирижеров, дирижировавших оркестрами, основанными после 2008 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 2008.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 2008.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "conductors", "who", "have", "conducted", "orchestras", "founded", "after", "the", "year", "2008", "?"], "ru": ["Как", "зовут", "дирижеров", ",", "дирижировавших", "оркестрами", ",", "основанными", "после", "2008", "года", "?"]}, "query_toks": {"en": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "where", "year_of_founded", ">", "2008", ";"], "ru": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "where", "year_of_founded", ">", "2008", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "where", "year_of_founded", ">", "2008", ";"], "ru": ["select", "t1.name", "from", "conductor", "as", "t1", "join", "orchestra", "as", "t2", "on", "t1.conductor_id", "=", "t2.conductor_id", "where", "year_of_founded", ">", "2008", ";"]}}, {"id": "D_0849", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company;", "ru": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company;"}, "question": {"en": "Please show the different record companies and the corresponding number of orchestras.", "ru": "Пожалуйста, покажи разные звукозаписывающие компании и соответствующее количество оркестров."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Please", "show", "the", "different", "record", "companies", "and", "the", "corresponding", "number", "of", "orchestras", "."], "ru": ["Пожалуйста", ",", "покажи", "разные", "звукозаписывающие", "компании", "и", "соответствующее", "количество", "оркестров", "."]}, "query_toks": {"en": ["select", "record_company", ",", "count", "(", "*", ")", "from", "orchestra", "group", "by", "record_company", ";"], "ru": ["select", "record_company", ",", "count", "(", "*", ")", "from", "orchestra", "group", "by", "record_company", ";"]}, "query_toks_no_values": {"en": ["select", "record_company", ",", "count", "(", "*", ")", "from", "orchestra", "group", "by", "record_company", ";"], "ru": ["select", "record_company", ",", "count", "(", "*", ")", "from", "orchestra", "group", "by", "record_company", ";"]}}, {"id": "D_0850", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company;", "ru": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company;"}, "question": {"en": "How many orchestras does each record company manage?", "ru": "Сколько оркестров у каждой звукозаписывающей компании?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "orchestras", "does", "each", "record", "company", "manage", "?"], "ru": ["Сколько", "оркестров", "у", "каждой", "звукозаписывающей", "компании", "?"]}, "query_toks": {"en": ["select", "record_company", ",", "count", "(", "*", ")", "from", "orchestra", "group", "by", "record_company", ";"], "ru": ["select", "record_company", ",", "count", "(", "*", ")", "from", "orchestra", "group", "by", "record_company", ";"]}, "query_toks_no_values": {"en": ["select", "record_company", ",", "count", "(", "*", ")", "from", "orchestra", "group", "by", "record_company", ";"], "ru": ["select", "record_company", ",", "count", "(", "*", ")", "from", "orchestra", "group", "by", "record_company", ";"]}}, {"id": "D_0851", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC;", "ru": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC;"}, "question": {"en": "Please show the record formats of orchestras in ascending order of count.", "ru": "Пожалуйста, покажите форматы записи оркестров в порядке возрастания количества."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Please", "show", "the", "record", "formats", "of", "orchestras", "in", "ascending", "order", "of", "count", "."], "ru": ["Пожалуйста", ",", "покажите", "форматы", "записи", "оркестров", "в", "порядке", "возрастания", "количества", "."]}, "query_toks": {"en": ["select", "major_record_format", "from", "orchestra", "group", "by", "major_record_format", "order", "by", "count", "(", "*", ")", "asc", ";"], "ru": ["select", "major_record_format", "from", "orchestra", "group", "by", "major_record_format", "order", "by", "count", "(", "*", ")", "asc", ";"]}, "query_toks_no_values": {"en": ["select", "major_record_format", "from", "orchestra", "group", "by", "major_record_format", "order", "by", "count", "(", "*", ")", "asc", ";"], "ru": ["select", "major_record_format", "from", "orchestra", "group", "by", "major_record_format", "order", "by", "count", "(", "*", ")", "asc", ";"]}}, {"id": "D_0852", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC;", "ru": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC;"}, "question": {"en": "What are the major record formats of orchestras, sorted by their frequency?", "ru": "Какие основные форматы записи оркестров, отсортированные по частоте?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "major", "record", "formats", "of", "orchestras", ",", "sorted", "by", "their", "frequency", "?"], "ru": ["Какие", "основные", "форматы", "записи", "оркестров", ",", "отсортированные", "по", "частоте", "?"]}, "query_toks": {"en": ["select", "major_record_format", "from", "orchestra", "group", "by", "major_record_format", "order", "by", "count", "(", "*", ")", "asc", ";"], "ru": ["select", "major_record_format", "from", "orchestra", "group", "by", "major_record_format", "order", "by", "count", "(", "*", ")", "asc", ";"]}, "query_toks_no_values": {"en": ["select", "major_record_format", "from", "orchestra", "group", "by", "major_record_format", "order", "by", "count", "(", "*", ")", "asc", ";"], "ru": ["select", "major_record_format", "from", "orchestra", "group", "by", "major_record_format", "order", "by", "count", "(", "*", ")", "asc", ";"]}}, {"id": "D_0853", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1;", "ru": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1;"}, "question": {"en": "List the record company shared by the most number of orchestras.", "ru": "Укажите звукозаписывающую компанию, которую делит наибольшее количество оркестров."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "record", "company", "shared", "by", "the", "most", "number", "of", "orchestras", "."], "ru": ["Укажите", "звукозаписывающую", "компанию", ",", "которую", "делит", "наибольшее", "количество", "оркестров", "."]}, "query_toks": {"en": ["select", "record_company", "from", "orchestra", "group", "by", "record_company", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "record_company", "from", "orchestra", "group", "by", "record_company", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "record_company", "from", "orchestra", "group", "by", "record_company", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "record_company", "from", "orchestra", "group", "by", "record_company", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0854", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1;", "ru": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1;"}, "question": {"en": "What is the record company used by the greatest number of orchestras?", "ru": "Какую звукозаписывающую компанию использует наибольшее количество оркестров?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "record", "company", "used", "by", "the", "greatest", "number", "of", "orchestras", "?"], "ru": ["Какую", "звукозаписывающую", "компанию", "использует", "наибольшее", "количество", "оркестров", "?"]}, "query_toks": {"en": ["select", "record_company", "from", "orchestra", "group", "by", "record_company", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "record_company", "from", "orchestra", "group", "by", "record_company", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "record_company", "from", "orchestra", "group", "by", "record_company", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "record_company", "from", "orchestra", "group", "by", "record_company", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0855", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance);", "ru": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance);"}, "question": {"en": "List the names of orchestras that have no performance.", "ru": "Перечислите названия оркестров, у которых нет выступлений."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "names", "of", "orchestras", "that", "have", "no", "performance", "."], "ru": ["Перечислите", "названия", "оркестров", ",", "у", "которых", "нет", "выступлений", "."]}, "query_toks": {"en": ["select", "orchestra", "from", "orchestra", "where", "orchestra_id", "not", "in", "(", "select", "orchestra_id", "from", "performance", ")", ";"], "ru": ["select", "orchestra", "from", "orchestra", "where", "orchestra_id", "not", "in", "(", "select", "orchestra_id", "from", "performance", ")", ";"]}, "query_toks_no_values": {"en": ["select", "orchestra", "from", "orchestra", "where", "orchestra_id", "not", "in", "(", "select", "orchestra_id", "from", "performance", ")", ";"], "ru": ["select", "orchestra", "from", "orchestra", "where", "orchestra_id", "not", "in", "(", "select", "orchestra_id", "from", "performance", ")", ";"]}}, {"id": "D_0856", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance);", "ru": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance);"}, "question": {"en": "What are the orchestras that do not have any performances?", "ru": "Какие оркестры не выступают?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "orchestras", "that", "do", "not", "have", "any", "performances", "?"], "ru": ["Какие", "оркестры", "не", "выступают", "?"]}, "query_toks": {"en": ["select", "orchestra", "from", "orchestra", "where", "orchestra_id", "not", "in", "(", "select", "orchestra_id", "from", "performance", ")", ";"], "ru": ["select", "orchestra", "from", "orchestra", "where", "orchestra_id", "not", "in", "(", "select", "orchestra_id", "from", "performance", ")", ";"]}, "query_toks_no_values": {"en": ["select", "orchestra", "from", "orchestra", "where", "orchestra_id", "not", "in", "(", "select", "orchestra_id", "from", "performance", ")", ";"], "ru": ["select", "orchestra", "from", "orchestra", "where", "orchestra_id", "not", "in", "(", "select", "orchestra_id", "from", "performance", ")", ";"]}}, {"id": "D_0857", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003;", "ru": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003;"}, "question": {"en": "Show the record companies shared by orchestras founded before 2003 and after 2003.", "ru": "Покажите звукозаписывающие компании оркестров, основанных до 2003 года и после 2003 года."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 4, [0, [0, 10, false], null], 2003.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 2003.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 4, [0, [0, 10, false], null], 2003.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 2003.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "record", "companies", "shared", "by", "orchestras", "founded", "before", "2003", "and", "after", "2003", "."], "ru": ["Покажите", "звукозаписывающие", "компании", "оркестров", ",", "основанных", "до", "2003", "года", "и", "после", "2003", "года", "."]}, "query_toks": {"en": ["select", "record_company", "from", "orchestra", "where", "year_of_founded", "<", "2003", "intersect", "select", "record_company", "from", "orchestra", "where", "year_of_founded", ">", "2003", ";"], "ru": ["select", "record_company", "from", "orchestra", "where", "year_of_founded", "<", "2003", "intersect", "select", "record_company", "from", "orchestra", "where", "year_of_founded", ">", "2003", ";"]}, "query_toks_no_values": {"en": ["select", "record_company", "from", "orchestra", "where", "year_of_founded", "<", "2003", "intersect", "select", "record_company", "from", "orchestra", "where", "year_of_founded", ">", "2003", ";"], "ru": ["select", "record_company", "from", "orchestra", "where", "year_of_founded", "<", "2003", "intersect", "select", "record_company", "from", "orchestra", "where", "year_of_founded", ">", "2003", ";"]}}, {"id": "D_0858", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003;", "ru": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003;"}, "question": {"en": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?", "ru": "Какие звукозаписывающие компании используются как оркестрами, основанными до 2003 года, так и оркестрами, основанными после 2003 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 4, [0, [0, 10, false], null], 2003.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 2003.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 4, [0, [0, 10, false], null], 2003.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 2003.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "record", "companies", "that", "are", "used", "by", "both", "orchestras", "founded", "before", "2003", "and", "those", "founded", "after", "2003", "?"], "ru": ["Какие", "звукозаписывающие", "компании", "используются", "как", "оркестрами", ",", "основанными", "до", "2003", "года", ",", "так", "и", "оркестрами", ",", "основанными", "после", "2003", "года", "?"]}, "query_toks": {"en": ["select", "record_company", "from", "orchestra", "where", "year_of_founded", "<", "2003", "intersect", "select", "record_company", "from", "orchestra", "where", "year_of_founded", ">", "2003", ";"], "ru": ["select", "record_company", "from", "orchestra", "where", "year_of_founded", "<", "2003", "intersect", "select", "record_company", "from", "orchestra", "where", "year_of_founded", ">", "2003", ";"]}, "query_toks_no_values": {"en": ["select", "record_company", "from", "orchestra", "where", "year_of_founded", "<", "2003", "intersect", "select", "record_company", "from", "orchestra", "where", "year_of_founded", ">", "2003", ";"], "ru": ["select", "record_company", "from", "orchestra", "where", "year_of_founded", "<", "2003", "intersect", "select", "record_company", "from", "orchestra", "where", "year_of_founded", ">", "2003", ";"]}}, {"id": "D_0859", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\";", "ru": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\";"}, "question": {"en": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".", "ru": "Найди количество оркестров, чей формат записи - \"CD\" или \"DVD\"."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"CD\"", null], "or", [false, 2, [0, [0, 11, false], null], "\"DVD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"CD\"", null], "or", [false, 2, [0, [0, 11, false], null], "\"DVD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "orchestras", "whose", "record", "format", "is", "``", "CD", "''", "or", "``", "DVD", "''", "."], "ru": ["Найди", "количество", "оркестров", ",", "чей", "формат", "записи", "-", "``", "CD", "''", "или", "``", "DVD", "''", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "orchestra", "where", "major_record_format", "=", "\"CD\"", "or", "major_record_format", "=", "\"DVD\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "orchestra", "where", "major_record_format", "=", "\"CD\"", "or", "major_record_format", "=", "\"DVD\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "orchestra", "where", "major_record_format", "=", "value", "or", "major_record_format", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "orchestra", "where", "major_record_format", "=", "value", "or", "major_record_format", "=", "value", ";"]}}, {"id": "D_0860", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\";", "ru": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\";"}, "question": {"en": "Count the number of orchestras that have CD or DVD as their record format.", "ru": "Подсчитай количество оркестров, у которых есть CD или DVD в качестве формата записи."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"CD\"", null], "or", [false, 2, [0, [0, 11, false], null], "\"DVD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"CD\"", null], "or", [false, 2, [0, [0, 11, false], null], "\"DVD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "orchestras", "that", "have", "CD", "or", "DVD", "as", "their", "record", "format", "."], "ru": ["Подсчитай", "количество", "оркестров", ",", "у", "которых", "есть", "CD", "или", "DVD", "в", "качестве", "формата", "записи", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "orchestra", "where", "major_record_format", "=", "\"CD\"", "or", "major_record_format", "=", "\"DVD\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "orchestra", "where", "major_record_format", "=", "\"CD\"", "or", "major_record_format", "=", "\"DVD\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "orchestra", "where", "major_record_format", "=", "value", "or", "major_record_format", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "orchestra", "where", "major_record_format", "=", "value", "or", "major_record_format", "=", "value", ";"]}}, {"id": "D_0861", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1;", "ru": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1;"}, "question": {"en": "Show the years in which orchestras that have given more than one performance are founded.", "ru": "Покажите годы, когда были основаны оркестры, давшие более одного выступления."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "years", "in", "which", "orchestras", "that", "have", "given", "more", "than", "one", "performance", "are", "founded", "."], "ru": ["Покажите", "годы", ",", "когда", "были", "основаны", "оркестры", ",", "давшие", "более", "одного", "выступления", "."]}, "query_toks": {"en": ["select", "year_of_founded", "from", "orchestra", "as", "t1", "join", "performance", "as", "t2", "on", "t1.orchestra_id", "=", "t2.orchestra_id", "group", "by", "t2.orchestra_id", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "year_of_founded", "from", "orchestra", "as", "t1", "join", "performance", "as", "t2", "on", "t1.orchestra_id", "=", "t2.orchestra_id", "group", "by", "t2.orchestra_id", "having", "count", "(", "*", ")", ">", "1", ";"]}, "query_toks_no_values": {"en": ["select", "year_of_founded", "from", "orchestra", "as", "t1", "join", "performance", "as", "t2", "on", "t1.orchestra_id", "=", "t2.orchestra_id", "group", "by", "t2.orchestra_id", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "year_of_founded", "from", "orchestra", "as", "t1", "join", "performance", "as", "t2", "on", "t1.orchestra_id", "=", "t2.orchestra_id", "group", "by", "t2.orchestra_id", "having", "count", "(", "*", ")", ">", "1", ";"]}}, {"id": "D_0862", "db_id": "orchestra", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1;", "ru": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1;"}, "question": {"en": "What are years of founding for orchestras that have had more than a single performance?", "ru": "Когда были основаны оркестры, которые выступали более одного раза?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 13, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "years", "of", "founding", "for", "orchestras", "that", "have", "had", "more", "than", "a", "single", "performance", "?"], "ru": ["Когда", "были", "основаны", "оркестры", ",", "которые", "выступали", "более", "одного", "раза", "?"]}, "query_toks": {"en": ["select", "year_of_founded", "from", "orchestra", "as", "t1", "join", "performance", "as", "t2", "on", "t1.orchestra_id", "=", "t2.orchestra_id", "group", "by", "t2.orchestra_id", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "year_of_founded", "from", "orchestra", "as", "t1", "join", "performance", "as", "t2", "on", "t1.orchestra_id", "=", "t2.orchestra_id", "group", "by", "t2.orchestra_id", "having", "count", "(", "*", ")", ">", "1", ";"]}, "query_toks_no_values": {"en": ["select", "year_of_founded", "from", "orchestra", "as", "t1", "join", "performance", "as", "t2", "on", "t1.orchestra_id", "=", "t2.orchestra_id", "group", "by", "t2.orchestra_id", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "year_of_founded", "from", "orchestra", "as", "t1", "join", "performance", "as", "t2", "on", "t1.orchestra_id", "=", "t2.orchestra_id", "group", "by", "t2.orchestra_id", "having", "count", "(", "*", ")", ">", "1", ";"]}}, {"id": "D_0863", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Highschooler;", "ru": "SELECT count(*) FROM Highschooler;"}, "question": {"en": "How many high schoolers are there?", "ru": "Сколько здесь старшеклассников?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "high", "schoolers", "are", "there", "?"], "ru": ["Сколько", "здесь", "старшеклассников", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "highschooler", ";"], "ru": ["select", "count", "(", "*", ")", "from", "highschooler", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "highschooler", ";"], "ru": ["select", "count", "(", "*", ")", "from", "highschooler", ";"]}}, {"id": "D_0864", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Highschooler;", "ru": "SELECT count(*) FROM Highschooler;"}, "question": {"en": "Count the number of high schoolers.", "ru": "Подсчитайте количество старшеклассников."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "high", "schoolers", "."], "ru": ["Подсчитайте", "количество", "старшеклассников", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "highschooler", ";"], "ru": ["select", "count", "(", "*", ")", "from", "highschooler", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "highschooler", ";"], "ru": ["select", "count", "(", "*", ")", "from", "highschooler", ";"]}}, {"id": "D_0865", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  grade FROM Highschooler;", "ru": "SELECT name ,  grade FROM Highschooler;"}, "question": {"en": "Show the names and grades of each high schooler.", "ru": "Покажите имена и оценки каждого старшеклассника."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "names", "and", "grades", "of", "each", "high", "schooler", "."], "ru": ["Покажите", "имена", "и", "оценки", "каждого", "старшеклассника", "."]}, "query_toks": {"en": ["select", "name", ",", "grade", "from", "highschooler", ";"], "ru": ["select", "name", ",", "grade", "from", "highschooler", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "grade", "from", "highschooler", ";"], "ru": ["select", "name", ",", "grade", "from", "highschooler", ";"]}}, {"id": "D_0866", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  grade FROM Highschooler;", "ru": "SELECT name ,  grade FROM Highschooler;"}, "question": {"en": "What are the names and grades for each high schooler?", "ru": "Какие имена и оценки у каждого старшеклассника?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "and", "grades", "for", "each", "high", "schooler", "?"], "ru": ["Какие", "имена", "и", "оценки", "у", "каждого", "старшеклассника", "?"]}, "query_toks": {"en": ["select", "name", ",", "grade", "from", "highschooler", ";"], "ru": ["select", "name", ",", "grade", "from", "highschooler", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "grade", "from", "highschooler", ";"], "ru": ["select", "name", ",", "grade", "from", "highschooler", ";"]}}, {"id": "D_0867", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT grade FROM Highschooler;", "ru": "SELECT grade FROM Highschooler;"}, "question": {"en": "Show all the grades of the high schoolers.", "ru": "Показать все оценки старшеклассников."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "all", "the", "grades", "of", "the", "high", "schoolers", "."], "ru": ["Показать", "все", "оценки", "старшеклассников", "."]}, "query_toks": {"en": ["select", "grade", "from", "highschooler", ";"], "ru": ["select", "grade", "from", "highschooler", ";"]}, "query_toks_no_values": {"en": ["select", "grade", "from", "highschooler", ";"], "ru": ["select", "grade", "from", "highschooler", ";"]}}, {"id": "D_0868", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT grade FROM Highschooler;", "ru": "SELECT grade FROM Highschooler;"}, "question": {"en": "What is the grade of each high schooler?", "ru": "Какая оценка у каждого старшеклассника?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "grade", "of", "each", "high", "schooler", "?"], "ru": ["Какая", "оценка", "у", "каждого", "старшеклассника", "?"]}, "query_toks": {"en": ["select", "grade", "from", "highschooler", ";"], "ru": ["select", "grade", "from", "highschooler", ";"]}, "query_toks_no_values": {"en": ["select", "grade", "from", "highschooler", ";"], "ru": ["select", "grade", "from", "highschooler", ";"]}}, {"id": "D_0869", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\";", "ru": "SELECT grade FROM Highschooler WHERE name  =  \"Лев\";"}, "question": {"en": "What grade is Kyle in?", "ru": "В каком классе Лев?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Лев\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "grade", "is", "Kyle", "in", "?"], "ru": ["В", "каком", "классе", "Лев", "?"]}, "query_toks": {"en": ["select", "grade", "from", "highschooler", "where", "name", "=", "\"Kyle\"", ";"], "ru": ["select", "grade", "from", "highschooler", "where", "name", "=", "\"Лев\"", ";"]}, "query_toks_no_values": {"en": ["select", "grade", "from", "highschooler", "where", "name", "=", "value", ";"], "ru": ["select", "grade", "from", "highschooler", "where", "name", "=", "value", ";"]}}, {"id": "D_0870", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\";", "ru": "SELECT grade FROM Highschooler WHERE name  =  \"Лев\";"}, "question": {"en": "Return the grade for the high schooler named Kyle.", "ru": "Отобразить оценку старшеклассника по имени Лев."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Лев\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "grade", "for", "the", "high", "schooler", "named", "Kyle", "."], "ru": ["Отобразить", "оценку", "старшеклассника", "по", "имени", "Лев", "."]}, "query_toks": {"en": ["select", "grade", "from", "highschooler", "where", "name", "=", "\"Kyle\"", ";"], "ru": ["select", "grade", "from", "highschooler", "where", "name", "=", "\"Лев\"", ";"]}, "query_toks_no_values": {"en": ["select", "grade", "from", "highschooler", "where", "name", "=", "value", ";"], "ru": ["select", "grade", "from", "highschooler", "where", "name", "=", "value", ";"]}}, {"id": "D_0871", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM Highschooler WHERE grade  =  10;", "ru": "SELECT name FROM Highschooler WHERE grade  =  10;"}, "question": {"en": "Show the names of all high schoolers in grade 10.", "ru": "Покажите имена всех старшеклассников 10 класса."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "names", "of", "all", "high", "schoolers", "in", "grade", "10", "."], "ru": ["Покажите", "имена", "всех", "старшеклассников", "10", "класса", "."]}, "query_toks": {"en": ["select", "name", "from", "highschooler", "where", "grade", "=", "10", ";"], "ru": ["select", "name", "from", "highschooler", "where", "grade", "=", "10", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "highschooler", "where", "grade", "=", "10", ";"], "ru": ["select", "name", "from", "highschooler", "where", "grade", "=", "10", ";"]}}, {"id": "D_0872", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM Highschooler WHERE grade  =  10;", "ru": "SELECT name FROM Highschooler WHERE grade  =  10;"}, "question": {"en": "What are the names of all high schoolers in grade 10?", "ru": "Как зовут всех старшеклассников 10 класса?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "all", "high", "schoolers", "in", "grade", "10", "?"], "ru": ["Как", "зовут", "всех", "старшеклассников", "10", "класса", "?"]}, "query_toks": {"en": ["select", "name", "from", "highschooler", "where", "grade", "=", "10", ";"], "ru": ["select", "name", "from", "highschooler", "where", "grade", "=", "10", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "highschooler", "where", "grade", "=", "10", ";"], "ru": ["select", "name", "from", "highschooler", "where", "grade", "=", "10", ";"]}}, {"id": "D_0873", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\";", "ru": "SELECT ID FROM Highschooler WHERE name  =  \"Лев\";"}, "question": {"en": "Show the ID of the high schooler named Kyle.", "ru": "Найди id старшеклассника по имени Лев."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Лев\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "ID", "of", "the", "high", "schooler", "named", "Kyle", "."], "ru": ["Найди", "id", "старшеклассника", "по", "имени", "Лев", "."]}, "query_toks": {"en": ["select", "id", "from", "highschooler", "where", "name", "=", "\"Kyle\"", ";"], "ru": ["select", "id", "from", "highschooler", "where", "name", "=", "\"Лев\"", ";"]}, "query_toks_no_values": {"en": ["select", "id", "from", "highschooler", "where", "name", "=", "value", ";"], "ru": ["select", "id", "from", "highschooler", "where", "name", "=", "value", ";"]}}, {"id": "D_0874", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\";", "ru": "SELECT ID FROM Highschooler WHERE name  =  \"Лев\";"}, "question": {"en": "What is Kyle's id?", "ru": "Какой у Льва id?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Лев\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "Kyle", "'s", "id", "?"], "ru": ["Какой", "у", "Льва", "id", "?"]}, "query_toks": {"en": ["select", "id", "from", "highschooler", "where", "name", "=", "\"Kyle\"", ";"], "ru": ["select", "id", "from", "highschooler", "where", "name", "=", "\"Лев\"", ";"]}, "query_toks_no_values": {"en": ["select", "id", "from", "highschooler", "where", "name", "=", "value", ";"], "ru": ["select", "id", "from", "highschooler", "where", "name", "=", "value", ";"]}}, {"id": "D_0875", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10;", "ru": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10;"}, "question": {"en": "How many high schoolers are there in grade 9 or 10?", "ru": "Сколько старшеклассников в 9 или 10 классе?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 9.0, null], "or", [false, 2, [0, [0, 3, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 9.0, null], "or", [false, 2, [0, [0, 3, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "high", "schoolers", "are", "there", "in", "grade", "9", "or", "10", "?"], "ru": ["Сколько", "старшеклассников", "в", "9", "или", "10", "классе", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "highschooler", "where", "grade", "=", "9", "or", "grade", "=", "10", ";"], "ru": ["select", "count", "(", "*", ")", "from", "highschooler", "where", "grade", "=", "9", "or", "grade", "=", "10", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "highschooler", "where", "grade", "=", "9", "or", "grade", "=", "10", ";"], "ru": ["select", "count", "(", "*", ")", "from", "highschooler", "where", "grade", "=", "9", "or", "grade", "=", "10", ";"]}}, {"id": "D_0876", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10;", "ru": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10;"}, "question": {"en": "Count the number of high schoolers in grades 9 or 10.", "ru": "Подсчитайте количество старшеклассников в 9 или 10 классах."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 9.0, null], "or", [false, 2, [0, [0, 3, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 9.0, null], "or", [false, 2, [0, [0, 3, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "high", "schoolers", "in", "grades", "9", "or", "10", "."], "ru": ["Подсчитайте", "количество", "старшеклассников", "в", "9", "или", "10", "классах", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "highschooler", "where", "grade", "=", "9", "or", "grade", "=", "10", ";"], "ru": ["select", "count", "(", "*", ")", "from", "highschooler", "where", "grade", "=", "9", "or", "grade", "=", "10", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "highschooler", "where", "grade", "=", "9", "or", "grade", "=", "10", ";"], "ru": ["select", "count", "(", "*", ")", "from", "highschooler", "where", "grade", "=", "9", "or", "grade", "=", "10", ";"]}}, {"id": "D_0877", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade;", "ru": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade;"}, "question": {"en": "Show the number of high schoolers for each grade.", "ru": "Количество старшеклассников в каждом классе."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "number", "of", "high", "schoolers", "for", "each", "grade", "."], "ru": ["Количество", "старшеклассников", "в", "каждом", "классе", "."]}, "query_toks": {"en": ["select", "grade", ",", "count", "(", "*", ")", "from", "highschooler", "group", "by", "grade", ";"], "ru": ["select", "grade", ",", "count", "(", "*", ")", "from", "highschooler", "group", "by", "grade", ";"]}, "query_toks_no_values": {"en": ["select", "grade", ",", "count", "(", "*", ")", "from", "highschooler", "group", "by", "grade", ";"], "ru": ["select", "grade", ",", "count", "(", "*", ")", "from", "highschooler", "group", "by", "grade", ";"]}}, {"id": "D_0878", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade;", "ru": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade;"}, "question": {"en": "How many high schoolers are in each grade?", "ru": "Сколько старшеклассников в каждом классе?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "high", "schoolers", "are", "in", "each", "grade", "?"], "ru": ["Сколько", "старшеклассников", "в", "каждом", "классе", "?"]}, "query_toks": {"en": ["select", "grade", ",", "count", "(", "*", ")", "from", "highschooler", "group", "by", "grade", ";"], "ru": ["select", "grade", ",", "count", "(", "*", ")", "from", "highschooler", "group", "by", "grade", ";"]}, "query_toks_no_values": {"en": ["select", "grade", ",", "count", "(", "*", ")", "from", "highschooler", "group", "by", "grade", ";"], "ru": ["select", "grade", ",", "count", "(", "*", ")", "from", "highschooler", "group", "by", "grade", ";"]}}, {"id": "D_0879", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which grade has the most high schoolers?", "ru": "В каком классе учатся наибольшее количество старшеклассников?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "grade", "has", "the", "most", "high", "schoolers", "?"], "ru": ["В", "каком", "классе", "учатся", "наибольшее", "количество", "старшеклассников", "?"]}, "query_toks": {"en": ["select", "grade", "from", "highschooler", "group", "by", "grade", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "grade", "from", "highschooler", "group", "by", "grade", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "grade", "from", "highschooler", "group", "by", "grade", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "grade", "from", "highschooler", "group", "by", "grade", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0880", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Return the grade that has the greatest number of high schoolers.", "ru": "Покажи оценку большинства старшеклассников."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "grade", "that", "has", "the", "greatest", "number", "of", "high", "schoolers", "."], "ru": ["Покажи", "оценку", "большинства", "старшеклассников", "."]}, "query_toks": {"en": ["select", "grade", "from", "highschooler", "group", "by", "grade", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "grade", "from", "highschooler", "group", "by", "grade", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "grade", "from", "highschooler", "group", "by", "grade", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "grade", "from", "highschooler", "group", "by", "grade", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0881", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4;", "ru": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4;"}, "question": {"en": "Show me all grades that have at least 4 students.", "ru": "Покажи все классы, в которых учится не менее 4 учеников."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 4.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 4.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "me", "all", "grades", "that", "have", "at", "least", "4", "students", "."], "ru": ["Покажи", "все", "классы", ",", "в", "которых", "учится", "не", "менее", "4", "учеников", "."]}, "query_toks": {"en": ["select", "grade", "from", "highschooler", "group", "by", "grade", "having", "count", "(", "*", ")", ">=", "4", ";"], "ru": ["select", "grade", "from", "highschooler", "group", "by", "grade", "having", "count", "(", "*", ")", ">=", "4", ";"]}, "query_toks_no_values": {"en": ["select", "grade", "from", "highschooler", "group", "by", "grade", "having", "count", "(", "*", ")", ">=", "4", ";"], "ru": ["select", "grade", "from", "highschooler", "group", "by", "grade", "having", "count", "(", "*", ")", ">=", "4", ";"]}}, {"id": "D_0882", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4;", "ru": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4;"}, "question": {"en": "Which grades have 4 or more high schoolers?", "ru": "В каких классах учатся 4 или более старшеклассников?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 4.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 5, [0, [3, 0, false], null], 4.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "grades", "have", "4", "or", "more", "high", "schoolers", "?"], "ru": ["В", "каких", "классах", "учатся", "4", "или", "более", "старшеклассников", "?"]}, "query_toks": {"en": ["select", "grade", "from", "highschooler", "group", "by", "grade", "having", "count", "(", "*", ")", ">=", "4", ";"], "ru": ["select", "grade", "from", "highschooler", "group", "by", "grade", "having", "count", "(", "*", ")", ">=", "4", ";"]}, "query_toks_no_values": {"en": ["select", "grade", "from", "highschooler", "group", "by", "grade", "having", "count", "(", "*", ")", ">=", "4", ";"], "ru": ["select", "grade", "from", "highschooler", "group", "by", "grade", "having", "count", "(", "*", ")", ">=", "4", ";"]}}, {"id": "D_0883", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id;", "ru": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id;"}, "question": {"en": "Show the student IDs and numbers of friends corresponding to each.", "ru": "Покажите студенческие id и количество друзей, соответствующих каждому из этих id."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "student", "IDs", "and", "numbers", "of", "friends", "corresponding", "to", "each", "."], "ru": ["Покажите", "студенческие", "id", "и", "количество", "друзей", ",", "соответствующих", "каждому", "из", "этих", "id", "."]}, "query_toks": {"en": ["select", "student_id", ",", "count", "(", "*", ")", "from", "friend", "group", "by", "student_id", ";"], "ru": ["select", "student_id", ",", "count", "(", "*", ")", "from", "friend", "group", "by", "student_id", ";"]}, "query_toks_no_values": {"en": ["select", "student_id", ",", "count", "(", "*", ")", "from", "friend", "group", "by", "student_id", ";"], "ru": ["select", "student_id", ",", "count", "(", "*", ")", "from", "friend", "group", "by", "student_id", ";"]}}, {"id": "D_0884", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id;", "ru": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id;"}, "question": {"en": "How many friends does each student have?", "ru": "Сколько друзей у каждого ученика?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "friends", "does", "each", "student", "have", "?"], "ru": ["Сколько", "друзей", "у", "каждого", "ученика", "?"]}, "query_toks": {"en": ["select", "student_id", ",", "count", "(", "*", ")", "from", "friend", "group", "by", "student_id", ";"], "ru": ["select", "student_id", ",", "count", "(", "*", ")", "from", "friend", "group", "by", "student_id", ";"]}, "query_toks_no_values": {"en": ["select", "student_id", ",", "count", "(", "*", ")", "from", "friend", "group", "by", "student_id", ";"], "ru": ["select", "student_id", ",", "count", "(", "*", ")", "from", "friend", "group", "by", "student_id", ";"]}}, {"id": "D_0885", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id;", "ru": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id;"}, "question": {"en": "Show the names of high school students and their corresponding number of friends.", "ru": "Покажите имена старшеклассников и количество их друзей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "names", "of", "high", "school", "students", "and", "their", "corresponding", "number", "of", "friends", "."], "ru": ["Покажите", "имена", "старшеклассников", "и", "количество", "их", "друзей", "."]}, "query_toks": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", ";"]}}, {"id": "D_0886", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id;", "ru": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id;"}, "question": {"en": "What are the names of the high schoolers and how many friends does each have?", "ru": "Как зовут старшеклассников и сколько друзей у каждого из них?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "high", "schoolers", "and", "how", "many", "friends", "does", "each", "have", "?"], "ru": ["Как", "зовут", "старшеклассников", "и", "сколько", "друзей", "у", "каждого", "из", "них", "?"]}, "query_toks": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", ";"]}}, {"id": "D_0887", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the name of the high schooler who has the greatest number of friends?", "ru": "Как зовут старшеклассника, у которого больше всего друзей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "high", "schooler", "who", "has", "the", "greatest", "number", "of", "friends", "?"], "ru": ["Как", "зовут", "старшеклассника", ",", "у", "которого", "больше", "всего", "друзей", "?"]}, "query_toks": {"en": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0888", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Return the name of the high school student with the most friends.", "ru": "Отображать имя старшеклассника с наибольшим количеством друзей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "name", "of", "the", "high", "school", "student", "with", "the", "most", "friends", "."], "ru": ["Отображать", "имя", "старшеклассника", "с", "наибольшим", "количеством", "друзей", "."]}, "query_toks": {"en": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0889", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3;", "ru": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3;"}, "question": {"en": "Show the names of high schoolers who have at least 3 friends.", "ru": "Покажи имена старшеклассников, у которых есть как минимум 3 друга."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "names", "of", "high", "schoolers", "who", "have", "at", "least", "3", "friends", "."], "ru": ["Покажи", "имена", "старшеклассников", ",", "у", "которых", "есть", "как", "минимум", "3", "друга", "."]}, "query_toks": {"en": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "3", ";"], "ru": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "3", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "3", ";"], "ru": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "3", ";"]}}, {"id": "D_0890", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3;", "ru": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3;"}, "question": {"en": "What are the names of high schoolers who have 3 or more friends?", "ru": "Как зовут старшеклассников, у которых есть 3 или более друзей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "have", "3", "or", "more", "friends", "?"], "ru": ["Как", "зовут", "старшеклассников", ",", "у", "которых", "есть", "3", "или", "более", "друзей", "?"]}, "query_toks": {"en": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "3", ";"], "ru": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "3", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "3", ";"], "ru": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "3", ";"]}}, {"id": "D_0891", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\";", "ru": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Лев\";"}, "question": {"en": "Show the names of all of the high schooler Kyle's friends.", "ru": "Покажите имена всех друзей старшеклассника Льва."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Лев\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "names", "of", "all", "of", "the", "high", "schooler", "Kyle", "'s", "friends", "."], "ru": ["Покажите", "имена", "всех", "друзей", "старшеклассника", "Льва", "."]}, "query_toks": {"en": ["select", "t3.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "join", "highschooler", "as", "t3", "on", "t1.friend_id", "=", "t3.id", "where", "t2.name", "=", "\"Kyle\"", ";"], "ru": ["select", "t3.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "join", "highschooler", "as", "t3", "on", "t1.friend_id", "=", "t3.id", "where", "t2.name", "=", "\"Лев\"", ";"]}, "query_toks_no_values": {"en": ["select", "t3.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "join", "highschooler", "as", "t3", "on", "t1.friend_id", "=", "t3.id", "where", "t2.name", "=", "value", ";"], "ru": ["select", "t3.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "join", "highschooler", "as", "t3", "on", "t1.friend_id", "=", "t3.id", "where", "t2.name", "=", "value", ";"]}}, {"id": "D_0892", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\";", "ru": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Лев\";"}, "question": {"en": "Return the names of friends of the high school student Kyle.", "ru": "Покажи имена друзей старшеклассника Льва."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 5, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Лев\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "names", "of", "friends", "of", "the", "high", "school", "student", "Kyle", "."], "ru": ["Покажи", "имена", "друзей", "старшеклассника", "Льва", "."]}, "query_toks": {"en": ["select", "t3.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "join", "highschooler", "as", "t3", "on", "t1.friend_id", "=", "t3.id", "where", "t2.name", "=", "\"Kyle\"", ";"], "ru": ["select", "t3.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "join", "highschooler", "as", "t3", "on", "t1.friend_id", "=", "t3.id", "where", "t2.name", "=", "\"Лев\"", ";"]}, "query_toks_no_values": {"en": ["select", "t3.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "join", "highschooler", "as", "t3", "on", "t1.friend_id", "=", "t3.id", "where", "t2.name", "=", "value", ";"], "ru": ["select", "t3.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "join", "highschooler", "as", "t3", "on", "t1.friend_id", "=", "t3.id", "where", "t2.name", "=", "value", ";"]}}, {"id": "D_0893", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\";", "ru": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Лев\";"}, "question": {"en": "How many friends does the high school student Kyle have?", "ru": "Сколько друзей у старшеклассника Льва?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Лев\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "friends", "does", "the", "high", "school", "student", "Kyle", "have", "?"], "ru": ["Сколько", "друзей", "у", "старшеклассника", "Льва", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.name", "=", "\"Kyle\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.name", "=", "\"Лев\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.name", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.name", "=", "value", ";"]}}, {"id": "D_0894", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\";", "ru": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Лев\";"}, "question": {"en": "Count the number of friends Kyle has.", "ru": "Подсчитай количество друзей Льва."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Лев\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "friends", "Kyle", "has", "."], "ru": ["Подсчитай", "количество", "друзей", "Льва", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.name", "=", "\"Kyle\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.name", "=", "\"Лев\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.name", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.name", "=", "value", ";"]}}, {"id": "D_0895", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend;", "ru": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend;"}, "question": {"en": "Show ids of all students who do not have any friends.", "ru": "Показать id всех студентов, у которых нет друзей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["Show", "ids", "of", "all", "students", "who", "do", "not", "have", "any", "friends", "."], "ru": ["Показать", "id", "всех", "студентов", ",", "у", "которых", "нет", "друзей", "."]}, "query_toks": {"en": ["select", "id", "from", "highschooler", "except", "select", "student_id", "from", "friend", ";"], "ru": ["select", "id", "from", "highschooler", "except", "select", "student_id", "from", "friend", ";"]}, "query_toks_no_values": {"en": ["select", "id", "from", "highschooler", "except", "select", "student_id", "from", "friend", ";"], "ru": ["select", "id", "from", "highschooler", "except", "select", "student_id", "from", "friend", ";"]}}, {"id": "D_0896", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend;", "ru": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend;"}, "question": {"en": "What are the ids of high school students who do not have friends?", "ru": "Каковы id старшеклассников, у которых нет друзей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["What", "are", "the", "ids", "of", "high", "school", "students", "who", "do", "not", "have", "friends", "?"], "ru": ["Каковы", "id", "старшеклассников", ",", "у", "которых", "нет", "друзей", "?"]}, "query_toks": {"en": ["select", "id", "from", "highschooler", "except", "select", "student_id", "from", "friend", ";"], "ru": ["select", "id", "from", "highschooler", "except", "select", "student_id", "from", "friend", ";"]}, "query_toks_no_values": {"en": ["select", "id", "from", "highschooler", "except", "select", "student_id", "from", "friend", ";"], "ru": ["select", "id", "from", "highschooler", "except", "select", "student_id", "from", "friend", ";"]}}, {"id": "D_0897", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id;", "ru": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id;"}, "question": {"en": "Show names of all high school students who do not have any friends.", "ru": "Покажите имена всех старшеклассников, у которых нет друзей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["Show", "names", "of", "all", "high", "school", "students", "who", "do", "not", "have", "any", "friends", "."], "ru": ["Покажите", "имена", "всех", "старшеклассников", ",", "у", "которых", "нет", "друзей", "."]}, "query_toks": {"en": ["select", "name", "from", "highschooler", "except", "select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ";"], "ru": ["select", "name", "from", "highschooler", "except", "select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "highschooler", "except", "select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ";"], "ru": ["select", "name", "from", "highschooler", "except", "select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ";"]}}, {"id": "D_0898", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id;", "ru": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id;"}, "question": {"en": "What are the names of students who have no friends?", "ru": "Как зовут студентов, у которых нет друзей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "students", "who", "have", "no", "friends", "?"], "ru": ["Как", "зовут", "студентов", ",", "у", "которых", "нет", "друзей", "?"]}, "query_toks": {"en": ["select", "name", "from", "highschooler", "except", "select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ";"], "ru": ["select", "name", "from", "highschooler", "except", "select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "highschooler", "except", "select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ";"], "ru": ["select", "name", "from", "highschooler", "except", "select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ";"]}}, {"id": "D_0899", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes;", "ru": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes;"}, "question": {"en": "Show the ids of high schoolers who have friends and are also liked by someone else.", "ru": "Покажи id старшеклассников, у которых есть друзья и которые кому-то нравятся."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "ids", "of", "high", "schoolers", "who", "have", "friends", "and", "are", "also", "liked", "by", "someone", "else", "."], "ru": ["Покажи", "id", "старшеклассников", ",", "у", "которых", "есть", "друзья", "и", "которые", "кому-то", "нравятся", "."]}, "query_toks": {"en": ["select", "student_id", "from", "friend", "intersect", "select", "liked_id", "from", "likes", ";"], "ru": ["select", "student_id", "from", "friend", "intersect", "select", "liked_id", "from", "likes", ";"]}, "query_toks_no_values": {"en": ["select", "student_id", "from", "friend", "intersect", "select", "liked_id", "from", "likes", ";"], "ru": ["select", "student_id", "from", "friend", "intersect", "select", "liked_id", "from", "likes", ";"]}}, {"id": "D_0900", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes;", "ru": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes;"}, "question": {"en": "What are the ids of students who both have friends and are liked?", "ru": "Какие id у студентов, у которых есть друзья и которые нравятся другим?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "ids", "of", "students", "who", "both", "have", "friends", "and", "are", "liked", "?"], "ru": ["Какие", "id", "у", "студентов", ",", "у", "которых", "есть", "друзья", "и", "которые", "нравятся", "другим", "?"]}, "query_toks": {"en": ["select", "student_id", "from", "friend", "intersect", "select", "liked_id", "from", "likes", ";"], "ru": ["select", "student_id", "from", "friend", "intersect", "select", "liked_id", "from", "likes", ";"]}, "query_toks_no_values": {"en": ["select", "student_id", "from", "friend", "intersect", "select", "liked_id", "from", "likes", ";"], "ru": ["select", "student_id", "from", "friend", "intersect", "select", "liked_id", "from", "likes", ";"]}}, {"id": "D_0901", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id;", "ru": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id;"}, "question": {"en": "Show name of all students who have some friends and also are liked by someone else.", "ru": "Показать имена всех студентов, у которых есть друзья и они кому-то нравятся."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Show", "name", "of", "all", "students", "who", "have", "some", "friends", "and", "also", "are", "liked", "by", "someone", "else", "."], "ru": ["Показать", "имена", "всех", "студентов", ",", "у", "которых", "есть", "друзья", "и", "они", "кому-то", "нравятся", "."]}, "query_toks": {"en": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "intersect", "select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.liked_id", "=", "t2.id", ";"], "ru": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "intersect", "select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.liked_id", "=", "t2.id", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "intersect", "select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.liked_id", "=", "t2.id", ";"], "ru": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "intersect", "select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.liked_id", "=", "t2.id", ";"]}}, {"id": "D_0902", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id;", "ru": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id;"}, "question": {"en": "What are the names of high schoolers who both have friends and are liked?", "ru": "Как зовут старшеклассников, у которых есть друзья и которые нравятся людям?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "both", "have", "friends", "and", "are", "liked", "?"], "ru": ["Как", "зовут", "старшеклассников", ",", "у", "которых", "есть", "друзья", "и", "которые", "нравятся", "людям", "?"]}, "query_toks": {"en": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "intersect", "select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.liked_id", "=", "t2.id", ";"], "ru": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "intersect", "select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.liked_id", "=", "t2.id", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "intersect", "select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.liked_id", "=", "t2.id", ";"], "ru": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "intersect", "select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.liked_id", "=", "t2.id", ";"]}}, {"id": "D_0903", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id;", "ru": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id;"}, "question": {"en": "Count the number of likes for each student id.", "ru": "Подсчитайте количество лайков для каждого студенческого id."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "likes", "for", "each", "student", "id", "."], "ru": ["Подсчитайте", "количество", "лайков", "для", "каждого", "студенческого", "id", "."]}, "query_toks": {"en": ["select", "student_id", ",", "count", "(", "*", ")", "from", "likes", "group", "by", "student_id", ";"], "ru": ["select", "student_id", ",", "count", "(", "*", ")", "from", "likes", "group", "by", "student_id", ";"]}, "query_toks_no_values": {"en": ["select", "student_id", ",", "count", "(", "*", ")", "from", "likes", "group", "by", "student_id", ";"], "ru": ["select", "student_id", ",", "count", "(", "*", ")", "from", "likes", "group", "by", "student_id", ";"]}}, {"id": "D_0904", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id;", "ru": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id;"}, "question": {"en": "How many likes correspond to each student id?", "ru": "Сколько лайков соответствует каждому студенческому id?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "likes", "correspond", "to", "each", "student", "id", "?"], "ru": ["Сколько", "лайков", "соответствует", "каждому", "студенческому", "id", "?"]}, "query_toks": {"en": ["select", "student_id", ",", "count", "(", "*", ")", "from", "likes", "group", "by", "student_id", ";"], "ru": ["select", "student_id", ",", "count", "(", "*", ")", "from", "likes", "group", "by", "student_id", ";"]}, "query_toks_no_values": {"en": ["select", "student_id", ",", "count", "(", "*", ")", "from", "likes", "group", "by", "student_id", ";"], "ru": ["select", "student_id", ",", "count", "(", "*", ")", "from", "likes", "group", "by", "student_id", ";"]}}, {"id": "D_0905", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id;", "ru": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id;"}, "question": {"en": "Show the names of high schoolers who have likes, and numbers of likes for each.", "ru": "Покажите имена старшеклассников с лайками, и количество лайков у каждого из них."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "names", "of", "high", "schoolers", "who", "have", "likes", ",", "and", "numbers", "of", "likes", "for", "each", "."], "ru": ["Покажите", "имена", "старшеклассников", "с", "лайками", ",", "и", "количество", "лайков", "у", "каждого", "из", "них", "."]}, "query_toks": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", ";"]}}, {"id": "D_0906", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id;", "ru": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id;"}, "question": {"en": "What are the names of high schoolers who have likes, and how many likes does each have?", "ru": "Как зовут старшеклассников, у которых есть лайки, и сколько лайков у каждого?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "have", "likes", ",", "and", "how", "many", "likes", "does", "each", "have", "?"], "ru": ["Как", "зовут", "старшеклассников", ",", "у", "которых", "есть", "лайки", ",", "и", "сколько", "лайков", "у", "каждого", "?"]}, "query_toks": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", ";"], "ru": ["select", "t2.name", ",", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", ";"]}}, {"id": "D_0907", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the name of the high schooler who has the greatest number of likes?", "ru": "Как зовут старшеклассника, у которого больше всего лайков?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "high", "schooler", "who", "has", "the", "greatest", "number", "of", "likes", "?"], "ru": ["Как", "зовут", "старшеклассника", ",", "у", "которого", "больше", "всего", "лайков", "?"]}, "query_toks": {"en": ["select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0908", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Give the name of the student with the most likes.", "ru": "Назовите имя ученика, у которого больше всего лайков."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "the", "name", "of", "the", "student", "with", "the", "most", "likes", "."], "ru": ["Назовите", "имя", "ученика", ",", "у", "которого", "больше", "всего", "лайков", "."]}, "query_toks": {"en": ["select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0909", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2;", "ru": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2;"}, "question": {"en": "Show the names of students who have at least 2 likes.", "ru": "Покажите имена студентов, которым поставили не менее 2 лайков."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "names", "of", "students", "who", "have", "at", "least", "2", "likes", "."], "ru": ["Покажите", "имена", "студентов", ",", "которым", "поставили", "не", "менее", "2", "лайков", "."]}, "query_toks": {"en": ["select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0910", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2;", "ru": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2;"}, "question": {"en": "What are the names of students who have 2 or more likes?", "ru": "Как зовут студентов, у которых 2 и более лайков?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "students", "who", "have", "2", "or", "more", "likes", "?"], "ru": ["Как", "зовут", "студентов", ",", "у", "которых", "2", "и", "более", "лайков", "?"]}, "query_toks": {"en": ["select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t2.name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0911", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2;", "ru": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2;"}, "question": {"en": "Show the names of students who have a grade higher than 5 and have at least 2 friends.", "ru": "Покажите имена учеников, которые имеют оценку выше 5 и имеют как минимум 2 друзей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 5.0, null]], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 5.0, null]], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "names", "of", "students", "who", "have", "a", "grade", "higher", "than", "5", "and", "have", "at", "least", "2", "friends", "."], "ru": ["Покажите", "имена", "учеников", ",", "которые", "имеют", "оценку", "выше", "5", "и", "имеют", "как", "минимум", "2", "друзей", "."]}, "query_toks": {"en": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.grade", ">", "5", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.grade", ">", "5", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.grade", ">", "5", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.grade", ">", "5", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0912", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2;", "ru": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2;"}, "question": {"en": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?", "ru": "Как зовут старшеклассников, которые имеют оценку выше 5 и имеют 2 или более друзей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 5.0, null]], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 5.0, null]], "groupBy": [[0, 4, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "have", "a", "grade", "of", "over", "5", "and", "have", "2", "or", "more", "friends", "?"], "ru": ["Как", "зовут", "старшеклассников", ",", "которые", "имеют", "оценку", "выше", "5", "и", "имеют", "2", "или", "более", "друзей", "?"]}, "query_toks": {"en": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.grade", ">", "5", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.grade", ">", "5", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.grade", ">", "5", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t2.name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.grade", ">", "5", "group", "by", "t1.student_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0913", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\";", "ru": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Лев\";"}, "question": {"en": "How many likes does Kyle have?", "ru": "Сколько лайков у Льва?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Лев\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "likes", "does", "Kyle", "have", "?"], "ru": ["Сколько", "лайков", "у", "Льва", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.name", "=", "\"Kyle\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.name", "=", "\"Лев\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.name", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.name", "=", "value", ";"]}}, {"id": "D_0914", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\";", "ru": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Лев\";"}, "question": {"en": "Return the number of likes that the high schooler named Kyle has.", "ru": "Покажи количество лайков у старшеклассника по имени Лев."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Лев\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "number", "of", "likes", "that", "the", "high", "schooler", "named", "Kyle", "has", "."], "ru": ["Покажи", "количество", "лайков", "у", "старшеклассника", "по", "имени", "Лев", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.name", "=", "\"Kyle\"", ";"], "ru": ["select", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.name", "=", "\"Лев\"", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.name", "=", "value", ";"], "ru": ["select", "count", "(", "*", ")", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", "where", "t2.name", "=", "value", ";"]}}, {"id": "D_0915", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id);", "ru": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id);"}, "question": {"en": "Find the average grade of all students who have some friends.", "ru": "Найдите среднюю оценку всех учеников, у которых есть друзья."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "average", "grade", "of", "all", "students", "who", "have", "some", "friends", "."], "ru": ["Найдите", "среднюю", "оценку", "всех", "учеников", ",", "у", "которых", "есть", "друзья", "."]}, "query_toks": {"en": ["select", "avg", "(", "grade", ")", "from", "highschooler", "where", "id", "in", "(", "select", "t1.student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ")", ";"], "ru": ["select", "avg", "(", "grade", ")", "from", "highschooler", "where", "id", "in", "(", "select", "t1.student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ")", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "grade", ")", "from", "highschooler", "where", "id", "in", "(", "select", "t1.student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ")", ";"], "ru": ["select", "avg", "(", "grade", ")", "from", "highschooler", "where", "id", "in", "(", "select", "t1.student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ")", ";"]}}, {"id": "D_0916", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id);", "ru": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id);"}, "question": {"en": "What is the average grade of students who have friends?", "ru": "Какова средняя оценка у студентов, у которых есть друзья?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "grade", "of", "students", "who", "have", "friends", "?"], "ru": ["Какова", "средняя", "оценка", "у", "студентов", ",", "у", "которых", "есть", "друзья", "?"]}, "query_toks": {"en": ["select", "avg", "(", "grade", ")", "from", "highschooler", "where", "id", "in", "(", "select", "t1.student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ")", ";"], "ru": ["select", "avg", "(", "grade", ")", "from", "highschooler", "where", "id", "in", "(", "select", "t1.student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ")", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "grade", ")", "from", "highschooler", "where", "id", "in", "(", "select", "t1.student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ")", ";"], "ru": ["select", "avg", "(", "grade", ")", "from", "highschooler", "where", "id", "in", "(", "select", "t1.student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ")", ";"]}}, {"id": "D_0917", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id);", "ru": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id);"}, "question": {"en": "Find the minimum grade of students who have no friends.", "ru": "Найдите самый младший класс учеников, у которых нет друзей."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "minimum", "grade", "of", "students", "who", "have", "no", "friends", "."], "ru": ["Найдите", "самый", "младший", "класс", "учеников", ",", "у", "которых", "нет", "друзей", "."]}, "query_toks": {"en": ["select", "min", "(", "grade", ")", "from", "highschooler", "where", "id", "not", "in", "(", "select", "t1.student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ")", ";"], "ru": ["select", "min", "(", "grade", ")", "from", "highschooler", "where", "id", "not", "in", "(", "select", "t1.student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ")", ";"]}, "query_toks_no_values": {"en": ["select", "min", "(", "grade", ")", "from", "highschooler", "where", "id", "not", "in", "(", "select", "t1.student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ")", ";"], "ru": ["select", "min", "(", "grade", ")", "from", "highschooler", "where", "id", "not", "in", "(", "select", "t1.student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ")", ";"]}}, {"id": "D_0918", "db_id": "network_1", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id);", "ru": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id);"}, "question": {"en": "What is the lowest grade of students who do not have any friends?", "ru": "Какой самый младший класс учеников, у которых нет друзей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "lowest", "grade", "of", "students", "who", "do", "not", "have", "any", "friends", "?"], "ru": ["Какой", "самый", "младший", "класс", "учеников", ",", "у", "которых", "нет", "друзей", "?"]}, "query_toks": {"en": ["select", "min", "(", "grade", ")", "from", "highschooler", "where", "id", "not", "in", "(", "select", "t1.student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ")", ";"], "ru": ["select", "min", "(", "grade", ")", "from", "highschooler", "where", "id", "not", "in", "(", "select", "t1.student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ")", ";"]}, "query_toks_no_values": {"en": ["select", "min", "(", "grade", ")", "from", "highschooler", "where", "id", "not", "in", "(", "select", "t1.student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ")", ";"], "ru": ["select", "min", "(", "grade", ")", "from", "highschooler", "where", "id", "not", "in", "(", "select", "t1.student_id", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1.student_id", "=", "t2.id", ")", ";"]}}, {"id": "D_0919", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals;", "ru": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals;"}, "question": {"en": "Which states have both owners and professionals living there?", "ru": "В каких штатах проживают и хозяева, и специалисты?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Which", "states", "have", "both", "owners", "and", "professionals", "living", "there", "?"], "ru": ["В", "каких", "штатах", "проживают", "и", "хозяева", ",", "и", "специалисты", "?"]}, "query_toks": {"en": ["select", "state", "from", "owners", "intersect", "select", "state", "from", "professionals", ";"], "ru": ["select", "state", "from", "owners", "intersect", "select", "state", "from", "professionals", ";"]}, "query_toks_no_values": {"en": ["select", "state", "from", "owners", "intersect", "select", "state", "from", "professionals", ";"], "ru": ["select", "state", "from", "owners", "intersect", "select", "state", "from", "professionals", ";"]}}, {"id": "D_0920", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals;", "ru": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals;"}, "question": {"en": "Find the states where both owners and professionals live.", "ru": "Найдите штаты, в которых живут и хозяева, и специалисты."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "states", "where", "both", "owners", "and", "professionals", "live", "."], "ru": ["Найдите", "штаты", ",", "в", "которых", "живут", "и", "хозяева", ",", "и", "специалисты", "."]}, "query_toks": {"en": ["select", "state", "from", "owners", "intersect", "select", "state", "from", "professionals", ";"], "ru": ["select", "state", "from", "owners", "intersect", "select", "state", "from", "professionals", ";"]}, "query_toks_no_values": {"en": ["select", "state", "from", "owners", "intersect", "select", "state", "from", "professionals", ";"], "ru": ["select", "state", "from", "owners", "intersect", "select", "state", "from", "professionals", ";"]}}, {"id": "D_0921", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments );", "ru": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments );"}, "question": {"en": "What is the average age of the dogs who have gone through any treatments?", "ru": "Каков средний возраст собак, прошедших какое-либо лечение?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [[false, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [[false, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "age", "of", "the", "dogs", "who", "have", "gone", "through", "any", "treatments", "?"], "ru": ["Каков", "средний", "возраст", "собак", ",", "прошедших", "какое-либо", "лечение", "?"]}, "query_toks": {"en": ["select", "avg", "(", "age", ")", "from", "dogs", "where", "dog_id", "in", "(", "select", "dog_id", "from", "treatments", ")", ";"], "ru": ["select", "avg", "(", "age", ")", "from", "dogs", "where", "dog_id", "in", "(", "select", "dog_id", "from", "treatments", ")", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "age", ")", "from", "dogs", "where", "dog_id", "in", "(", "select", "dog_id", "from", "treatments", ")", ";"], "ru": ["select", "avg", "(", "age", ")", "from", "dogs", "where", "dog_id", "in", "(", "select", "dog_id", "from", "treatments", ")", ";"]}}, {"id": "D_0922", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments );", "ru": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments );"}, "question": {"en": "Find the average age of the dogs who went through treatments.", "ru": "Найдите средний возраст собак, прошедших курс лечения."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [[false, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [[false, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "average", "age", "of", "the", "dogs", "who", "went", "through", "treatments", "."], "ru": ["Найдите", "средний", "возраст", "собак", ",", "прошедших", "курс", "лечения", "."]}, "query_toks": {"en": ["select", "avg", "(", "age", ")", "from", "dogs", "where", "dog_id", "in", "(", "select", "dog_id", "from", "treatments", ")", ";"], "ru": ["select", "avg", "(", "age", ")", "from", "dogs", "where", "dog_id", "in", "(", "select", "dog_id", "from", "treatments", ")", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "age", ")", "from", "dogs", "where", "dog_id", "in", "(", "select", "dog_id", "from", "treatments", ")", ";"], "ru": ["select", "avg", "(", "age", ")", "from", "dogs", "where", "dog_id", "in", "(", "select", "dog_id", "from", "treatments", ")", ";"]}}, {"id": "D_0923", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2;", "ru": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2;"}, "question": {"en": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.", "ru": "Какие специалисты живут в штате Индиана или провели лечение более чем двумя способами? Укажите его или ее id, фамилию и мобильный телефон."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 40, false], null]], [0, [0, [0, 43, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"Indiana\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 40, false], null]], [0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 40, false], null]], [0, [0, [0, 43, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"Indiana\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 40, false], null]], [0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}}, "question_toks": {"en": ["Which", "professionals", "live", "in", "the", "state", "of", "Indiana", "or", "have", "done", "treatment", "on", "more", "than", "2", "treatments", "?", "List", "his", "or", "her", "id", ",", "last", "name", "and", "cell", "phone", "."], "ru": ["Какие", "специалисты", "живут", "в", "штате", "Индиана", "или", "провели", "лечение", "более", "чем", "двумя", "способами", "?", "Укажите", "его", "или", "ее", "id", ",", "фамилию", "и", "мобильный", "телефон", "."]}, "query_toks": {"en": ["select", "professional_id", ",", "last_name", ",", "cell_number", "from", "professionals", "where", "state", "=", "\"Indiana\"", "union", "select", "t1.professional_id", ",", "t1.last_name", ",", "t1.cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">", "2", ";"], "ru": ["select", "professional_id", ",", "last_name", ",", "cell_number", "from", "professionals", "where", "state", "=", "\"Indiana\"", "union", "select", "t1.professional_id", ",", "t1.last_name", ",", "t1.cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">", "2", ";"]}, "query_toks_no_values": {"en": ["select", "professional_id", ",", "last_name", ",", "cell_number", "from", "professionals", "where", "state", "=", "value", "union", "select", "t1.professional_id", ",", "t1.last_name", ",", "t1.cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">", "2", ";"], "ru": ["select", "professional_id", ",", "last_name", ",", "cell_number", "from", "professionals", "where", "state", "=", "value", "union", "select", "t1.professional_id", ",", "t1.last_name", ",", "t1.cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">", "2", ";"]}}, {"id": "D_0924", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2;", "ru": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2;"}, "question": {"en": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.", "ru": "Найдите id, фамилии и сотовые телефоны специалистов, которые живут в штате Индиана или провели более двух процедур."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 40, false], null]], [0, [0, [0, 43, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"Indiana\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 40, false], null]], [0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 40, false], null]], [0, [0, [0, 43, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"Indiana\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 40, false], null]], [0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}}, "question_toks": {"en": ["Find", "the", "id", ",", "last", "name", "and", "cell", "phone", "of", "the", "professionals", "who", "live", "in", "the", "state", "of", "Indiana", "or", "have", "performed", "more", "than", "two", "treatments", "."], "ru": ["Найдите", "id", ",", "фамилии", "и", "сотовые", "телефоны", "специалистов", ",", "которые", "живут", "в", "штате", "Индиана", "или", "провели", "более", "двух", "процедур", "."]}, "query_toks": {"en": ["select", "professional_id", ",", "last_name", ",", "cell_number", "from", "professionals", "where", "state", "=", "\"Indiana\"", "union", "select", "t1.professional_id", ",", "t1.last_name", ",", "t1.cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">", "2", ";"], "ru": ["select", "professional_id", ",", "last_name", ",", "cell_number", "from", "professionals", "where", "state", "=", "\"Indiana\"", "union", "select", "t1.professional_id", ",", "t1.last_name", ",", "t1.cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">", "2", ";"]}, "query_toks_no_values": {"en": ["select", "professional_id", ",", "last_name", ",", "cell_number", "from", "professionals", "where", "state", "=", "value", "union", "select", "t1.professional_id", ",", "t1.last_name", ",", "t1.cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">", "2", ";"], "ru": ["select", "professional_id", ",", "last_name", ",", "cell_number", "from", "professionals", "where", "state", "=", "value", "union", "select", "t1.professional_id", ",", "t1.last_name", ",", "t1.cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">", "2", ";"]}}, {"id": "D_0925", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 );", "ru": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 );"}, "question": {"en": "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .", "ru": "Лечение каких собак не обошлось своим хозяевам дороже 1000? Укажи клички собак."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[true, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [[0, 45, false]], "having": [[false, 3, [0, [4, 49, false], null], 1000.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[true, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [[0, 45, false]], "having": [[false, 3, [0, [4, 49, false], null], 1000.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "dogs", "have", "not", "cost", "their", "owner", "more", "than", "1000", "for", "treatment", "?", "List", "the", "dog", "names", "."], "ru": ["Лечение", "каких", "собак", "не", "обошлось", "своим", "хозяевам", "дороже", "1000", "?", "Укажи", "клички", "собак", "."]}, "query_toks": {"en": ["select", "name", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", "group", "by", "dog_id", "having", "sum", "(", "cost_of_treatment", ")", ">", "1000", ")", ";"], "ru": ["select", "name", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", "group", "by", "dog_id", "having", "sum", "(", "cost_of_treatment", ")", ">", "1000", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", "group", "by", "dog_id", "having", "sum", "(", "cost_of_treatment", ")", ">", "1000", ")", ";"], "ru": ["select", "name", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", "group", "by", "dog_id", "having", "sum", "(", "cost_of_treatment", ")", ">", "1000", ")", ";"]}}, {"id": "D_0926", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 );", "ru": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 );"}, "question": {"en": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?", "ru": "Как зовут собак, на лечение которых их хозяин не потратил более 1000?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[true, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [[0, 45, false]], "having": [[false, 3, [0, [4, 49, false], null], 1000.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[true, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [[0, 45, false]], "having": [[false, 3, [0, [4, 49, false], null], 1000.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "dogs", "for", "which", "the", "owner", "has", "not", "spend", "more", "than", "1000", "for", "treatment", "?"], "ru": ["Как", "зовут", "собак", ",", "на", "лечение", "которых", "их", "хозяин", "не", "потратил", "более", "1000", "?"]}, "query_toks": {"en": ["select", "name", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", "group", "by", "dog_id", "having", "sum", "(", "cost_of_treatment", ")", ">", "1000", ")", ";"], "ru": ["select", "name", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", "group", "by", "dog_id", "having", "sum", "(", "cost_of_treatment", ")", ">", "1000", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", "group", "by", "dog_id", "having", "sum", "(", "cost_of_treatment", ")", ">", "1000", ")", ";"], "ru": ["select", "name", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", "group", "by", "dog_id", "having", "sum", "(", "cost_of_treatment", ")", ">", "1000", ")", ";"]}}, {"id": "D_0927", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs;", "ru": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs;"}, "question": {"en": "Which first names are used for professionals or owners but are not used as dog names?", "ru": "Какие имена используются для специалистов или владельцев, но не используются в качестве имен собак?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "except": null}}, "question_toks": {"en": ["Which", "first", "names", "are", "used", "for", "professionals", "or", "owners", "but", "are", "not", "used", "as", "dog", "names", "?"], "ru": ["Какие", "имена", "используются", "для", "специалистов", "или", "владельцев", ",", "но", "не", "используются", "в", "качестве", "имен", "собак", "?"]}, "query_toks": {"en": ["select", "first_name", "from", "professionals", "union", "select", "first_name", "from", "owners", "except", "select", "name", "from", "dogs", ";"], "ru": ["select", "first_name", "from", "professionals", "union", "select", "first_name", "from", "owners", "except", "select", "name", "from", "dogs", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", "from", "professionals", "union", "select", "first_name", "from", "owners", "except", "select", "name", "from", "dogs", ";"], "ru": ["select", "first_name", "from", "professionals", "union", "select", "first_name", "from", "owners", "except", "select", "name", "from", "dogs", ";"]}}, {"id": "D_0928", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs;", "ru": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs;"}, "question": {"en": "Find the first names that are used for professionals or owners but are not used as dog names.", "ru": "Найдите имена, которые используются для специалистов или владельцев, но не используются в качестве имен собак."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "except": null}}, "question_toks": {"en": ["Find", "the", "first", "names", "that", "are", "used", "for", "professionals", "or", "owners", "but", "are", "not", "used", "as", "dog", "names", "."], "ru": ["Найдите", "имена", ",", "которые", "используются", "для", "специалистов", "или", "владельцев", ",", "но", "не", "используются", "в", "качестве", "имен", "собак", "."]}, "query_toks": {"en": ["select", "first_name", "from", "professionals", "union", "select", "first_name", "from", "owners", "except", "select", "name", "from", "dogs", ";"], "ru": ["select", "first_name", "from", "professionals", "union", "select", "first_name", "from", "owners", "except", "select", "name", "from", "dogs", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", "from", "professionals", "union", "select", "first_name", "from", "owners", "except", "select", "name", "from", "dogs", ";"], "ru": ["select", "first_name", "from", "professionals", "union", "select", "first_name", "from", "owners", "except", "select", "name", "from", "dogs", ";"]}}, {"id": "D_0929", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id;", "ru": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id;"}, "question": {"en": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.", "ru": "Кто из специалистов не проводил лечение собакам? Перечислите id, должность и адрес электронной почты специалиста."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 41, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 41, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 41, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 41, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["Which", "professional", "did", "not", "operate", "any", "treatment", "on", "dogs", "?", "List", "the", "professional", "'s", "id", ",", "role", "and", "email", "."], "ru": ["Кто", "из", "специалистов", "не", "проводил", "лечение", "собакам", "?", "Перечислите", "id", ",", "должность", "и", "адрес", "электронной", "почты", "специалиста", "."]}, "query_toks": {"en": ["select", "professional_id", ",", "role_code", ",", "email_address", "from", "professionals", "except", "select", "t1.professional_id", ",", "t1.role_code", ",", "t1.email_address", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", ";"], "ru": ["select", "professional_id", ",", "role_code", ",", "email_address", "from", "professionals", "except", "select", "t1.professional_id", ",", "t1.role_code", ",", "t1.email_address", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", ";"]}, "query_toks_no_values": {"en": ["select", "professional_id", ",", "role_code", ",", "email_address", "from", "professionals", "except", "select", "t1.professional_id", ",", "t1.role_code", ",", "t1.email_address", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", ";"], "ru": ["select", "professional_id", ",", "role_code", ",", "email_address", "from", "professionals", "except", "select", "t1.professional_id", ",", "t1.role_code", ",", "t1.email_address", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", ";"]}}, {"id": "D_0930", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id;", "ru": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id;"}, "question": {"en": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.", "ru": "Покажи id, должность и адрес электронной почты профессионалов, которые не лечили собак."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 41, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 41, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 41, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 41, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, "question_toks": {"en": ["Give", "me", "the", "id", ",", "role", "and", "email", "of", "the", "professionals", "who", "did", "not", "perform", "any", "treatment", "on", "dogs", "."], "ru": ["Покажи", "id", ",", "должность", "и", "адрес", "электронной", "почты", "профессионалов", ",", "которые", "не", "лечили", "собак", "."]}, "query_toks": {"en": ["select", "professional_id", ",", "role_code", ",", "email_address", "from", "professionals", "except", "select", "t1.professional_id", ",", "t1.role_code", ",", "t1.email_address", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", ";"], "ru": ["select", "professional_id", ",", "role_code", ",", "email_address", "from", "professionals", "except", "select", "t1.professional_id", ",", "t1.role_code", ",", "t1.email_address", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", ";"]}, "query_toks_no_values": {"en": ["select", "professional_id", ",", "role_code", ",", "email_address", "from", "professionals", "except", "select", "t1.professional_id", ",", "t1.role_code", ",", "t1.email_address", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", ";"], "ru": ["select", "professional_id", ",", "role_code", ",", "email_address", "from", "professionals", "except", "select", "t1.professional_id", ",", "t1.role_code", ",", "t1.email_address", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", ";"]}}, {"id": "D_0931", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which owner owns the most dogs? List the owner id, first name and last name.", "ru": "У какого владельца больше всего собак? Укажите id владельца, имя и фамилию."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "owner", "owns", "the", "most", "dogs", "?", "List", "the", "owner", "id", ",", "first", "name", "and", "last", "name", "."], "ru": ["У", "какого", "владельца", "больше", "всего", "собак", "?", "Укажите", "id", "владельца", ",", "имя", "и", "фамилию", "."]}, "query_toks": {"en": ["select", "t1.owner_id", ",", "t2.first_name", ",", "t2.last_name", "from", "dogs", "as", "t1", "join", "owners", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "group", "by", "t1.owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.owner_id", ",", "t2.first_name", ",", "t2.last_name", "from", "dogs", "as", "t1", "join", "owners", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "group", "by", "t1.owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.owner_id", ",", "t2.first_name", ",", "t2.last_name", "from", "dogs", "as", "t1", "join", "owners", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "group", "by", "t1.owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.owner_id", ",", "t2.first_name", ",", "t2.last_name", "from", "dogs", "as", "t1", "join", "owners", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "group", "by", "t1.owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0932", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Return the owner id, first name and last name of the owner who has the most dogs.", "ru": "Указать id, имя и фамилию владельца, у которого больше всего собак."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 21, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "owner", "id", ",", "first", "name", "and", "last", "name", "of", "the", "owner", "who", "has", "the", "most", "dogs", "."], "ru": ["Указать", "id", ",", "имя", "и", "фамилию", "владельца", ",", "у", "которого", "больше", "всего", "собак", "."]}, "query_toks": {"en": ["select", "t1.owner_id", ",", "t2.first_name", ",", "t2.last_name", "from", "dogs", "as", "t1", "join", "owners", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "group", "by", "t1.owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.owner_id", ",", "t2.first_name", ",", "t2.last_name", "from", "dogs", "as", "t1", "join", "owners", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "group", "by", "t1.owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.owner_id", ",", "t2.first_name", ",", "t2.last_name", "from", "dogs", "as", "t1", "join", "owners", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "group", "by", "t1.owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.owner_id", ",", "t2.first_name", ",", "t2.last_name", "from", "dogs", "as", "t1", "join", "owners", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "group", "by", "t1.owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0933", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2;", "ru": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2;"}, "question": {"en": "Which professionals have done at least two treatments? List the professional's id, role, and first name.", "ru": "Какие специалисты провели как минимум две процедуры? Перечислите id, должность и имя специалиста."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "professionals", "have", "done", "at", "least", "two", "treatments", "?", "List", "the", "professional", "'s", "id", ",", "role", ",", "and", "first", "name", "."], "ru": ["Какие", "специалисты", "провели", "как", "минимум", "две", "процедуры", "?", "Перечислите", "id", ",", "должность", "и", "имя", "специалиста", "."]}, "query_toks": {"en": ["select", "t1.professional_id", ",", "t1.role_code", ",", "t1.first_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t1.professional_id", ",", "t1.role_code", ",", "t1.first_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t1.professional_id", ",", "t1.role_code", ",", "t1.first_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t1.professional_id", ",", "t1.role_code", ",", "t1.first_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0934", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2;", "ru": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2;"}, "question": {"en": "What are the id, role, and first name of the professionals who have performed two or more treatments?", "ru": "Каковы id, роли и имена специалистов, которые провели два или более курса лечения?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 34, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "id", ",", "role", ",", "and", "first", "name", "of", "the", "professionals", "who", "have", "performed", "two", "or", "more", "treatments", "?"], "ru": ["Каковы", "id", ",", "роли", "и", "имена", "специалистов", ",", "которые", "провели", "два", "или", "более", "курса", "лечения", "?"]}, "query_toks": {"en": ["select", "t1.professional_id", ",", "t1.role_code", ",", "t1.first_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t1.professional_id", ",", "t1.role_code", ",", "t1.first_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t1.professional_id", ",", "t1.role_code", ",", "t1.first_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t1.professional_id", ",", "t1.role_code", ",", "t1.first_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0935", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "What is the name of the breed with the most dogs?", "ru": "Как называется наиболее распространенная порода собак?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "breed", "with", "the", "most", "dogs", "?"], "ru": ["Как", "называется", "наиболее", "распространенная", "порода", "собак", "?"]}, "query_toks": {"en": ["select", "t1.breed_name", "from", "breeds", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.breed_code", "=", "t2.breed_code", "group", "by", "t1.breed_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.breed_name", "from", "breeds", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.breed_code", "=", "t2.breed_code", "group", "by", "t1.breed_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.breed_name", "from", "breeds", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.breed_code", "=", "t2.breed_code", "group", "by", "t1.breed_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.breed_name", "from", "breeds", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.breed_code", "=", "t2.breed_code", "group", "by", "t1.breed_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0936", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which breed do the most dogs have? Give me the breed name.", "ru": "Какая порода у большинства собак? Отображать название породы."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 23, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "breed", "do", "the", "most", "dogs", "have", "?", "Give", "me", "the", "breed", "name", "."], "ru": ["Какая", "порода", "у", "большинства", "собак", "?", "Отображать", "название", "породы", "."]}, "query_toks": {"en": ["select", "t1.breed_name", "from", "breeds", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.breed_code", "=", "t2.breed_code", "group", "by", "t1.breed_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.breed_name", "from", "breeds", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.breed_code", "=", "t2.breed_code", "group", "by", "t1.breed_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.breed_name", "from", "breeds", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.breed_code", "=", "t2.breed_code", "group", "by", "t1.breed_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.breed_name", "from", "breeds", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.breed_code", "=", "t2.breed_code", "group", "by", "t1.breed_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0937", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.", "ru": "Какой владелец заплатил больше всего за лечение своих собак? Покажи id и фамилию владельца."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "owner", "has", "paid", "for", "the", "most", "treatments", "on", "his", "or", "her", "dogs", "?", "List", "the", "owner", "id", "and", "last", "name", "."], "ru": ["Какой", "владелец", "заплатил", "больше", "всего", "за", "лечение", "своих", "собак", "?", "Покажи", "id", "и", "фамилию", "владельца", "."]}, "query_toks": {"en": ["select", "t1.owner_id", ",", "t1.last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "join", "treatments", "as", "t3", "on", "t2.dog_id", "=", "t3.dog_id", "group", "by", "t1.owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.owner_id", ",", "t1.last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "join", "treatments", "as", "t3", "on", "t2.dog_id", "=", "t3.dog_id", "group", "by", "t1.owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.owner_id", ",", "t1.last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "join", "treatments", "as", "t3", "on", "t2.dog_id", "=", "t3.dog_id", "group", "by", "t1.owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.owner_id", ",", "t1.last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "join", "treatments", "as", "t3", "on", "t2.dog_id", "=", "t3.dog_id", "group", "by", "t1.owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0938", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1;", "ru": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1;"}, "question": {"en": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.", "ru": "Показывать id и фамилию владельца, который больше всего потратил на лечение своих собак."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Tell", "me", "the", "owner", "id", "and", "last", "name", "of", "the", "owner", "who", "spent", "the", "most", "on", "treatments", "of", "his", "or", "her", "dogs", "."], "ru": ["Показывать", "id", "и", "фамилию", "владельца", ",", "который", "больше", "всего", "потратил", "на", "лечение", "своих", "собак", "."]}, "query_toks": {"en": ["select", "t1.owner_id", ",", "t1.last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "join", "treatments", "as", "t3", "on", "t2.dog_id", "=", "t3.dog_id", "group", "by", "t1.owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.owner_id", ",", "t1.last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "join", "treatments", "as", "t3", "on", "t2.dog_id", "=", "t3.dog_id", "group", "by", "t1.owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.owner_id", ",", "t1.last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "join", "treatments", "as", "t3", "on", "t2.dog_id", "=", "t3.dog_id", "group", "by", "t1.owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.owner_id", ",", "t1.last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "join", "treatments", "as", "t3", "on", "t2.dog_id", "=", "t3.dog_id", "group", "by", "t1.owner_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0939", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1;", "ru": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1;"}, "question": {"en": "What is the description of the treatment type that costs the least money in total?", "ru": "Как называется лечение, которое в целом стоит меньше всего?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["asc", [[0, [4, 49, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["asc", [[0, [4, 49, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "description", "of", "the", "treatment", "type", "that", "costs", "the", "least", "money", "in", "total", "?"], "ru": ["Как", "называется", "лечение", ",", "которое", "в", "целом", "стоит", "меньше", "всего", "?"]}, "query_toks": {"en": ["select", "t1.treatment_type_description", "from", "treatment_types", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.treatment_type_code", "=", "t2.treatment_type_code", "group", "by", "t1.treatment_type_code", "order", "by", "sum", "(", "cost_of_treatment", ")", "asc", "limit", "1", ";"], "ru": ["select", "t1.treatment_type_description", "from", "treatment_types", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.treatment_type_code", "=", "t2.treatment_type_code", "group", "by", "t1.treatment_type_code", "order", "by", "sum", "(", "cost_of_treatment", ")", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.treatment_type_description", "from", "treatment_types", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.treatment_type_code", "=", "t2.treatment_type_code", "group", "by", "t1.treatment_type_code", "order", "by", "sum", "(", "cost_of_treatment", ")", "asc", "limit", "1", ";"], "ru": ["select", "t1.treatment_type_description", "from", "treatment_types", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.treatment_type_code", "=", "t2.treatment_type_code", "group", "by", "t1.treatment_type_code", "order", "by", "sum", "(", "cost_of_treatment", ")", "asc", "limit", "1", ";"]}}, {"id": "D_0940", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1;", "ru": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1;"}, "question": {"en": "Give me the description of the treatment type whose total cost is the lowest.", "ru": "Дайте мне описание вида лечения, общая стоимость которого самая низкая."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["asc", [[0, [4, 49, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["asc", [[0, [4, 49, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Give", "me", "the", "description", "of", "the", "treatment", "type", "whose", "total", "cost", "is", "the", "lowest", "."], "ru": ["Дайте", "мне", "описание", "вида", "лечения", ",", "общая", "стоимость", "которого", "самая", "низкая", "."]}, "query_toks": {"en": ["select", "t1.treatment_type_description", "from", "treatment_types", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.treatment_type_code", "=", "t2.treatment_type_code", "group", "by", "t1.treatment_type_code", "order", "by", "sum", "(", "cost_of_treatment", ")", "asc", "limit", "1", ";"], "ru": ["select", "t1.treatment_type_description", "from", "treatment_types", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.treatment_type_code", "=", "t2.treatment_type_code", "group", "by", "t1.treatment_type_code", "order", "by", "sum", "(", "cost_of_treatment", ")", "asc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.treatment_type_description", "from", "treatment_types", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.treatment_type_code", "=", "t2.treatment_type_code", "group", "by", "t1.treatment_type_code", "order", "by", "sum", "(", "cost_of_treatment", ")", "asc", "limit", "1", ";"], "ru": ["select", "t1.treatment_type_description", "from", "treatment_types", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.treatment_type_code", "=", "t2.treatment_type_code", "group", "by", "t1.treatment_type_code", "order", "by", "sum", "(", "cost_of_treatment", ")", "asc", "limit", "1", ";"]}}, {"id": "D_0941", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1;", "ru": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1;"}, "question": {"en": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.", "ru": "Какой владелец заплатил самую большую сумму денег за своих собак? Покажите id владельца и почтовый индекс."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [4, 49, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [4, 49, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "owner", "has", "paid", "the", "largest", "amount", "of", "money", "in", "total", "for", "their", "dogs", "?", "Show", "the", "owner", "id", "and", "zip", "code", "."], "ru": ["Какой", "владелец", "заплатил", "самую", "большую", "сумму", "денег", "за", "своих", "собак", "?", "Покажите", "id", "владельца", "и", "почтовый", "индекс", "."]}, "query_toks": {"en": ["select", "t1.owner_id", ",", "t1.zip_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "join", "treatments", "as", "t3", "on", "t2.dog_id", "=", "t3.dog_id", "group", "by", "t1.owner_id", "order", "by", "sum", "(", "t3.cost_of_treatment", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.owner_id", ",", "t1.zip_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "join", "treatments", "as", "t3", "on", "t2.dog_id", "=", "t3.dog_id", "group", "by", "t1.owner_id", "order", "by", "sum", "(", "t3.cost_of_treatment", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.owner_id", ",", "t1.zip_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "join", "treatments", "as", "t3", "on", "t2.dog_id", "=", "t3.dog_id", "group", "by", "t1.owner_id", "order", "by", "sum", "(", "t3.cost_of_treatment", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.owner_id", ",", "t1.zip_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "join", "treatments", "as", "t3", "on", "t2.dog_id", "=", "t3.dog_id", "group", "by", "t1.owner_id", "order", "by", "sum", "(", "t3.cost_of_treatment", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0942", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1;", "ru": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1;"}, "question": {"en": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.", "ru": "Найти id и почтовый индекс владельца, который потратил больше всего денег на своих собак."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [4, 49, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [4, 49, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "owner", "id", "and", "zip", "code", "of", "the", "owner", "who", "spent", "the", "most", "money", "in", "total", "for", "his", "or", "her", "dogs", "."], "ru": ["Найти", "id", "и", "почтовый", "индекс", "владельца", ",", "который", "потратил", "больше", "всего", "денег", "на", "своих", "собак", "."]}, "query_toks": {"en": ["select", "t1.owner_id", ",", "t1.zip_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "join", "treatments", "as", "t3", "on", "t2.dog_id", "=", "t3.dog_id", "group", "by", "t1.owner_id", "order", "by", "sum", "(", "t3.cost_of_treatment", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.owner_id", ",", "t1.zip_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "join", "treatments", "as", "t3", "on", "t2.dog_id", "=", "t3.dog_id", "group", "by", "t1.owner_id", "order", "by", "sum", "(", "t3.cost_of_treatment", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.owner_id", ",", "t1.zip_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "join", "treatments", "as", "t3", "on", "t2.dog_id", "=", "t3.dog_id", "group", "by", "t1.owner_id", "order", "by", "sum", "(", "t3.cost_of_treatment", ")", "desc", "limit", "1", ";"], "ru": ["select", "t1.owner_id", ",", "t1.zip_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "join", "treatments", "as", "t3", "on", "t2.dog_id", "=", "t3.dog_id", "group", "by", "t1.owner_id", "order", "by", "sum", "(", "t3.cost_of_treatment", ")", "desc", "limit", "1", ";"]}}, {"id": "D_0943", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2;", "ru": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2;"}, "question": {"en": "Which professionals have done at least two types of treatments? List the professional id and cell phone.", "ru": "Какие специалисты проводили как минимум два вида лечения? Показать id специалиста и мобильный телефон."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "professionals", "have", "done", "at", "least", "two", "types", "of", "treatments", "?", "List", "the", "professional", "id", "and", "cell", "phone", "."], "ru": ["Какие", "специалисты", "проводили", "как", "минимум", "два", "вида", "лечения", "?", "Показать", "id", "специалиста", "и", "мобильный", "телефон", "."]}, "query_toks": {"en": ["select", "t1.professional_id", ",", "t1.cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t1.professional_id", ",", "t1.cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t1.professional_id", ",", "t1.cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t1.professional_id", ",", "t1.cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0944", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2;", "ru": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2;"}, "question": {"en": "Find the id and cell phone of the professionals who operate two or more types of treatments.", "ru": "Найдите id и мобильный телефон специалистов, которые проводят два или более лечения."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null]]}, "select": [false, [[0, [0, [0, 33, false], null]], [0, [0, [0, 43, false], null]]]], "where": [], "groupBy": [[0, 33, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "id", "and", "cell", "phone", "of", "the", "professionals", "who", "operate", "two", "or", "more", "types", "of", "treatments", "."], "ru": ["Найдите", "id", "и", "мобильный", "телефон", "специалистов", ",", "которые", "проводят", "два", "или", "более", "лечения", "."]}, "query_toks": {"en": ["select", "t1.professional_id", ",", "t1.cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t1.professional_id", ",", "t1.cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}, "query_toks_no_values": {"en": ["select", "t1.professional_id", ",", "t1.cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">=", "2", ";"], "ru": ["select", "t1.professional_id", ",", "t1.cell_number", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "group", "by", "t1.professional_id", "having", "count", "(", "*", ")", ">=", "2", ";"]}}, {"id": "D_0945", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments );", "ru": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments );"}, "question": {"en": "What are the first name and last name of the professionals who have done treatment with cost below average?", "ru": "Как зовут специалистов, которые провели лечение стоимостью ниже среднего?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": []}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 40, false], null]]]], "where": [[false, 4, [0, [0, 49, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[5, [0, [0, 49, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": []}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 40, false], null]]]], "where": [[false, 4, [0, [0, 49, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[5, [0, [0, 49, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "the", "professionals", "who", "have", "done", "treatment", "with", "cost", "below", "average", "?"], "ru": ["Как", "зовут", "специалистов", ",", "которые", "провели", "лечение", "стоимостью", "ниже", "среднего", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.first_name", ",", "t1.last_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "where", "cost_of_treatment", "<", "(", "select", "avg", "(", "cost_of_treatment", ")", "from", "treatments", ")", ";"], "ru": ["select", "distinct", "t1.first_name", ",", "t1.last_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "where", "cost_of_treatment", "<", "(", "select", "avg", "(", "cost_of_treatment", ")", "from", "treatments", ")", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.first_name", ",", "t1.last_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "where", "cost_of_treatment", "<", "(", "select", "avg", "(", "cost_of_treatment", ")", "from", "treatments", ")", ";"], "ru": ["select", "distinct", "t1.first_name", ",", "t1.last_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "where", "cost_of_treatment", "<", "(", "select", "avg", "(", "cost_of_treatment", ")", "from", "treatments", ")", ";"]}}, {"id": "D_0946", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments );", "ru": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments );"}, "question": {"en": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.", "ru": "Какие специалисты проводили лечение, которое стоит меньше среднего? Показать их имена и фамилии."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": []}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 40, false], null]]]], "where": [[false, 4, [0, [0, 49, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[5, [0, [0, 49, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7]], "conds": []}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 40, false], null]]]], "where": [[false, 4, [0, [0, 49, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[5, [0, [0, 49, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "professionals", "have", "operated", "a", "treatment", "that", "costs", "less", "than", "the", "average", "?", "Give", "me", "theor", "first", "names", "and", "last", "names", "."], "ru": ["Какие", "специалисты", "проводили", "лечение", ",", "которое", "стоит", "меньше", "среднего", "?", "Показать", "их", "имена", "и", "фамилии", "."]}, "query_toks": {"en": ["select", "distinct", "t1.first_name", ",", "t1.last_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "where", "cost_of_treatment", "<", "(", "select", "avg", "(", "cost_of_treatment", ")", "from", "treatments", ")", ";"], "ru": ["select", "distinct", "t1.first_name", ",", "t1.last_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "where", "cost_of_treatment", "<", "(", "select", "avg", "(", "cost_of_treatment", ")", "from", "treatments", ")", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.first_name", ",", "t1.last_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "where", "cost_of_treatment", "<", "(", "select", "avg", "(", "cost_of_treatment", ")", "from", "treatments", ")", ";"], "ru": ["select", "distinct", "t1.first_name", ",", "t1.last_name", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "where", "cost_of_treatment", "<", "(", "select", "avg", "(", "cost_of_treatment", ")", "from", "treatments", ")", ";"]}}, {"id": "D_0947", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id;", "ru": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id;"}, "question": {"en": "List the date of each treatment, together with the first name of the professional who operated it.", "ru": "Укажите дату каждого лечения вместе с именем специалиста, который его проводил."}, "sql": {"en": {"from": {"table_units": [["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 46, false], null], [0, 33, false], null]]}, "select": [false, [[0, [0, [0, 48, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 46, false], null], [0, 33, false], null]]}, "select": [false, [[0, [0, [0, 48, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "date", "of", "each", "treatment", ",", "together", "with", "the", "first", "name", "of", "the", "professional", "who", "operated", "it", "."], "ru": ["Укажите", "дату", "каждого", "лечения", "вместе", "с", "именем", "специалиста", ",", "который", "его", "проводил", "."]}, "query_toks": {"en": ["select", "t1.date_of_treatment", ",", "t2.first_name", "from", "treatments", "as", "t1", "join", "professionals", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", ";"], "ru": ["select", "t1.date_of_treatment", ",", "t2.first_name", "from", "treatments", "as", "t1", "join", "professionals", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", ";"]}, "query_toks_no_values": {"en": ["select", "t1.date_of_treatment", ",", "t2.first_name", "from", "treatments", "as", "t1", "join", "professionals", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", ";"], "ru": ["select", "t1.date_of_treatment", ",", "t2.first_name", "from", "treatments", "as", "t1", "join", "professionals", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", ";"]}}, {"id": "D_0948", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id;", "ru": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id;"}, "question": {"en": "What are the date and the operating professional's first name of each treatment?", "ru": "Какая дата и имя лечащего специалиста на каждом сеансе лечения?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 46, false], null], [0, 33, false], null]]}, "select": [false, [[0, [0, [0, 48, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 7], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 46, false], null], [0, 33, false], null]]}, "select": [false, [[0, [0, [0, 48, false], null]], [0, [0, [0, 35, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "date", "and", "the", "operating", "professional", "'s", "first", "name", "of", "each", "treatment", "?"], "ru": ["Какая", "дата", "и", "имя", "лечащего", "специалиста", "на", "каждом", "сеансе", "лечения", "?"]}, "query_toks": {"en": ["select", "t1.date_of_treatment", ",", "t2.first_name", "from", "treatments", "as", "t1", "join", "professionals", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", ";"], "ru": ["select", "t1.date_of_treatment", ",", "t2.first_name", "from", "treatments", "as", "t1", "join", "professionals", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", ";"]}, "query_toks_no_values": {"en": ["select", "t1.date_of_treatment", ",", "t2.first_name", "from", "treatments", "as", "t1", "join", "professionals", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", ";"], "ru": ["select", "t1.date_of_treatment", ",", "t2.first_name", "from", "treatments", "as", "t1", "join", "professionals", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", ";"]}}, {"id": "D_0949", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code;", "ru": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code;"}, "question": {"en": "List the cost of each treatment and the corresponding treatment type description.", "ru": "Отображать стоимость каждого лечения и соответствующее описание типа лечения."}, "sql": {"en": {"from": {"table_units": [["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 47, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 49, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 47, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 49, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "cost", "of", "each", "treatment", "and", "the", "corresponding", "treatment", "type", "description", "."], "ru": ["Отображать", "стоимость", "каждого", "лечения", "и", "соответствующее", "описание", "типа", "лечения", "."]}, "query_toks": {"en": ["select", "t1.cost_of_treatment", ",", "t2.treatment_type_description", "from", "treatments", "as", "t1", "join", "treatment_types", "as", "t2", "on", "t1.treatment_type_code", "=", "t2.treatment_type_code", ";"], "ru": ["select", "t1.cost_of_treatment", ",", "t2.treatment_type_description", "from", "treatments", "as", "t1", "join", "treatment_types", "as", "t2", "on", "t1.treatment_type_code", "=", "t2.treatment_type_code", ";"]}, "query_toks_no_values": {"en": ["select", "t1.cost_of_treatment", ",", "t2.treatment_type_description", "from", "treatments", "as", "t1", "join", "treatment_types", "as", "t2", "on", "t1.treatment_type_code", "=", "t2.treatment_type_code", ";"], "ru": ["select", "t1.cost_of_treatment", ",", "t2.treatment_type_description", "from", "treatments", "as", "t1", "join", "treatment_types", "as", "t2", "on", "t1.treatment_type_code", "=", "t2.treatment_type_code", ";"]}}, {"id": "D_0950", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code;", "ru": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code;"}, "question": {"en": "What are the cost and treatment type description of each treatment?", "ru": "Какова стоимость и описание каждого вида лечения?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 47, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 49, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 47, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 49, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "cost", "and", "treatment", "type", "description", "of", "each", "treatment", "?"], "ru": ["Какова", "стоимость", "и", "описание", "каждого", "вида", "лечения", "?"]}, "query_toks": {"en": ["select", "t1.cost_of_treatment", ",", "t2.treatment_type_description", "from", "treatments", "as", "t1", "join", "treatment_types", "as", "t2", "on", "t1.treatment_type_code", "=", "t2.treatment_type_code", ";"], "ru": ["select", "t1.cost_of_treatment", ",", "t2.treatment_type_description", "from", "treatments", "as", "t1", "join", "treatment_types", "as", "t2", "on", "t1.treatment_type_code", "=", "t2.treatment_type_code", ";"]}, "query_toks_no_values": {"en": ["select", "t1.cost_of_treatment", ",", "t2.treatment_type_description", "from", "treatments", "as", "t1", "join", "treatment_types", "as", "t2", "on", "t1.treatment_type_code", "=", "t2.treatment_type_code", ";"], "ru": ["select", "t1.cost_of_treatment", ",", "t2.treatment_type_description", "from", "treatments", "as", "t1", "join", "treatment_types", "as", "t2", "on", "t1.treatment_type_code", "=", "t2.treatment_type_code", ";"]}}, {"id": "D_0951", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id;", "ru": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id;"}, "question": {"en": "List each owner's first name, last name, and the size of his for her dog.", "ru": "Перечислите имя, фамилию каждого владельца и размер его собаки."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "each", "owner", "'s", "first", "name", ",", "last", "name", ",", "and", "the", "size", "of", "his", "for", "her", "dog", "."], "ru": ["Перечислите", "имя", ",", "фамилию", "каждого", "владельца", "и", "размер", "его", "собаки", "."]}, "query_toks": {"en": ["select", "t1.first_name", ",", "t1.last_name", ",", "t2.size_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", ";"], "ru": ["select", "t1.first_name", ",", "t1.last_name", ",", "t2.size_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", ";"]}, "query_toks_no_values": {"en": ["select", "t1.first_name", ",", "t1.last_name", ",", "t2.size_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", ";"], "ru": ["select", "t1.first_name", ",", "t1.last_name", ",", "t2.size_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", ";"]}}, {"id": "D_0952", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id;", "ru": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id;"}, "question": {"en": "What are each owner's first name, last name, and the size of their dog?", "ru": "Какое имя, фамилия и размер собаки каждого владельца?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "each", "owner", "'s", "first", "name", ",", "last", "name", ",", "and", "the", "size", "of", "their", "dog", "?"], "ru": ["Какое", "имя", ",", "фамилия", "и", "размер", "собаки", "каждого", "владельца", "?"]}, "query_toks": {"en": ["select", "t1.first_name", ",", "t1.last_name", ",", "t2.size_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", ";"], "ru": ["select", "t1.first_name", ",", "t1.last_name", ",", "t2.size_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", ";"]}, "query_toks_no_values": {"en": ["select", "t1.first_name", ",", "t1.last_name", ",", "t2.size_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", ";"], "ru": ["select", "t1.first_name", ",", "t1.last_name", ",", "t2.size_code", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", ";"]}}, {"id": "D_0953", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id;", "ru": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id;"}, "question": {"en": "List pairs of the owner's first name and the dogs's name.", "ru": "Перечислите пары имени владельца и клички собаки."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "pairs", "of", "the", "owner", "'s", "first", "name", "and", "the", "dogs", "'s", "name", "."], "ru": ["Перечислите", "пары", "имени", "владельца", "и", "клички", "собаки", "."]}, "query_toks": {"en": ["select", "t1.first_name", ",", "t2.name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", ";"], "ru": ["select", "t1.first_name", ",", "t2.name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", ";"]}, "query_toks_no_values": {"en": ["select", "t1.first_name", ",", "t2.name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", ";"], "ru": ["select", "t1.first_name", ",", "t2.name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", ";"]}}, {"id": "D_0954", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id;", "ru": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id;"}, "question": {"en": "What are each owner's first name and their dogs's name?", "ru": "Как зовут каждого владельца и как зовут их собак?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "each", "owner", "'s", "first", "name", "and", "their", "dogs", "'s", "name", "?"], "ru": ["Как", "зовут", "каждого", "владельца", "и", "как", "зовут", "их", "собак", "?"]}, "query_toks": {"en": ["select", "t1.first_name", ",", "t2.name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", ";"], "ru": ["select", "t1.first_name", ",", "t2.name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", ";"]}, "query_toks_no_values": {"en": ["select", "t1.first_name", ",", "t2.name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", ";"], "ru": ["select", "t1.first_name", ",", "t2.name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", ";"]}}, {"id": "D_0955", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 );", "ru": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 );"}, "question": {"en": "List the names of the dogs of the rarest breed and the treatment dates of them.", "ru": "Перечислите клички собак самой редкой породы и даты их лечения."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 48, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 48, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "names", "of", "the", "dogs", "of", "the", "rarest", "breed", "and", "the", "treatment", "dates", "of", "them", "."], "ru": ["Перечислите", "клички", "собак", "самой", "редкой", "породы", "и", "даты", "их", "лечения", "."]}, "query_toks": {"en": ["select", "t1.name", ",", "t2.date_of_treatment", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.dog_id", "=", "t2.dog_id", "where", "t1.breed_code", "=", "(", "select", "breed_code", "from", "dogs", "group", "by", "breed_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ")", ";"], "ru": ["select", "t1.name", ",", "t2.date_of_treatment", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.dog_id", "=", "t2.dog_id", "where", "t1.breed_code", "=", "(", "select", "breed_code", "from", "dogs", "group", "by", "breed_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ")", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", ",", "t2.date_of_treatment", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.dog_id", "=", "t2.dog_id", "where", "t1.breed_code", "=", "(", "select", "breed_code", "from", "dogs", "group", "by", "breed_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ")", ";"], "ru": ["select", "t1.name", ",", "t2.date_of_treatment", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.dog_id", "=", "t2.dog_id", "where", "t1.breed_code", "=", "(", "select", "breed_code", "from", "dogs", "group", "by", "breed_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ")", ";"]}}, {"id": "D_0956", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 );", "ru": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 );"}, "question": {"en": "Which dogs are of the rarest breed? Show their names and treatment dates.", "ru": "Какие собаки самой редкой породы? Показывать их клички и даты лечения."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 48, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 48, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "dogs", "are", "of", "the", "rarest", "breed", "?", "Show", "their", "names", "and", "treatment", "dates", "."], "ru": ["Какие", "собаки", "самой", "редкой", "породы", "?", "Показывать", "их", "клички", "и", "даты", "лечения", "."]}, "query_toks": {"en": ["select", "t1.name", ",", "t2.date_of_treatment", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.dog_id", "=", "t2.dog_id", "where", "t1.breed_code", "=", "(", "select", "breed_code", "from", "dogs", "group", "by", "breed_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ")", ";"], "ru": ["select", "t1.name", ",", "t2.date_of_treatment", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.dog_id", "=", "t2.dog_id", "where", "t1.breed_code", "=", "(", "select", "breed_code", "from", "dogs", "group", "by", "breed_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ")", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", ",", "t2.date_of_treatment", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.dog_id", "=", "t2.dog_id", "where", "t1.breed_code", "=", "(", "select", "breed_code", "from", "dogs", "group", "by", "breed_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ")", ";"], "ru": ["select", "t1.name", ",", "t2.date_of_treatment", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.dog_id", "=", "t2.dog_id", "where", "t1.breed_code", "=", "(", "select", "breed_code", "from", "dogs", "group", "by", "breed_code", "order", "by", "count", "(", "*", ")", "asc", "limit", "1", ")", ";"]}}, {"id": "D_0957", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia';", "ru": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Воронежская область';"}, "question": {"en": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.", "ru": "Какие собаки принадлежат жителю Воронежской области? Покажи имя владельца и кличку собаки."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Virginia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Воронежская область\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "dogs", "are", "owned", "by", "someone", "who", "lives", "in", "Virginia", "?", "List", "the", "owner", "'s", "first", "name", "and", "the", "dog", "'s", "name", "."], "ru": ["Какие", "собаки", "принадлежат", "жителю", "Воронежской", "области", "?", "Покажи", "имя", "владельца", "и", "кличку", "собаки", "."]}, "query_toks": {"en": ["select", "t1.first_name", ",", "t2.name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "where", "t1.state", "=", "\"Virginia\"", ";"], "ru": ["select", "t1.first_name", ",", "t2.name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "where", "t1.state", "=", "\"Воронежская область\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.first_name", ",", "t2.name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "where", "t1.state", "=", "value", ";"], "ru": ["select", "t1.first_name", ",", "t2.name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "where", "t1.state", "=", "value", ";"]}}, {"id": "D_0958", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia';", "ru": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Воронежская область';"}, "question": {"en": "Find the first names of owners living in Virginia and the names of dogs they own.", "ru": "Найдите имена владельцев, живущих в Воронежской области, и клички принадлежащих им собак."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Virginia\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Воронежская область\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "first", "names", "of", "owners", "living", "in", "Virginia", "and", "the", "names", "of", "dogs", "they", "own", "."], "ru": ["Найдите", "имена", "владельцев", ",", "живущих", "в", "Воронежской", "области", ",", "и", "клички", "принадлежащих", "им", "собак", "."]}, "query_toks": {"en": ["select", "t1.first_name", ",", "t2.name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "where", "t1.state", "=", "\"Virginia\"", ";"], "ru": ["select", "t1.first_name", ",", "t2.name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "where", "t1.state", "=", "\"Воронежская область\"", ";"]}, "query_toks_no_values": {"en": ["select", "t1.first_name", ",", "t2.name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "where", "t1.state", "=", "value", ";"], "ru": ["select", "t1.first_name", ",", "t2.name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "where", "t1.state", "=", "value", ";"]}}, {"id": "D_0959", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id;", "ru": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id;"}, "question": {"en": "What are the arriving date and the departing date of the dogs who have gone through a treatment?", "ru": "Какая дата прибытия и дата отъезда собак, прошедших курс лечения?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 30, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 30, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "arriving", "date", "and", "the", "departing", "date", "of", "the", "dogs", "who", "have", "gone", "through", "a", "treatment", "?"], "ru": ["Какая", "дата", "прибытия", "и", "дата", "отъезда", "собак", ",", "прошедших", "курс", "лечения", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.date_arrived", ",", "t1.date_departed", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.dog_id", "=", "t2.dog_id", ";"], "ru": ["select", "distinct", "t1.date_arrived", ",", "t1.date_departed", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.dog_id", "=", "t2.dog_id", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.date_arrived", ",", "t1.date_departed", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.dog_id", "=", "t2.dog_id", ";"], "ru": ["select", "distinct", "t1.date_arrived", ",", "t1.date_departed", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.dog_id", "=", "t2.dog_id", ";"]}}, {"id": "D_0960", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id;", "ru": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id;"}, "question": {"en": "Find the arriving date and the departing date of the dogs that received a treatment.", "ru": "Найдите дату прибытия и дату отъезда собак, прошедших курс лечения."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 30, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 45, false], null]]}, "select": [true, [[0, [0, [0, 30, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "arriving", "date", "and", "the", "departing", "date", "of", "the", "dogs", "that", "received", "a", "treatment", "."], "ru": ["Найдите", "дату", "прибытия", "и", "дату", "отъезда", "собак", ",", "прошедших", "курс", "лечения", "."]}, "query_toks": {"en": ["select", "distinct", "t1.date_arrived", ",", "t1.date_departed", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.dog_id", "=", "t2.dog_id", ";"], "ru": ["select", "distinct", "t1.date_arrived", ",", "t1.date_departed", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.dog_id", "=", "t2.dog_id", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.date_arrived", ",", "t1.date_departed", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.dog_id", "=", "t2.dog_id", ";"], "ru": ["select", "distinct", "t1.date_arrived", ",", "t1.date_departed", "from", "dogs", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.dog_id", "=", "t2.dog_id", ";"]}}, {"id": "D_0961", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs );", "ru": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs );"}, "question": {"en": "List the last name of the owner owning the youngest dog.", "ru": "Укажите фамилию владельца самой молодой собаки."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "last", "name", "of", "the", "owner", "owning", "the", "youngest", "dog", "."], "ru": ["Укажите", "фамилию", "владельца", "самой", "молодой", "собаки", "."]}, "query_toks": {"en": ["select", "t1.last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "where", "t2.age", "=", "(", "select", "max", "(", "age", ")", "from", "dogs", ")", ";"], "ru": ["select", "t1.last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "where", "t2.age", "=", "(", "select", "max", "(", "age", ")", "from", "dogs", ")", ";"]}, "query_toks_no_values": {"en": ["select", "t1.last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "where", "t2.age", "=", "(", "select", "max", "(", "age", ")", "from", "dogs", ")", ";"], "ru": ["select", "t1.last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "where", "t2.age", "=", "(", "select", "max", "(", "age", ")", "from", "dogs", ")", ";"]}}, {"id": "D_0962", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs );", "ru": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs );"}, "question": {"en": "Who owns the youngest dog? Give me his or her last name.", "ru": "Кому принадлежит самая молодая собака? Назови мне его или ее фамилию."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 21, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Who", "owns", "the", "youngest", "dog", "?", "Give", "me", "his", "or", "her", "last", "name", "."], "ru": ["Кому", "принадлежит", "самая", "молодая", "собака", "?", "Назови", "мне", "его", "или", "ее", "фамилию", "."]}, "query_toks": {"en": ["select", "t1.last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "where", "t2.age", "=", "(", "select", "max", "(", "age", ")", "from", "dogs", ")", ";"], "ru": ["select", "t1.last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "where", "t2.age", "=", "(", "select", "max", "(", "age", ")", "from", "dogs", ")", ";"]}, "query_toks_no_values": {"en": ["select", "t1.last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "where", "t2.age", "=", "(", "select", "max", "(", "age", ")", "from", "dogs", ")", ";"], "ru": ["select", "t1.last_name", "from", "owners", "as", "t1", "join", "dogs", "as", "t2", "on", "t1.owner_id", "=", "t2.owner_id", "where", "t2.age", "=", "(", "select", "max", "(", "age", ")", "from", "dogs", ")", ";"]}}, {"id": "D_0963", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin';", "ru": "SELECT email_address FROM Professionals WHERE state  =  'Московская область' OR state  =  'Воронежская область';"}, "question": {"en": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.", "ru": "Перечислите адреса электронной почты специалистов, проживающих в Воронежской области или Московской области."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 41, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"Hawaii\"", null], "or", [false, 2, [0, [0, 38, false], null], "\"Wisconsin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 41, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"Московская область\"", null], "or", [false, 2, [0, [0, 38, false], null], "\"Воронежская область\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "emails", "of", "the", "professionals", "who", "live", "in", "the", "state", "of", "Hawaii", "or", "the", "state", "of", "Wisconsin", "."], "ru": ["Перечислите", "адреса", "электронной", "почты", "специалистов", ",", "проживающих", "в", "Воронежской", "области", "или", "Московской", "области", "."]}, "query_toks": {"en": ["select", "email_address", "from", "professionals", "where", "state", "=", "\"Hawaii\"", "or", "state", "=", "\"Wisconsin\"", ";"], "ru": ["select", "email_address", "from", "professionals", "where", "state", "=", "\"Московская область\"", "or", "state", "=", "\"Воронежская область\"", ";"]}, "query_toks_no_values": {"en": ["select", "email_address", "from", "professionals", "where", "state", "=", "value", "or", "state", "=", "value", ";"], "ru": ["select", "email_address", "from", "professionals", "where", "state", "=", "value", "or", "state", "=", "value", ";"]}}, {"id": "D_0964", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin';", "ru": "SELECT email_address FROM Professionals WHERE state  =  'Московская область' OR state  =  'Воронежская область';"}, "question": {"en": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?", "ru": "Какие адреса электронных почт у специалистов, проживающих в Воронежской области или Московской области?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 41, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"Hawaii\"", null], "or", [false, 2, [0, [0, 38, false], null], "\"Wisconsin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 41, false], null]]]], "where": [[false, 2, [0, [0, 38, false], null], "\"Московская область\"", null], "or", [false, 2, [0, [0, 38, false], null], "\"Воронежская область\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "emails", "of", "the", "professionals", "living", "in", "either", "the", "state", "of", "Hawaii", "or", "the", "state", "of", "Wisconsin", "?"], "ru": ["Какие", "адреса", "электронных", "почт", "у", "специалистов", ",", "проживающих", "в", "Воронежской", "области", "или", "Московской", "области", "?"]}, "query_toks": {"en": ["select", "email_address", "from", "professionals", "where", "state", "=", "\"Hawaii\"", "or", "state", "=", "\"Wisconsin\"", ";"], "ru": ["select", "email_address", "from", "professionals", "where", "state", "=", "\"Московская область\"", "or", "state", "=", "\"Воронежская область\"", ";"]}, "query_toks_no_values": {"en": ["select", "email_address", "from", "professionals", "where", "state", "=", "value", "or", "state", "=", "value", ";"], "ru": ["select", "email_address", "from", "professionals", "where", "state", "=", "value", "or", "state", "=", "value", ";"]}}, {"id": "D_0965", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT date_arrived ,  date_departed FROM Dogs;", "ru": "SELECT date_arrived ,  date_departed FROM Dogs;"}, "question": {"en": "What are the arriving date and the departing date of all the dogs?", "ru": "Какая дата прибытия и дата отъезда всех собак?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "arriving", "date", "and", "the", "departing", "date", "of", "all", "the", "dogs", "?"], "ru": ["Какая", "дата", "прибытия", "и", "дата", "отъезда", "всех", "собак", "?"]}, "query_toks": {"en": ["select", "date_arrived", ",", "date_departed", "from", "dogs", ";"], "ru": ["select", "date_arrived", ",", "date_departed", "from", "dogs", ";"]}, "query_toks_no_values": {"en": ["select", "date_arrived", ",", "date_departed", "from", "dogs", ";"], "ru": ["select", "date_arrived", ",", "date_departed", "from", "dogs", ";"]}}, {"id": "D_0966", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT date_arrived ,  date_departed FROM Dogs;", "ru": "SELECT date_arrived ,  date_departed FROM Dogs;"}, "question": {"en": "List the arrival date and the departure date for all the dogs.", "ru": "Укажите дату прибытия и дату отъезда для всех собак."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 30, false], null]], [0, [0, [0, 32, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "arrival", "date", "and", "the", "departure", "date", "for", "all", "the", "dogs", "."], "ru": ["Укажите", "дату", "прибытия", "и", "дату", "отъезда", "для", "всех", "собак", "."]}, "query_toks": {"en": ["select", "date_arrived", ",", "date_departed", "from", "dogs", ";"], "ru": ["select", "date_arrived", ",", "date_departed", "from", "dogs", ";"]}, "query_toks_no_values": {"en": ["select", "date_arrived", ",", "date_departed", "from", "dogs", ";"], "ru": ["select", "date_arrived", ",", "date_departed", "from", "dogs", ";"]}}, {"id": "D_0967", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT dog_id) FROM Treatments;", "ru": "SELECT count(DISTINCT dog_id) FROM Treatments;"}, "question": {"en": "How many dogs went through any treatments?", "ru": "Сколько собак прошли какое-либо лечение?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[3, [0, [0, 45, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[3, [0, [0, 45, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "dogs", "went", "through", "any", "treatments", "?"], "ru": ["Сколько", "собак", "прошли", "какое-либо", "лечение", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "dog_id", ")", "from", "treatments", ";"], "ru": ["select", "count", "(", "distinct", "dog_id", ")", "from", "treatments", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "dog_id", ")", "from", "treatments", ";"], "ru": ["select", "count", "(", "distinct", "dog_id", ")", "from", "treatments", ";"]}}, {"id": "D_0968", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT dog_id) FROM Treatments;", "ru": "SELECT count(DISTINCT dog_id) FROM Treatments;"}, "question": {"en": "Count the number of dogs that went through a treatment.", "ru": "Подсчитайте количество собак, прошедших курс лечения."}, "sql": {"en": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[3, [0, [0, 45, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[3, [0, [0, 45, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "dogs", "that", "went", "through", "a", "treatment", "."], "ru": ["Подсчитайте", "количество", "собак", ",", "прошедших", "курс", "лечения", "."]}, "query_toks": {"en": ["select", "count", "(", "distinct", "dog_id", ")", "from", "treatments", ";"], "ru": ["select", "count", "(", "distinct", "dog_id", ")", "from", "treatments", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "dog_id", ")", "from", "treatments", ";"], "ru": ["select", "count", "(", "distinct", "dog_id", ")", "from", "treatments", ";"]}}, {"id": "D_0969", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT professional_id) FROM Treatments;", "ru": "SELECT count(DISTINCT professional_id) FROM Treatments;"}, "question": {"en": "How many professionals have performed any treatment to dogs?", "ru": "Сколько специалистов лечили собак?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[3, [0, [0, 46, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[3, [0, [0, 46, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "professionals", "have", "performed", "any", "treatment", "to", "dogs", "?"], "ru": ["Сколько", "специалистов", "лечили", "собак", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "professional_id", ")", "from", "treatments", ";"], "ru": ["select", "count", "(", "distinct", "professional_id", ")", "from", "treatments", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "professional_id", ")", "from", "treatments", ";"], "ru": ["select", "count", "(", "distinct", "professional_id", ")", "from", "treatments", ";"]}}, {"id": "D_0970", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(DISTINCT professional_id) FROM Treatments;", "ru": "SELECT count(DISTINCT professional_id) FROM Treatments;"}, "question": {"en": "Find the number of professionals who have ever treated dogs.", "ru": "Найдите количество специалистов, которые когда-либо лечили собак."}, "sql": {"en": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[3, [0, [0, 46, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[3, [0, [0, 46, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "professionals", "who", "have", "ever", "treated", "dogs", "."], "ru": ["Найдите", "количество", "специалистов", ",", "которые", "когда-либо", "лечили", "собак", "."]}, "query_toks": {"en": ["select", "count", "(", "distinct", "professional_id", ")", "from", "treatments", ";"], "ru": ["select", "count", "(", "distinct", "professional_id", ")", "from", "treatments", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "professional_id", ")", "from", "treatments", ";"], "ru": ["select", "count", "(", "distinct", "professional_id", ")", "from", "treatments", ";"]}}, {"id": "D_0971", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%';", "ru": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%Великий%';"}, "question": {"en": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.", "ru": "Какие специалисты живут в городе, где есть подстрока «Великий»? Перечислите его или ее должность, улицу, город и штат."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 38, false], null]]]], "where": [[false, 9, [0, [0, 37, false], null], "\"%West%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 38, false], null]]]], "where": [[false, 9, [0, [0, 37, false], null], "\"%Великий%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "professionals", "live", "in", "a", "city", "containing", "the", "substring", "'West", "'", "?", "List", "his", "or", "her", "role", ",", "street", ",", "city", "and", "state", "."], "ru": ["Какие", "специалисты", "живут", "в", "городе", ",", "где", "есть", "подстрока", "«", "Великий", "»", "?", "Перечислите", "его", "или", "ее", "должность", ",", "улицу", ",", "город", "и", "штат", "."]}, "query_toks": {"en": ["select", "role_code", ",", "street", ",", "city", ",", "state", "from", "professionals", "where", "city", "like", "\"%West%\"", ";"], "ru": ["select", "role_code", ",", "street", ",", "city", ",", "state", "from", "professionals", "where", "city", "like", "\"%Великий%\"", ";"]}, "query_toks_no_values": {"en": ["select", "role_code", ",", "street", ",", "city", ",", "state", "from", "professionals", "where", "city", "like", "value", ";"], "ru": ["select", "role_code", ",", "street", ",", "city", ",", "state", "from", "professionals", "where", "city", "like", "value", ";"]}}, {"id": "D_0972", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%';", "ru": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%Великий%';"}, "question": {"en": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.", "ru": "Найдите должность, улицу, город и штат специалистов, живущих в городе, который содержит подстроку «Великий»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 38, false], null]]]], "where": [[false, 9, [0, [0, 37, false], null], "\"%West%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]], [0, [0, [0, 38, false], null]]]], "where": [[false, 9, [0, [0, 37, false], null], "\"%Великий%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "role", ",", "street", ",", "city", "and", "state", "of", "the", "professionals", "living", "in", "a", "city", "that", "contains", "the", "substring", "'West", "'", "."], "ru": ["Найдите", "должность", ",", "улицу", ",", "город", "и", "штат", "специалистов", ",", "живущих", "в", "городе", ",", "который", "содержит", "подстроку", "«", "Великий", "»", "."]}, "query_toks": {"en": ["select", "role_code", ",", "street", ",", "city", ",", "state", "from", "professionals", "where", "city", "like", "\"%West%\"", ";"], "ru": ["select", "role_code", ",", "street", ",", "city", ",", "state", "from", "professionals", "where", "city", "like", "\"%Великий%\"", ";"]}, "query_toks_no_values": {"en": ["select", "role_code", ",", "street", ",", "city", ",", "state", "from", "professionals", "where", "city", "like", "value", ";"], "ru": ["select", "role_code", ",", "street", ",", "city", ",", "state", "from", "professionals", "where", "city", "like", "value", ";"]}}, {"id": "D_0973", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%';", "ru": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%автономная%';"}, "question": {"en": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.", "ru": "Какие владельцы проживают в области, в названии которого есть подстрока «автономная»? Укажите их имя, фамилию и адрес электронной почты."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%North%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%автономная%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "owners", "live", "in", "the", "state", "whose", "name", "contains", "the", "substring", "'North", "'", "?", "List", "his", "first", "name", ",", "last", "name", "and", "email", "."], "ru": ["Какие", "владельцы", "проживают", "в", "области", ",", "в", "названии", "которого", "есть", "подстрока", "«", "автономная", "»", "?", "Укажите", "их", "имя", ",", "фамилию", "и", "адрес", "электронной", "почты", "."]}, "query_toks": {"en": ["select", "first_name", ",", "last_name", ",", "email_address", "from", "owners", "where", "state", "like", "\"%North%\"", ";"], "ru": ["select", "first_name", ",", "last_name", ",", "email_address", "from", "owners", "where", "state", "like", "\"%автономная%\"", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", ",", "last_name", ",", "email_address", "from", "owners", "where", "state", "like", "value", ";"], "ru": ["select", "first_name", ",", "last_name", ",", "email_address", "from", "owners", "where", "state", "like", "value", ";"]}}, {"id": "D_0974", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%';", "ru": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%автономная%';"}, "question": {"en": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.", "ru": "Найти имя, фамилию и адрес электронной почты владельцев, проживающих в области, в названии которого содержится подстрока «автономная»."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%North%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 17, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%автономная%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Return", "the", "first", "name", ",", "last", "name", "and", "email", "of", "the", "owners", "living", "in", "a", "state", "whose", "name", "contains", "the", "substring", "'North", "'", "."], "ru": ["Найти", "имя", ",", "фамилию", "и", "адрес", "электронной", "почты", "владельцев", ",", "проживающих", "в", "области", ",", "в", "названии", "которого", "содержится", "подстрока", "«", "автономная", "»", "."]}, "query_toks": {"en": ["select", "first_name", ",", "last_name", ",", "email_address", "from", "owners", "where", "state", "like", "\"%North%\"", ";"], "ru": ["select", "first_name", ",", "last_name", ",", "email_address", "from", "owners", "where", "state", "like", "\"%автономная%\"", ";"]}, "query_toks_no_values": {"en": ["select", "first_name", ",", "last_name", ",", "email_address", "from", "owners", "where", "state", "like", "value", ";"], "ru": ["select", "first_name", ",", "last_name", ",", "email_address", "from", "owners", "where", "state", "like", "value", ";"]}}, {"id": "D_0975", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs );", "ru": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs );"}, "question": {"en": "How many dogs have an age below the average?", "ru": "Сколько собак имеют возраст ниже среднего?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 4, [0, [0, 26, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 4, [0, [0, 26, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "dogs", "have", "an", "age", "below", "the", "average", "?"], "ru": ["Сколько", "собак", "имеют", "возраст", "ниже", "среднего", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "dogs", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "dogs", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "dogs", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "dogs", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "dogs", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "dogs", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "dogs", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "dogs", ")", ";"]}}, {"id": "D_0976", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs );", "ru": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs );"}, "question": {"en": "Count the number of dogs of an age below the average.", "ru": "Подсчитайте количество собак возраста ниже среднего."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 4, [0, [0, 26, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 4, [0, [0, 26, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Count", "the", "number", "of", "dogs", "of", "an", "age", "below", "the", "average", "."], "ru": ["Подсчитайте", "количество", "собак", "возраста", "ниже", "среднего", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "dogs", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "dogs", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "dogs", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "dogs", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "dogs", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "dogs", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "dogs", "where", "age", "<", "(", "select", "avg", "(", "age", ")", "from", "dogs", ")", ";"]}}, {"id": "D_0977", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;", "ru": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;"}, "question": {"en": "How much does the most recent treatment cost?", "ru": "Сколько стоило самое последнее лечение?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 49, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 48, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 49, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 48, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "much", "does", "the", "most", "recent", "treatment", "cost", "?"], "ru": ["Сколько", "стоило", "самое", "последнее", "лечение", "?"]}, "query_toks": {"en": ["select", "cost_of_treatment", "from", "treatments", "order", "by", "date_of_treatment", "desc", "limit", "1", ";"], "ru": ["select", "cost_of_treatment", "from", "treatments", "order", "by", "date_of_treatment", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "cost_of_treatment", "from", "treatments", "order", "by", "date_of_treatment", "desc", "limit", "1", ";"], "ru": ["select", "cost_of_treatment", "from", "treatments", "order", "by", "date_of_treatment", "desc", "limit", "1", ";"]}}, {"id": "D_0978", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;", "ru": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;"}, "question": {"en": "Show me the cost of the most recently performed treatment.", "ru": "Покажите мне стоимость последнего проведенного лечения."}, "sql": {"en": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 49, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 48, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 49, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 48, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "me", "the", "cost", "of", "the", "most", "recently", "performed", "treatment", "."], "ru": ["Покажите", "мне", "стоимость", "последнего", "проведенного", "лечения", "."]}, "query_toks": {"en": ["select", "cost_of_treatment", "from", "treatments", "order", "by", "date_of_treatment", "desc", "limit", "1", ";"], "ru": ["select", "cost_of_treatment", "from", "treatments", "order", "by", "date_of_treatment", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "cost_of_treatment", "from", "treatments", "order", "by", "date_of_treatment", "desc", "limit", "1", ";"], "ru": ["select", "cost_of_treatment", "from", "treatments", "order", "by", "date_of_treatment", "desc", "limit", "1", ";"]}}, {"id": "D_0979", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments );", "ru": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments );"}, "question": {"en": "How many dogs have not gone through any treatment?", "ru": "Сколько собак не прошли никакого лечения?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "dogs", "have", "not", "gone", "through", "any", "treatment", "?"], "ru": ["Сколько", "собак", "не", "прошли", "никакого", "лечения", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", ")", ";"]}}, {"id": "D_0980", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "select count(*) from dogs where dog_id not in ( select dog_id from treatments );", "ru": "select count(*) from dogs where dog_id not in ( select dog_id from treatments );"}, "question": {"en": "Tell me the number of dogs that have not received any treatment .", "ru": "Назовите мне количество собак, которые не получали никакого лечения."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 20, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 45, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Tell", "me", "the", "number", "of", "dogs", "that", "have", "not", "received", "any", "treatment", "."], "ru": ["Назовите", "мне", "количество", "собак", ",", "которые", "не", "получали", "никакого", "лечения", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "dogs", "where", "dog_id", "not", "in", "(", "select", "dog_id", "from", "treatments", ")", ";"]}}, {"id": "D_0981", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs );", "ru": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs );"}, "question": {"en": "How many owners temporarily do not have any dogs?", "ru": "Сколько владельцев временно не имеют собак?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "owners", "temporarily", "do", "not", "have", "any", "dogs", "?"], "ru": ["Сколько", "владельцев", "временно", "не", "имеют", "собак", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "owners", "where", "owner_id", "not", "in", "(", "select", "owner_id", "from", "dogs", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "owners", "where", "owner_id", "not", "in", "(", "select", "owner_id", "from", "dogs", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "owners", "where", "owner_id", "not", "in", "(", "select", "owner_id", "from", "dogs", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "owners", "where", "owner_id", "not", "in", "(", "select", "owner_id", "from", "dogs", ")", ";"]}}, {"id": "D_0982", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs );", "ru": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs );"}, "question": {"en": "Find the number of owners who do not own any dogs at this moment.", "ru": "Количество владельцев, у которых на данный момент нет собак."}, "sql": {"en": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "owners", "who", "do", "not", "own", "any", "dogs", "at", "this", "moment", "."], "ru": ["Количество", "владельцев", ",", "у", "которых", "на", "данный", "момент", "нет", "собак", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "owners", "where", "owner_id", "not", "in", "(", "select", "owner_id", "from", "dogs", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "owners", "where", "owner_id", "not", "in", "(", "select", "owner_id", "from", "dogs", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "owners", "where", "owner_id", "not", "in", "(", "select", "owner_id", "from", "dogs", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "owners", "where", "owner_id", "not", "in", "(", "select", "owner_id", "from", "dogs", ")", ";"]}}, {"id": "D_0983", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments );", "ru": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments );"}, "question": {"en": "How many professionals did not operate any treatment on dogs?", "ru": "Сколько специалистов не лечили собак?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 33, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 33, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "professionals", "did", "not", "operate", "any", "treatment", "on", "dogs", "?"], "ru": ["Сколько", "специалистов", "не", "лечили", "собак", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "professionals", "where", "professional_id", "not", "in", "(", "select", "professional_id", "from", "treatments", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "professionals", "where", "professional_id", "not", "in", "(", "select", "professional_id", "from", "treatments", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "professionals", "where", "professional_id", "not", "in", "(", "select", "professional_id", "from", "treatments", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "professionals", "where", "professional_id", "not", "in", "(", "select", "professional_id", "from", "treatments", ")", ";"]}}, {"id": "D_0984", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments );", "ru": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments );"}, "question": {"en": "Find the number of professionals who have not treated any dogs.", "ru": "Найдите количество специалистов, которые не лечили собак."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 33, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 33, false], null], {"from": {"table_units": [["table_unit", 7]], "conds": []}, "select": [false, [[0, [0, [0, 46, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "number", "of", "professionals", "who", "have", "not", "treated", "any", "dogs", "."], "ru": ["Найдите", "количество", "специалистов", ",", "которые", "не", "лечили", "собак", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "professionals", "where", "professional_id", "not", "in", "(", "select", "professional_id", "from", "treatments", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "professionals", "where", "professional_id", "not", "in", "(", "select", "professional_id", "from", "treatments", ")", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "professionals", "where", "professional_id", "not", "in", "(", "select", "professional_id", "from", "treatments", ")", ";"], "ru": ["select", "count", "(", "*", ")", "from", "professionals", "where", "professional_id", "not", "in", "(", "select", "professional_id", "from", "treatments", ")", ";"]}}, {"id": "D_0985", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1;", "ru": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1;"}, "question": {"en": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.", "ru": "Перечисли кличку, возраст и вес брошенных собак? 1 означает да, а 0 означает нет."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "dog", "name", ",", "age", "and", "weight", "of", "the", "dogs", "who", "have", "been", "abandoned", "?", "1", "stands", "for", "yes", ",", "and", "0", "stands", "for", "no", "."], "ru": ["Перечисли", "кличку", ",", "возраст", "и", "вес", "брошенных", "собак", "?", "1", "означает", "да", ",", "а", "0", "означает", "нет", "."]}, "query_toks": {"en": ["select", "name", ",", "age", ",", "weight", "from", "dogs", "where", "abandoned_yn", "=", "1", ";"], "ru": ["select", "name", ",", "age", ",", "weight", "from", "dogs", "where", "abandoned_yn", "=", "1", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "age", ",", "weight", "from", "dogs", "where", "abandoned_yn", "=", "1", ";"], "ru": ["select", "name", ",", "age", ",", "weight", "from", "dogs", "where", "abandoned_yn", "=", "1", ";"]}}, {"id": "D_0986", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1;", "ru": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1;"}, "question": {"en": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.", "ru": "Какова кличка, возраст и вес брошенных собак? Обратите внимание, что 1 означает «да», а 0 означает «нет» в таблицах."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "dog", "name", ",", "age", "and", "weight", "of", "the", "dogs", "that", "were", "abandoned", "?", "Note", "that", "1", "stands", "for", "yes", ",", "and", "0", "stands", "for", "no", "in", "the", "tables", "."], "ru": ["Какова", "кличка", ",", "возраст", "и", "вес", "брошенных", "собак", "?", "Обратите", "внимание", ",", "что", "1", "означает", "«", "да", "»", ",", "а", "0", "означает", "«", "нет", "»", "в", "таблицах", "."]}, "query_toks": {"en": ["select", "name", ",", "age", ",", "weight", "from", "dogs", "where", "abandoned_yn", "=", "1", ";"], "ru": ["select", "name", ",", "age", ",", "weight", "from", "dogs", "where", "abandoned_yn", "=", "1", ";"]}, "query_toks_no_values": {"en": ["select", "name", ",", "age", ",", "weight", "from", "dogs", "where", "abandoned_yn", "=", "1", ";"], "ru": ["select", "name", ",", "age", ",", "weight", "from", "dogs", "where", "abandoned_yn", "=", "1", ";"]}}, {"id": "D_0987", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(age) FROM Dogs;", "ru": "SELECT avg(age) FROM Dogs;"}, "question": {"en": "What is the average age of all the dogs?", "ru": "Каков средний возраст всех собак?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "age", "of", "all", "the", "dogs", "?"], "ru": ["Каков", "средний", "возраст", "всех", "собак", "?"]}, "query_toks": {"en": ["select", "avg", "(", "age", ")", "from", "dogs", ";"], "ru": ["select", "avg", "(", "age", ")", "from", "dogs", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "age", ")", "from", "dogs", ";"], "ru": ["select", "avg", "(", "age", ")", "from", "dogs", ";"]}}, {"id": "D_0988", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT avg(age) FROM Dogs;", "ru": "SELECT avg(age) FROM Dogs;"}, "question": {"en": "Compute the average age of all the dogs.", "ru": "Вычислите средний возраст всех собак."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Compute", "the", "average", "age", "of", "all", "the", "dogs", "."], "ru": ["Вычислите", "средний", "возраст", "всех", "собак", "."]}, "query_toks": {"en": ["select", "avg", "(", "age", ")", "from", "dogs", ";"], "ru": ["select", "avg", "(", "age", ")", "from", "dogs", ";"]}, "query_toks_no_values": {"en": ["select", "avg", "(", "age", ")", "from", "dogs", ";"], "ru": ["select", "avg", "(", "age", ")", "from", "dogs", ";"]}}, {"id": "D_0989", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(age) FROM Dogs;", "ru": "SELECT max(age) FROM Dogs;"}, "question": {"en": "What is the age of the oldest dog?", "ru": "Каков возраст самой старой собаки?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "age", "of", "the", "oldest", "dog", "?"], "ru": ["Каков", "возраст", "самой", "старой", "собаки", "?"]}, "query_toks": {"en": ["select", "max", "(", "age", ")", "from", "dogs", ";"], "ru": ["select", "max", "(", "age", ")", "from", "dogs", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "age", ")", "from", "dogs", ";"], "ru": ["select", "max", "(", "age", ")", "from", "dogs", ";"]}}, {"id": "D_0990", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(age) FROM Dogs;", "ru": "SELECT max(age) FROM Dogs;"}, "question": {"en": "Tell me the age of the oldest dog.", "ru": "Назови мне возраст самой старой собаки."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 26, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Tell", "me", "the", "age", "of", "the", "oldest", "dog", "."], "ru": ["Назови", "мне", "возраст", "самой", "старой", "собаки", "."]}, "query_toks": {"en": ["select", "max", "(", "age", ")", "from", "dogs", ";"], "ru": ["select", "max", "(", "age", ")", "from", "dogs", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "age", ")", "from", "dogs", ";"], "ru": ["select", "max", "(", "age", ")", "from", "dogs", ";"]}}, {"id": "D_0991", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT charge_type ,  charge_amount FROM Charges;", "ru": "SELECT charge_type ,  charge_amount FROM Charges;"}, "question": {"en": "How much does each charge type costs? List both charge type and amount.", "ru": "Сколько стоит каждый тип начисления? Укажите тип и сумму оплаты."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "much", "does", "each", "charge", "type", "costs", "?", "List", "both", "charge", "type", "and", "amount", "."], "ru": ["Сколько", "стоит", "каждый", "тип", "начисления", "?", "Укажите", "тип", "и", "сумму", "оплаты", "."]}, "query_toks": {"en": ["select", "charge_type", ",", "charge_amount", "from", "charges", ";"], "ru": ["select", "charge_type", ",", "charge_amount", "from", "charges", ";"]}, "query_toks_no_values": {"en": ["select", "charge_type", ",", "charge_amount", "from", "charges", ";"], "ru": ["select", "charge_type", ",", "charge_amount", "from", "charges", ";"]}}, {"id": "D_0992", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT charge_type ,  charge_amount FROM Charges;", "ru": "SELECT charge_type ,  charge_amount FROM Charges;"}, "question": {"en": "List each charge type and its amount.", "ru": "Покажи каждый тип начисления и его сумму."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "each", "charge", "type", "and", "its", "amount", "."], "ru": ["Покажи", "каждый", "тип", "начисления", "и", "его", "сумму", "."]}, "query_toks": {"en": ["select", "charge_type", ",", "charge_amount", "from", "charges", ";"], "ru": ["select", "charge_type", ",", "charge_amount", "from", "charges", ";"]}, "query_toks_no_values": {"en": ["select", "charge_type", ",", "charge_amount", "from", "charges", ";"], "ru": ["select", "charge_type", ",", "charge_amount", "from", "charges", ";"]}}, {"id": "D_0993", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(charge_amount) FROM Charges;", "ru": "SELECT max(charge_amount) FROM Charges;"}, "question": {"en": "How much does the most expensive charge type costs?", "ru": "Сколько стоит самый дорогой тип начисления?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "much", "does", "the", "most", "expensive", "charge", "type", "costs", "?"], "ru": ["Сколько", "стоит", "самый", "дорогой", "тип", "начисления", "?"]}, "query_toks": {"en": ["select", "max", "(", "charge_amount", ")", "from", "charges", ";"], "ru": ["select", "max", "(", "charge_amount", ")", "from", "charges", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "charge_amount", ")", "from", "charges", ";"], "ru": ["select", "max", "(", "charge_amount", ")", "from", "charges", ";"]}}, {"id": "D_0994", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT max(charge_amount) FROM Charges;", "ru": "SELECT max(charge_amount) FROM Charges;"}, "question": {"en": "What is the charge amount of the most expensive charge type?", "ru": "Какая сумма платежа через самый дорогой тип начисления?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "charge", "amount", "of", "the", "most", "expensive", "charge", "type", "?"], "ru": ["Какая", "сумма", "платежа", "через", "самый", "дорогой", "тип", "начисления", "?"]}, "query_toks": {"en": ["select", "max", "(", "charge_amount", ")", "from", "charges", ";"], "ru": ["select", "max", "(", "charge_amount", ")", "from", "charges", ";"]}, "query_toks_no_values": {"en": ["select", "max", "(", "charge_amount", ")", "from", "charges", ";"], "ru": ["select", "max", "(", "charge_amount", ")", "from", "charges", ";"]}}, {"id": "D_0995", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT email_address ,  cell_number ,  home_phone FROM professionals;", "ru": "SELECT email_address ,  cell_number ,  home_phone FROM professionals;"}, "question": {"en": "List the email, cell phone and home phone of all the professionals.", "ru": "Составьте список адресов электронной почты, сотовых и домашних телефонов всех специалистов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 41, false], null]], [0, [0, [0, 43, false], null]], [0, [0, [0, 42, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 41, false], null]], [0, [0, [0, 43, false], null]], [0, [0, [0, 42, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "email", ",", "cell", "phone", "and", "home", "phone", "of", "all", "the", "professionals", "."], "ru": ["Составьте", "список", "адресов", "электронной", "почты", ",", "сотовых", "и", "домашних", "телефонов", "всех", "специалистов", "."]}, "query_toks": {"en": ["select", "email_address", ",", "cell_number", ",", "home_phone", "from", "professionals", ";"], "ru": ["select", "email_address", ",", "cell_number", ",", "home_phone", "from", "professionals", ";"]}, "query_toks_no_values": {"en": ["select", "email_address", ",", "cell_number", ",", "home_phone", "from", "professionals", ";"], "ru": ["select", "email_address", ",", "cell_number", ",", "home_phone", "from", "professionals", ";"]}}, {"id": "D_0996", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT email_address ,  cell_number ,  home_phone FROM professionals;", "ru": "SELECT email_address ,  cell_number ,  home_phone FROM professionals;"}, "question": {"en": "What are the email, cell phone and home phone of each professional?", "ru": "Какие у каждого специалиста электронная почта, мобильный и домашний телефоны?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 41, false], null]], [0, [0, [0, 43, false], null]], [0, [0, [0, 42, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 41, false], null]], [0, [0, [0, 43, false], null]], [0, [0, [0, 42, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "email", ",", "cell", "phone", "and", "home", "phone", "of", "each", "professional", "?"], "ru": ["Какие", "у", "каждого", "специалиста", "электронная", "почта", ",", "мобильный", "и", "домашний", "телефоны", "?"]}, "query_toks": {"en": ["select", "email_address", ",", "cell_number", ",", "home_phone", "from", "professionals", ";"], "ru": ["select", "email_address", ",", "cell_number", ",", "home_phone", "from", "professionals", ";"]}, "query_toks_no_values": {"en": ["select", "email_address", ",", "cell_number", ",", "home_phone", "from", "professionals", ";"], "ru": ["select", "email_address", ",", "cell_number", ",", "home_phone", "from", "professionals", ";"]}}, {"id": "D_0997", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT breed_code ,  size_code FROM dogs;", "ru": "SELECT DISTINCT breed_code ,  size_code FROM dogs;"}, "question": {"en": "What are all the possible breed type and size type combinations?", "ru": "Каковы все возможные комбинации породного типа и размерного типа?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "all", "the", "possible", "breed", "type", "and", "size", "type", "combinations", "?"], "ru": ["Каковы", "все", "возможные", "комбинации", "породного", "типа", "и", "размерного", "типа", "?"]}, "query_toks": {"en": ["select", "distinct", "breed_code", ",", "size_code", "from", "dogs", ";"], "ru": ["select", "distinct", "breed_code", ",", "size_code", "from", "dogs", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "breed_code", ",", "size_code", "from", "dogs", ";"], "ru": ["select", "distinct", "breed_code", ",", "size_code", "from", "dogs", ";"]}}, {"id": "D_0998", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT breed_code ,  size_code FROM dogs;", "ru": "SELECT DISTINCT breed_code ,  size_code FROM dogs;"}, "question": {"en": "Find the distinct breed type and size type combinations for dogs.", "ru": "Найдите различные сочетания типов породы и размера для собак."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]], [0, [0, [0, 24, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Find", "the", "distinct", "breed", "type", "and", "size", "type", "combinations", "for", "dogs", "."], "ru": ["Найдите", "различные", "сочетания", "типов", "породы", "и", "размера", "для", "собак", "."]}, "query_toks": {"en": ["select", "distinct", "breed_code", ",", "size_code", "from", "dogs", ";"], "ru": ["select", "distinct", "breed_code", ",", "size_code", "from", "dogs", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "breed_code", ",", "size_code", "from", "dogs", ";"], "ru": ["select", "distinct", "breed_code", ",", "size_code", "from", "dogs", ";"]}}, {"id": "D_0999", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code;", "ru": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code;"}, "question": {"en": "List the first name of all the professionals along with the description of the treatment they have done.", "ru": "Перечислите имена всех специалистов вместе с описанием лечения, которое они сделали."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null], "and", [false, 2, [0, [0, 47, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null], "and", [false, 2, [0, [0, 47, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "first", "name", "of", "all", "the", "professionals", "along", "with", "the", "description", "of", "the", "treatment", "they", "have", "done", "."], "ru": ["Перечислите", "имена", "всех", "специалистов", "вместе", "с", "описанием", "лечения", ",", "которое", "они", "сделали", "."]}, "query_toks": {"en": ["select", "distinct", "t1.first_name", ",", "t3.treatment_type_description", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "join", "treatment_types", "as", "t3", "on", "t2.treatment_type_code", "=", "t3.treatment_type_code", ";"], "ru": ["select", "distinct", "t1.first_name", ",", "t3.treatment_type_description", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "join", "treatment_types", "as", "t3", "on", "t2.treatment_type_code", "=", "t3.treatment_type_code", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.first_name", ",", "t3.treatment_type_description", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "join", "treatment_types", "as", "t3", "on", "t2.treatment_type_code", "=", "t3.treatment_type_code", ";"], "ru": ["select", "distinct", "t1.first_name", ",", "t3.treatment_type_description", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "join", "treatment_types", "as", "t3", "on", "t2.treatment_type_code", "=", "t3.treatment_type_code", ";"]}}, {"id": "D_1000", "db_id": "dog_kennels", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code;", "ru": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code;"}, "question": {"en": "What are each professional's first name and description of the treatment they have performed?", "ru": "Как зовут каждого специалиста и как он описывает проведенное лечение?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null], "and", [false, 2, [0, [0, 47, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 46, false], null], "and", [false, 2, [0, [0, 47, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 35, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "each", "professional", "'s", "first", "name", "and", "description", "of", "the", "treatment", "they", "have", "performed", "?"], "ru": ["Как", "зовут", "каждого", "специалиста", "и", "как", "он", "описывает", "проведенное", "лечение", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.first_name", ",", "t3.treatment_type_description", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "join", "treatment_types", "as", "t3", "on", "t2.treatment_type_code", "=", "t3.treatment_type_code", ";"], "ru": ["select", "distinct", "t1.first_name", ",", "t3.treatment_type_description", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "join", "treatment_types", "as", "t3", "on", "t2.treatment_type_code", "=", "t3.treatment_type_code", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.first_name", ",", "t3.treatment_type_description", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "join", "treatment_types", "as", "t3", "on", "t2.treatment_type_code", "=", "t3.treatment_type_code", ";"], "ru": ["select", "distinct", "t1.first_name", ",", "t3.treatment_type_description", "from", "professionals", "as", "t1", "join", "treatments", "as", "t2", "on", "t1.professional_id", "=", "t2.professional_id", "join", "treatment_types", "as", "t3", "on", "t2.treatment_type_code", "=", "t3.treatment_type_code", ";"]}}, {"id": "D_1001", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM singer;", "ru": "SELECT count(*) FROM singer;"}, "question": {"en": "How many singers are there?", "ru": "Сколько здесь певцов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "singers", "are", "there", "?"], "ru": ["Сколько", "здесь", "певцов", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "singer", ";"], "ru": ["select", "count", "(", "*", ")", "from", "singer", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "singer", ";"], "ru": ["select", "count", "(", "*", ")", "from", "singer", ";"]}}, {"id": "D_1002", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM singer;", "ru": "SELECT count(*) FROM singer;"}, "question": {"en": "What is the count of singers?", "ru": "Сколько певцов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "count", "of", "singers", "?"], "ru": ["Сколько", "певцов", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "singer", ";"], "ru": ["select", "count", "(", "*", ")", "from", "singer", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "singer", ";"], "ru": ["select", "count", "(", "*", ")", "from", "singer", ";"]}}, {"id": "D_1003", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;", "ru": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;"}, "question": {"en": "List the name of singers in ascending order of net worth.", "ru": "Перечислите имена певцов в порядке возрастания их чистых активов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "name", "of", "singers", "in", "ascending", "order", "of", "net", "worth", "."], "ru": ["Перечислите", "имена", "певцов", "в", "порядке", "возрастания", "их", "чистых", "активов", "."]}, "query_toks": {"en": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "asc", ";"], "ru": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "asc", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "asc", ";"], "ru": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "asc", ";"]}}, {"id": "D_1004", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;", "ru": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;"}, "question": {"en": "What are the names of singers ordered by ascending net worth?", "ru": "Как зовут певцов в порядке возрастающей чистой стоимости?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "singers", "ordered", "by", "ascending", "net", "worth", "?"], "ru": ["Как", "зовут", "певцов", "в", "порядке", "возрастающей", "чистой", "стоимости", "?"]}, "query_toks": {"en": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "asc", ";"], "ru": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "asc", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "asc", ";"], "ru": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "asc", ";"]}}, {"id": "D_1005", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Birth_Year ,  Citizenship FROM singer;", "ru": "SELECT Birth_Year ,  Citizenship FROM singer;"}, "question": {"en": "What are the birth year and citizenship of singers?", "ru": "Какой год рождения и гражданство певцов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "birth", "year", "and", "citizenship", "of", "singers", "?"], "ru": ["Какой", "год", "рождения", "и", "гражданство", "певцов", "?"]}, "query_toks": {"en": ["select", "birth_year", ",", "citizenship", "from", "singer", ";"], "ru": ["select", "birth_year", ",", "citizenship", "from", "singer", ";"]}, "query_toks_no_values": {"en": ["select", "birth_year", ",", "citizenship", "from", "singer", ";"], "ru": ["select", "birth_year", ",", "citizenship", "from", "singer", ";"]}}, {"id": "D_1006", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Birth_Year ,  Citizenship FROM singer;", "ru": "SELECT Birth_Year ,  Citizenship FROM singer;"}, "question": {"en": "What are the birth years and citizenships of the singers?", "ru": "Какие годы рождения и гражданства певцов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "birth", "years", "and", "citizenships", "of", "the", "singers", "?"], "ru": ["Какие", "годы", "рождения", "и", "гражданства", "певцов", "?"]}, "query_toks": {"en": ["select", "birth_year", ",", "citizenship", "from", "singer", ";"], "ru": ["select", "birth_year", ",", "citizenship", "from", "singer", ";"]}, "query_toks_no_values": {"en": ["select", "birth_year", ",", "citizenship", "from", "singer", ";"], "ru": ["select", "birth_year", ",", "citizenship", "from", "singer", ";"]}}, {"id": "D_1007", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM singer WHERE Citizenship != \"France\";", "ru": "SELECT Name FROM singer WHERE Citizenship != \"Россия\";"}, "question": {"en": "List the name of singers whose citizenship is not \"France\".", "ru": "Перечислите имена певцов, гражданство которых не \"Россия\"."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"France\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"Россия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "name", "of", "singers", "whose", "citizenship", "is", "not", "``", "France", "''", "."], "ru": ["Перечислите", "имена", "певцов", ",", "гражданство", "которых", "не", "``", "Россия", "''", "."]}, "query_toks": {"en": ["select", "name", "from", "singer", "where", "citizenship", "!=", "\"France\"", ";"], "ru": ["select", "name", "from", "singer", "where", "citizenship", "!=", "\"Россия\"", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "singer", "where", "citizenship", "!=", "value", ";"], "ru": ["select", "name", "from", "singer", "where", "citizenship", "!=", "value", ";"]}}, {"id": "D_1008", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM singer WHERE Citizenship != \"France\";", "ru": "SELECT Name FROM singer WHERE Citizenship != \"Россия\";"}, "question": {"en": "What are the names of the singers who are not French citizens?", "ru": "Как зовут певцов, не являющихся гражданами России?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"France\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"Россия\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "singers", "who", "are", "not", "French", "citizens", "?"], "ru": ["Как", "зовут", "певцов", ",", "не", "являющихся", "гражданами", "России", "?"]}, "query_toks": {"en": ["select", "name", "from", "singer", "where", "citizenship", "!=", "\"France\"", ";"], "ru": ["select", "name", "from", "singer", "where", "citizenship", "!=", "\"Россия\"", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "singer", "where", "citizenship", "!=", "value", ";"], "ru": ["select", "name", "from", "singer", "where", "citizenship", "!=", "value", ";"]}}, {"id": "D_1009", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949;", "ru": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949;"}, "question": {"en": "Show the name of singers whose birth year is either 1948 or 1949?", "ru": "Укажите имена певцов, чей год рождения - 1948 или 1949"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 1948.0, null], "or", [false, 2, [0, [0, 3, false], null], 1949.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 1948.0, null], "or", [false, 2, [0, [0, 3, false], null], 1949.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "name", "of", "singers", "whose", "birth", "year", "is", "either", "1948", "or", "1949", "?"], "ru": ["Укажите", "имена", "певцов", ",", "чей", "год", "рождения", "-", "1948", "или", "1949"]}, "query_toks": {"en": ["select", "name", "from", "singer", "where", "birth_year", "=", "1948", "or", "birth_year", "=", "1949", ";"], "ru": ["select", "name", "from", "singer", "where", "birth_year", "=", "1948", "or", "birth_year", "=", "1949", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "singer", "where", "birth_year", "=", "1948", "or", "birth_year", "=", "1949", ";"], "ru": ["select", "name", "from", "singer", "where", "birth_year", "=", "1948", "or", "birth_year", "=", "1949", ";"]}}, {"id": "D_1010", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949;", "ru": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949;"}, "question": {"en": "What are the names of the singers whose birth years are either 1948 or 1949?", "ru": "Как зовут певцов, чьи годы рождения - 1948 или 1949?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 1948.0, null], "or", [false, 2, [0, [0, 3, false], null], 1949.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 1948.0, null], "or", [false, 2, [0, [0, 3, false], null], 1949.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "singers", "whose", "birth", "years", "are", "either", "1948", "or", "1949", "?"], "ru": ["Как", "зовут", "певцов", ",", "чьи", "годы", "рождения", "-", "1948", "или", "1949", "?"]}, "query_toks": {"en": ["select", "name", "from", "singer", "where", "birth_year", "=", "1948", "or", "birth_year", "=", "1949", ";"], "ru": ["select", "name", "from", "singer", "where", "birth_year", "=", "1948", "or", "birth_year", "=", "1949", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "singer", "where", "birth_year", "=", "1948", "or", "birth_year", "=", "1949", ";"], "ru": ["select", "name", "from", "singer", "where", "birth_year", "=", "1948", "or", "birth_year", "=", "1949", ";"]}}, {"id": "D_1011", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;", "ru": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;"}, "question": {"en": "What is the name of the singer with the largest net worth?", "ru": "Как зовут певца с самым большим состоянием?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "singer", "with", "the", "largest", "net", "worth", "?"], "ru": ["Как", "зовут", "певца", "с", "самым", "большим", "состоянием", "?"]}, "query_toks": {"en": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "desc", "limit", "1", ";"], "ru": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "desc", "limit", "1", ";"], "ru": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "desc", "limit", "1", ";"]}}, {"id": "D_1012", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;", "ru": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;"}, "question": {"en": "What is the name of the singer who is worth the most?", "ru": "Как зовут певца, который стоит больше всего?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "name", "of", "the", "singer", "who", "is", "worth", "the", "most", "?"], "ru": ["Как", "зовут", "певца", ",", "который", "стоит", "больше", "всего", "?"]}, "query_toks": {"en": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "desc", "limit", "1", ";"], "ru": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "desc", "limit", "1", ";"], "ru": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "desc", "limit", "1", ";"]}}, {"id": "D_1013", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship;", "ru": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship;"}, "question": {"en": "Show different citizenship of singers and the number of singers of each citizenship.", "ru": "Покажите различное гражданство певцов и количество певцов каждого гражданства."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "different", "citizenship", "of", "singers", "and", "the", "number", "of", "singers", "of", "each", "citizenship", "."], "ru": ["Покажите", "различное", "гражданство", "певцов", "и", "количество", "певцов", "каждого", "гражданства", "."]}, "query_toks": {"en": ["select", "citizenship", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "citizenship", ";"], "ru": ["select", "citizenship", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "citizenship", ";"]}, "query_toks_no_values": {"en": ["select", "citizenship", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "citizenship", ";"], "ru": ["select", "citizenship", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "citizenship", ";"]}}, {"id": "D_1014", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship;", "ru": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship;"}, "question": {"en": "For each citizenship, how many singers are from that country?", "ru": "Сколько певцов каждого гражданства?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["For", "each", "citizenship", ",", "how", "many", "singers", "are", "from", "that", "country", "?"], "ru": ["Сколько", "певцов", "каждого", "гражданства", "?"]}, "query_toks": {"en": ["select", "citizenship", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "citizenship", ";"], "ru": ["select", "citizenship", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "citizenship", ";"]}, "query_toks_no_values": {"en": ["select", "citizenship", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "citizenship", ";"], "ru": ["select", "citizenship", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "citizenship", ";"]}}, {"id": "D_1015", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1;", "ru": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1;"}, "question": {"en": "Please show the most common citizenship of singers.", "ru": "Покажите, пожалуйста, наиболее распространенное гражданство среди певцов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Please", "show", "the", "most", "common", "citizenship", "of", "singers", "."], "ru": ["Покажите", ",", "пожалуйста", ",", "наиболее", "распространенное", "гражданство", "среди", "певцов", "."]}, "query_toks": {"en": ["select", "citizenship", "from", "singer", "group", "by", "citizenship", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "citizenship", "from", "singer", "group", "by", "citizenship", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "citizenship", "from", "singer", "group", "by", "citizenship", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "citizenship", "from", "singer", "group", "by", "citizenship", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_1016", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "select citizenship from singer group by citizenship order by count(*) desc limit 1;", "ru": "select citizenship from singer group by citizenship order by count(*) desc limit 1;"}, "question": {"en": "What is the most common singer citizenship ?", "ru": "Какое гражданство у певцов наиболее распространено?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "most", "common", "singer", "citizenship", "?"], "ru": ["Какое", "гражданство", "у", "певцов", "наиболее", "распространено", "?"]}, "query_toks": {"en": ["select", "citizenship", "from", "singer", "group", "by", "citizenship", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "citizenship", "from", "singer", "group", "by", "citizenship", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}, "query_toks_no_values": {"en": ["select", "citizenship", "from", "singer", "group", "by", "citizenship", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"], "ru": ["select", "citizenship", "from", "singer", "group", "by", "citizenship", "order", "by", "count", "(", "*", ")", "desc", "limit", "1", ";"]}}, {"id": "D_1017", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship;", "ru": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship;"}, "question": {"en": "Show different citizenships and the maximum net worth of singers of each citizenship.", "ru": "Покажите различное гражданство и максимальный собственный капитал певцов каждого гражданства."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "different", "citizenships", "and", "the", "maximum", "net", "worth", "of", "singers", "of", "each", "citizenship", "."], "ru": ["Покажите", "различное", "гражданство", "и", "максимальный", "собственный", "капитал", "певцов", "каждого", "гражданства", "."]}, "query_toks": {"en": ["select", "citizenship", ",", "max", "(", "net_worth_millions", ")", "from", "singer", "group", "by", "citizenship", ";"], "ru": ["select", "citizenship", ",", "max", "(", "net_worth_millions", ")", "from", "singer", "group", "by", "citizenship", ";"]}, "query_toks_no_values": {"en": ["select", "citizenship", ",", "max", "(", "net_worth_millions", ")", "from", "singer", "group", "by", "citizenship", ";"], "ru": ["select", "citizenship", ",", "max", "(", "net_worth_millions", ")", "from", "singer", "group", "by", "citizenship", ";"]}}, {"id": "D_1018", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship;", "ru": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship;"}, "question": {"en": "For each citizenship, what is the maximum net worth?", "ru": "Каков максимальный собственный капитал для каждого гражданства?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [1, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["For", "each", "citizenship", ",", "what", "is", "the", "maximum", "net", "worth", "?"], "ru": ["Каков", "максимальный", "собственный", "капитал", "для", "каждого", "гражданства", "?"]}, "query_toks": {"en": ["select", "citizenship", ",", "max", "(", "net_worth_millions", ")", "from", "singer", "group", "by", "citizenship", ";"], "ru": ["select", "citizenship", ",", "max", "(", "net_worth_millions", ")", "from", "singer", "group", "by", "citizenship", ";"]}, "query_toks_no_values": {"en": ["select", "citizenship", ",", "max", "(", "net_worth_millions", ")", "from", "singer", "group", "by", "citizenship", ";"], "ru": ["select", "citizenship", ",", "max", "(", "net_worth_millions", ")", "from", "singer", "group", "by", "citizenship", ";"]}}, {"id": "D_1019", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID;", "ru": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID;"}, "question": {"en": "Show titles of songs and names of singers.", "ru": "Показать названия песен и имена певцов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "titles", "of", "songs", "and", "names", "of", "singers", "."], "ru": ["Показать", "названия", "песен", "и", "имена", "певцов", "."]}, "query_toks": {"en": ["select", "t2.title", ",", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", ";"], "ru": ["select", "t2.title", ",", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", ";"]}, "query_toks_no_values": {"en": ["select", "t2.title", ",", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", ";"], "ru": ["select", "t2.title", ",", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", ";"]}}, {"id": "D_1020", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID;", "ru": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID;"}, "question": {"en": "What are the song titles and singer names?", "ru": "Какие названия песен и имена певцов?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "song", "titles", "and", "singer", "names", "?"], "ru": ["Какие", "названия", "песен", "и", "имена", "певцов", "?"]}, "query_toks": {"en": ["select", "t2.title", ",", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", ";"], "ru": ["select", "t2.title", ",", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", ";"]}, "query_toks_no_values": {"en": ["select", "t2.title", ",", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", ";"], "ru": ["select", "t2.title", ",", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", ";"]}}, {"id": "D_1021", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000;", "ru": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000;"}, "question": {"en": "Show distinct names of singers that have songs with sales more than 300000.", "ru": "Покажите разные имена певцов, у которых есть песни с продажами более 300000."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 300000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 300000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "distinct", "names", "of", "singers", "that", "have", "songs", "with", "sales", "more", "than", "300000", "."], "ru": ["Покажите", "разные", "имена", "певцов", ",", "у", "которых", "есть", "песни", "с", "продажами", "более", "300000", "."]}, "query_toks": {"en": ["select", "distinct", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "where", "t2.sales", ">", "300000", ";"], "ru": ["select", "distinct", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "where", "t2.sales", ">", "300000", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "where", "t2.sales", ">", "300000", ";"], "ru": ["select", "distinct", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "where", "t2.sales", ">", "300000", ";"]}}, {"id": "D_1022", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000;", "ru": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000;"}, "question": {"en": "what are the different names of the singers that have sales more than 300000?", "ru": "Какие имена у певцов, у которых продажи более 300000?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 300000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 9, false], null], 300000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["what", "are", "the", "different", "names", "of", "the", "singers", "that", "have", "sales", "more", "than", "300000", "?"], "ru": ["Какие", "имена", "у", "певцов", ",", "у", "которых", "продажи", "более", "300000", "?"]}, "query_toks": {"en": ["select", "distinct", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "where", "t2.sales", ">", "300000", ";"], "ru": ["select", "distinct", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "where", "t2.sales", ">", "300000", ";"]}, "query_toks_no_values": {"en": ["select", "distinct", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "where", "t2.sales", ">", "300000", ";"], "ru": ["select", "distinct", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "where", "t2.sales", ">", "300000", ";"]}}, {"id": "D_1023", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1;", "ru": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1;"}, "question": {"en": "Show the names of singers that have more than one song.", "ru": "Покажите имена певцов, у которых есть более одной песни."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "names", "of", "singers", "that", "have", "more", "than", "one", "song", "."], "ru": ["Покажите", "имена", "певцов", ",", "у", "которых", "есть", "более", "одной", "песни", "."]}, "query_toks": {"en": ["select", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t1.name", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t1.name", "having", "count", "(", "*", ")", ">", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t1.name", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t1.name", "having", "count", "(", "*", ")", ">", "1", ";"]}}, {"id": "D_1024", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1;", "ru": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1;"}, "question": {"en": "What are the names of the singers that have more than one songs?", "ru": "Как зовут певцов, у которых есть более одной песни?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "the", "singers", "that", "have", "more", "than", "one", "songs", "?"], "ru": ["Как", "зовут", "певцов", ",", "у", "которых", "есть", "более", "одной", "песни", "?"]}, "query_toks": {"en": ["select", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t1.name", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t1.name", "having", "count", "(", "*", ")", ">", "1", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t1.name", "having", "count", "(", "*", ")", ">", "1", ";"], "ru": ["select", "t1.name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t1.name", "having", "count", "(", "*", ")", ">", "1", ";"]}}, {"id": "D_1025", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name;", "ru": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name;"}, "question": {"en": "Show the names of singers and the total sales of their songs.", "ru": "Покажите имена певцов и общий объем продаж их песен."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "names", "of", "singers", "and", "the", "total", "sales", "of", "their", "songs", "."], "ru": ["Покажите", "имена", "певцов", "и", "общий", "объем", "продаж", "их", "песен", "."]}, "query_toks": {"en": ["select", "t1.name", ",", "sum", "(", "t2.sales", ")", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t1.name", ";"], "ru": ["select", "t1.name", ",", "sum", "(", "t2.sales", ")", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t1.name", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", ",", "sum", "(", "t2.sales", ")", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t1.name", ";"], "ru": ["select", "t1.name", ",", "sum", "(", "t2.sales", ")", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t1.name", ";"]}}, {"id": "D_1026", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name;", "ru": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name;"}, "question": {"en": "For each singer name, what is the total sales for their songs?", "ru": "Каков общий объем продаж песен каждого певца?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["For", "each", "singer", "name", ",", "what", "is", "the", "total", "sales", "for", "their", "songs", "?"], "ru": ["Каков", "общий", "объем", "продаж", "песен", "каждого", "певца", "?"]}, "query_toks": {"en": ["select", "t1.name", ",", "sum", "(", "t2.sales", ")", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t1.name", ";"], "ru": ["select", "t1.name", ",", "sum", "(", "t2.sales", ")", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t1.name", ";"]}, "query_toks_no_values": {"en": ["select", "t1.name", ",", "sum", "(", "t2.sales", ")", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t1.name", ";"], "ru": ["select", "t1.name", ",", "sum", "(", "t2.sales", ")", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1.singer_id", "=", "t2.singer_id", "group", "by", "t1.name", ";"]}}, {"id": "D_1027", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);", "ru": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);"}, "question": {"en": "List the name of singers that do not have any song.", "ru": "Перечислите имена певцов, у которых нет песен."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "the", "name", "of", "singers", "that", "do", "not", "have", "any", "song", "."], "ru": ["Перечислите", "имена", "певцов", ",", "у", "которых", "нет", "песен", "."]}, "query_toks": {"en": ["select", "name", "from", "singer", "where", "singer_id", "not", "in", "(", "select", "singer_id", "from", "song", ")", ";"], "ru": ["select", "name", "from", "singer", "where", "singer_id", "not", "in", "(", "select", "singer_id", "from", "song", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "singer", "where", "singer_id", "not", "in", "(", "select", "singer_id", "from", "song", ")", ";"], "ru": ["select", "name", "from", "singer", "where", "singer_id", "not", "in", "(", "select", "singer_id", "from", "song", ")", ";"]}}, {"id": "D_1028", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);", "ru": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);"}, "question": {"en": "What is the sname of every sing that does not have any song?", "ru": "Как зовут всех певцов, у которых нет песен?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "sname", "of", "every", "sing", "that", "does", "not", "have", "any", "song", "?"], "ru": ["Как", "зовут", "всех", "певцов", ",", "у", "которых", "нет", "песен", "?"]}, "query_toks": {"en": ["select", "name", "from", "singer", "where", "singer_id", "not", "in", "(", "select", "singer_id", "from", "song", ")", ";"], "ru": ["select", "name", "from", "singer", "where", "singer_id", "not", "in", "(", "select", "singer_id", "from", "song", ")", ";"]}, "query_toks_no_values": {"en": ["select", "name", "from", "singer", "where", "singer_id", "not", "in", "(", "select", "singer_id", "from", "song", ")", ";"], "ru": ["select", "name", "from", "singer", "where", "singer_id", "not", "in", "(", "select", "singer_id", "from", "song", ")", ";"]}}, {"id": "D_1029", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955;", "ru": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955;"}, "question": {"en": "Show the citizenship shared by singers with birth year before 1945 and after 1955.", "ru": "Показать гражданство певцов с годом рождения до 1945 года и после 1955 года."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 1945.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 1955.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 1945.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 1955.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "citizenship", "shared", "by", "singers", "with", "birth", "year", "before", "1945", "and", "after", "1955", "."], "ru": ["Показать", "гражданство", "певцов", "с", "годом", "рождения", "до", "1945", "года", "и", "после", "1955", "года", "."]}, "query_toks": {"en": ["select", "citizenship", "from", "singer", "where", "birth_year", "<", "1945", "intersect", "select", "citizenship", "from", "singer", "where", "birth_year", ">", "1955", ";"], "ru": ["select", "citizenship", "from", "singer", "where", "birth_year", "<", "1945", "intersect", "select", "citizenship", "from", "singer", "where", "birth_year", ">", "1955", ";"]}, "query_toks_no_values": {"en": ["select", "citizenship", "from", "singer", "where", "birth_year", "<", "1945", "intersect", "select", "citizenship", "from", "singer", "where", "birth_year", ">", "1955", ";"], "ru": ["select", "citizenship", "from", "singer", "where", "birth_year", "<", "1945", "intersect", "select", "citizenship", "from", "singer", "where", "birth_year", ">", "1955", ";"]}}, {"id": "D_1030", "db_id": "singer", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955;", "ru": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955;"}, "question": {"en": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?", "ru": "Какое гражданство имеют певцы, родившиеся до 1945 года и после 1955 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 1945.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 1955.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 1945.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 1955.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "citizenships", "that", "are", "shared", "by", "singers", "with", "a", "birth", "year", "before", "1945", "and", "after", "1955", "?"], "ru": ["Какое", "гражданство", "имеют", "певцы", ",", "родившиеся", "до", "1945", "года", "и", "после", "1955", "года", "?"]}, "query_toks": {"en": ["select", "citizenship", "from", "singer", "where", "birth_year", "<", "1945", "intersect", "select", "citizenship", "from", "singer", "where", "birth_year", ">", "1955", ";"], "ru": ["select", "citizenship", "from", "singer", "where", "birth_year", "<", "1945", "intersect", "select", "citizenship", "from", "singer", "where", "birth_year", ">", "1955", ";"]}, "query_toks_no_values": {"en": ["select", "citizenship", "from", "singer", "where", "birth_year", "<", "1945", "intersect", "select", "citizenship", "from", "singer", "where", "birth_year", ">", "1955", ";"], "ru": ["select", "citizenship", "from", "singer", "where", "birth_year", "<", "1945", "intersect", "select", "citizenship", "from", "singer", "where", "birth_year", ">", "1955", ";"]}}, {"id": "D_1031", "db_id": "real_estate_properties", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT count(*) FROM Other_Available_Features;", "ru": "SELECT count(*) FROM Other_Available_Features;"}, "question": {"en": "How many available features are there in total?", "ru": "Сколько всего доступных функций?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "available", "features", "are", "there", "in", "total", "?"], "ru": ["Сколько", "всего", "доступных", "функций", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "other_available_features", ";"], "ru": ["select", "count", "(", "*", ")", "from", "other_available_features", ";"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "other_available_features", ";"], "ru": ["select", "count", "(", "*", ")", "from", "other_available_features", ";"]}}, {"id": "D_1032", "db_id": "real_estate_properties", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\";", "ru": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\";"}, "question": {"en": "What is the feature type name of feature AirCon?", "ru": "Как называется функция AirCon?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"AirCon\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"AirCon\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "feature", "type", "name", "of", "feature", "AirCon", "?"], "ru": ["Как", "называется", "функция", "AirCon", "?"]}, "query_toks": {"en": ["select", "t2.feature_type_name", "from", "other_available_features", "as", "t1", "join", "ref_feature_types", "as", "t2", "on", "t1.feature_type_code", "=", "t2.feature_type_code", "where", "t1.feature_name", "=", "\"AirCon\"", ";"], "ru": ["select", "t2.feature_type_name", "from", "other_available_features", "as", "t1", "join", "ref_feature_types", "as", "t2", "on", "t1.feature_type_code", "=", "t2.feature_type_code", "where", "t1.feature_name", "=", "\"AirCon\"", ";"]}, "query_toks_no_values": {"en": ["select", "t2.feature_type_name", "from", "other_available_features", "as", "t1", "join", "ref_feature_types", "as", "t2", "on", "t1.feature_type_code", "=", "t2.feature_type_code", "where", "t1.feature_name", "=", "value", ";"], "ru": ["select", "t2.feature_type_name", "from", "other_available_features", "as", "t1", "join", "ref_feature_types", "as", "t2", "on", "t1.feature_type_code", "=", "t2.feature_type_code", "where", "t1.feature_name", "=", "value", ";"]}}, {"id": "D_1033", "db_id": "real_estate_properties", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code;", "ru": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code;"}, "question": {"en": "Show the property type descriptions of properties belonging to that code.", "ru": "Показать описания типов свойств для свойств, принадлежащих этому коду."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "the", "property", "type", "descriptions", "of", "properties", "belonging", "to", "that", "code", "."], "ru": ["Показать", "описания", "типов", "свойств", "для", "свойств", ",", "принадлежащих", "этому", "коду", "."]}, "query_toks": {"en": ["select", "t2.property_type_description", "from", "properties", "as", "t1", "join", "ref_property_types", "as", "t2", "on", "t1.property_type_code", "=", "t2.property_type_code", "group", "by", "t1.property_type_code", ";"], "ru": ["select", "t2.property_type_description", "from", "properties", "as", "t1", "join", "ref_property_types", "as", "t2", "on", "t1.property_type_code", "=", "t2.property_type_code", "group", "by", "t1.property_type_code", ";"]}, "query_toks_no_values": {"en": ["select", "t2.property_type_description", "from", "properties", "as", "t1", "join", "ref_property_types", "as", "t2", "on", "t1.property_type_code", "=", "t2.property_type_code", "group", "by", "t1.property_type_code", ";"], "ru": ["select", "t2.property_type_description", "from", "properties", "as", "t1", "join", "ref_property_types", "as", "t2", "on", "t1.property_type_code", "=", "t2.property_type_code", "group", "by", "t1.property_type_code", ";"]}}, {"id": "D_1034", "db_id": "real_estate_properties", "source": "spider-dev", "type": "dev", "query": {"en": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1;", "ru": "SELECT property_name FROM Properties WHERE property_type_code  =  \"Гараж\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Паб\" AND room_count  >  1;"}, "question": {"en": "What are the names of properties that are either houses or apartments with more than 1 room?", "ru": "Как называются гаражи или пабы с более чем одной комнатой?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"House\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Apartment\"", null], "and", [false, 3, [0, [0, 15, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Гараж\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Паб\"", null], "and", [false, 3, [0, [0, 15, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}}, "question_toks": {"en": ["What", "are", "the", "names", "of", "properties", "that", "are", "either", "houses", "or", "apartments", "with", "more", "than", "1", "room", "?"], "ru": ["Как", "называются", "гаражи", "или", "пабы", "с", "более", "чем", "одной", "комнатой", "?"]}, "query_toks": {"en": ["select", "property_name", "from", "properties", "where", "property_type_code", "=", "\"House\"", "union", "select", "property_name", "from", "properties", "where", "property_type_code", "=", "\"Apartment\"", "and", "room_count", ">", "1", ";"], "ru": ["select", "property_name", "from", "properties", "where", "property_type_code", "=", "\"Гараж\"", "union", "select", "property_name", "from", "properties", "where", "property_type_code", "=", "\"Паб\"", "and", "room_count", ">", "1", ";"]}, "query_toks_no_values": {"en": ["select", "property_name", "from", "properties", "where", "property_type_code", "=", "value", "union", "select", "property_name", "from", "properties", "where", "property_type_code", "=", "value", "and", "room_count", ">", "1", ";"], "ru": ["select", "property_name", "from", "properties", "where", "property_type_code", "=", "value", "union", "select", "property_name", "from", "properties", "where", "property_type_code", "=", "value", "and", "room_count", ">", "1", ";"]}}, {"id": "B_0008", "db_id": "tvshow", "source": "addition", "type": "dev", "query": {"en": "SELECT COUNT(*) FROM TV_Channel WHERE Pay_per_view_PPV = 'no'", "ru": "SELECT COUNT(*) FROM TV_Channel WHERE Pay_per_view_PPV = 'нет'"}, "question": {"en": "Amount of TV channels without paying per view", "ru": "Количество телеканалов без оплаты по числу просмотров"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"no\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"нет\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Amount", "of", "TV", "channels", "without", "paying", "per", "view"], "ru": ["Количество", "телеканалов", "без", "оплаты", "по", "числу", "просмотров"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "pay_per_view_ppv", "=", "\"no\""], "ru": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "pay_per_view_ppv", "=", "\"нет\""]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "pay_per_view_ppv", "=", "value"], "ru": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "pay_per_view_ppv", "=", "value"]}}, {"id": "B_0018", "db_id": "world_1", "source": "addition", "type": "dev", "query": {"en": "SELECT AVG(Percentage) FROM countrylanguage WHERE IsOfficial = 'T'", "ru": "SELECT AVG(Percentage) FROM countrylanguage WHERE IsOfficial = 'T'"}, "question": {"en": "What is the average percentage of people in countries speaking offical language?", "ru": "Каков для всех стран средний процент людей, говорящих на официальном языке?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "average", "percentage", "of", "people", "in", "countries", "speaking", "offical", "language", "?"], "ru": ["Каков", "для", "всех", "стран", "средний", "процент", "людей", ",", "говорящих", "на", "официальном", "языке", "?"]}, "query_toks": {"en": ["select", "avg", "(", "percentage", ")", "from", "countrylanguage", "where", "isofficial", "=", "\"T\""], "ru": ["select", "avg", "(", "percentage", ")", "from", "countrylanguage", "where", "isofficial", "=", "\"T\""]}, "query_toks_no_values": {"en": ["select", "avg", "(", "percentage", ")", "from", "countrylanguage", "where", "isofficial", "=", "value"], "ru": ["select", "avg", "(", "percentage", ")", "from", "countrylanguage", "where", "isofficial", "=", "value"]}}, {"id": "B_0019", "db_id": "world_1", "source": "addition", "type": "dev", "query": {"en": "SELECT Percentage FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = 'KAZ'", "ru": "SELECT Percentage FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = 'KAZ'"}, "question": {"en": "What is the percentage of people speaking offical language in KAZ?", "ru": "Каков процент людей, говорящих на официальном языке в KAZ?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 23, false], null], "\"KAZ\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"T\"", null], "and", [false, 2, [0, [0, 23, false], null], "\"KAZ\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "percentage", "of", "people", "speaking", "offical", "language", "in", "KAZ", "?"], "ru": ["Каков", "процент", "людей", ",", "говорящих", "на", "официальном", "языке", "в", "KAZ", "?"]}, "query_toks": {"en": ["select", "percentage", "from", "countrylanguage", "where", "isofficial", "=", "\"T\"", "and", "countrycode", "=", "\"KAZ\""], "ru": ["select", "percentage", "from", "countrylanguage", "where", "isofficial", "=", "\"T\"", "and", "countrycode", "=", "\"KAZ\""]}, "query_toks_no_values": {"en": ["select", "percentage", "from", "countrylanguage", "where", "isofficial", "=", "value", "and", "countrycode", "=", "value"], "ru": ["select", "percentage", "from", "countrylanguage", "where", "isofficial", "=", "value", "and", "countrycode", "=", "value"]}}, {"id": "B_0020", "db_id": "world_1", "source": "addition", "type": "dev", "query": {"en": "SELECT DISTINCT(CountryCode) FROM countrylanguage WHERE IsOfficial = 'F' AND Percentage > 10", "ru": "SELECT DISTINCT(CountryCode) FROM countrylanguage WHERE IsOfficial = 'F' AND Percentage > 10"}, "question": {"en": "Print me different codes of countries in which there are more then 10 percent of people speaking not official languages", "ru": "Выведите мне различные коды стран, в которых более 10 процентов людей не говорят на государственном языке."}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"F\"", null], "and", [false, 3, [0, [0, 26, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 25, false], null], "\"F\"", null], "and", [false, 3, [0, [0, 26, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Print", "me", "different", "codes", "of", "countries", "in", "which", "there", "are", "more", "then", "10", "percent", "of", "people", "speaking", "not", "official", "languages"], "ru": ["Выведите", "мне", "различные", "коды", "стран", ",", "в", "которых", "более", "10", "процентов", "людей", "не", "говорят", "на", "государственном", "языке", "."]}, "query_toks": {"en": ["select", "distinct", "(", "countrycode", ")", "from", "countrylanguage", "where", "isofficial", "=", "\"F\"", "and", "percentage", ">", "10"], "ru": ["select", "distinct", "(", "countrycode", ")", "from", "countrylanguage", "where", "isofficial", "=", "\"F\"", "and", "percentage", ">", "10"]}, "query_toks_no_values": {"en": ["select", "distinct", "(", "countrycode", ")", "from", "countrylanguage", "where", "isofficial", "=", "value", "and", "percentage", ">", "10"], "ru": ["select", "distinct", "(", "countrycode", ")", "from", "countrylanguage", "where", "isofficial", "=", "value", "and", "percentage", ">", "10"]}}, {"id": "B_0021", "db_id": "employee_hire_evaluation", "source": "addition", "type": "dev", "query": {"en": "SELECT DISTINCT(Shop_ID) FROM hiring WHERE Is_full_time = 'F'", "ru": "SELECT DISTINCT(Shop_ID) FROM hiring WHERE Is_full_time = 'F'"}, "question": {"en": "Show ids of all shops with part time vacancies", "ru": "Показать id всех магазинов с вакансиями с частичной занятостью"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [true, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "ids", "of", "all", "shops", "with", "part", "time", "vacancies"], "ru": ["Показать", "id", "всех", "магазинов", "с", "вакансиями", "с", "частичной", "занятостью"]}, "query_toks": {"en": ["select", "distinct", "(", "shop_id", ")", "from", "hiring", "where", "is_full_time", "=", "\"F\""], "ru": ["select", "distinct", "(", "shop_id", ")", "from", "hiring", "where", "is_full_time", "=", "\"F\""]}, "query_toks_no_values": {"en": ["select", "distinct", "(", "shop_id", ")", "from", "hiring", "where", "is_full_time", "=", "value"], "ru": ["select", "distinct", "(", "shop_id", ")", "from", "hiring", "where", "is_full_time", "=", "value"]}}, {"id": "B_0025", "db_id": "orchestra", "source": "addition", "type": "dev", "query": {"en": "SELECT MIN(Attendance) FROM show WHERE Result = 'T'", "ru": "SELECT MIN(Attendance) FROM show WHERE Result = 'T'"}, "question": {"en": "Minimum attendance of shows with results", "ru": "Показать идентификаторы всех дебатов с положительным выигрышем"}, "sql": {"en": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"T\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Minimum", "attendance", "of", "shows", "with", "results"], "ru": ["Показать", "идентификаторы", "всех", "дебатов", "с", "положительным", "выигрышем"]}, "query_toks": {"en": ["select", "min", "(", "attendance", ")", "from", "show", "where", "result", "=", "\"T\""], "ru": ["select", "min", "(", "attendance", ")", "from", "show", "where", "result", "=", "\"T\""]}, "query_toks_no_values": {"en": ["select", "min", "(", "attendance", ")", "from", "show", "where", "result", "=", "value"], "ru": ["select", "min", "(", "attendance", ")", "from", "show", "where", "result", "=", "value"]}}, {"id": "B_0046", "db_id": "dog_kennels", "source": "addition", "type": "dev", "query": {"en": "SELECT name FROM Dogs WHERE Gender = '1'", "ru": "SELECT name FROM Dogs WHERE Gender = '1'"}, "question": {"en": "Please, list all female dog names in kennels?", "ru": "Пожалуйста, перечисли клички всех собак, являющихся самками."}, "sql": {"en": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 28, false], null], "\"1\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 28, false], null], "\"1\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Please", ",", "list", "all", "female", "dog", "names", "in", "kennels", "?"], "ru": ["Пожалуйста", ",", "перечисли", "клички", "всех", "собак", ",", "являющихся", "самками", "."]}, "query_toks": {"en": ["select", "name", "from", "dogs", "where", "gender", "=", "\"1\""], "ru": ["select", "name", "from", "dogs", "where", "gender", "=", "\"1\""]}, "query_toks_no_values": {"en": ["select", "name", "from", "dogs", "where", "gender", "=", "value"], "ru": ["select", "name", "from", "dogs", "where", "gender", "=", "value"]}}, {"id": "B_0047", "db_id": "concert_singer", "source": "addition", "type": "dev", "query": {"en": "SELECT count( * ) FROM singer WHERE singer.Is_male = 0", "ru": "SELECT count( * ) FROM singer WHERE singer.Is_male = 'F'"}, "question": {"en": "Amount of female singers", "ru": "Количество певиц"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], 0.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Amount", "of", "female", "singers"], "ru": ["Количество", "певиц"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "singer", "where", "singer.is_male", "=", "0"], "ru": ["select", "count", "(", "*", ")", "from", "singer", "where", "singer.is_male", "=", "\"F\""]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "singer", "where", "singer.is_male", "=", "0"], "ru": ["select", "count", "(", "*", ")", "from", "singer", "where", "singer.is_male", "=", "value"]}}, {"id": "T_0004", "db_id": "battle_death", "source": "addition", "type": "dev", "query": {"en": "SELECT DISTINCT(latin_commander) FROM battle WHERE  Date LIKE '%April%' AND Date LIKE '%1205%'", "ru": "SELECT DISTINCT(latin_commander) FROM battle WHERE  Date LIKE '%Апрел%' AND Date LIKE '%1205%'"}, "question": {"en": "Which of the Latin commanders participated in the battles in April 1205?", "ru": "Кто из латинских главнокомандующих участвовал в сражения в апреле 1205 года?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%April%\"", null], "and", [false, 9, [0, [0, 3, false], null], "\"%1205%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%Апрел%\"", null], "and", [false, 9, [0, [0, 3, false], null], "\"%1205%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "of", "the", "Latin", "commanders", "participated", "in", "the", "battles", "in", "April", "1205", "?"], "ru": ["Кто", "из", "латинских", "главнокомандующих", "участвовал", "в", "сражения", "в", "апреле", "1205", "года", "?"]}, "query_toks": {"en": ["select", "distinct", "(", "latin_commander", ")", "from", "battle", "where", "date", "like", "\"%April%\"", "and", "date", "like", "\"%1205%\""], "ru": ["select", "distinct", "(", "latin_commander", ")", "from", "battle", "where", "date", "like", "\"%Апрел%\"", "and", "date", "like", "\"%1205%\""]}, "query_toks_no_values": {"en": ["select", "distinct", "(", "latin_commander", ")", "from", "battle", "where", "date", "like", "value", "and", "date", "like", "value"], "ru": ["select", "distinct", "(", "latin_commander", ")", "from", "battle", "where", "date", "like", "value", "and", "date", "like", "value"]}}, {"id": "T_0005", "db_id": "battle_death", "source": "addition", "type": "dev", "query": {"en": "SELECT COUNT(DISTINCT id) FROM battle WHERE Date LIKE '%1205%' OR Date LIKE '%1206%' OR Date LIKE '%1207%'", "ru": "SELECT COUNT(DISTINCT id) FROM battle WHERE Date LIKE '%1205%' OR Date LIKE '%1206%' OR Date LIKE '%1207%'"}, "question": {"en": "How many battles were fought between 1205 and 1207 inclusive?", "ru": "Как много сражений состоялось в период с 1205 по 1207 годы включительно?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 1, true], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%1205%\"", null], "or", [false, 9, [0, [0, 3, false], null], "\"%1206%\"", null], "or", [false, 9, [0, [0, 3, false], null], "\"%1207%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 1, true], null]]]], "where": [[false, 9, [0, [0, 3, false], null], "\"%1205%\"", null], "or", [false, 9, [0, [0, 3, false], null], "\"%1206%\"", null], "or", [false, 9, [0, [0, 3, false], null], "\"%1207%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "battles", "were", "fought", "between", "1205", "and", "1207", "inclusive", "?"], "ru": ["Как", "много", "сражений", "состоялось", "в", "период", "с", "1205", "по", "1207", "годы", "включительно", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "id", ")", "from", "battle", "where", "date", "like", "\"%1205%\"", "or", "date", "like", "\"%1206%\"", "or", "date", "like", "\"%1207%\""], "ru": ["select", "count", "(", "distinct", "id", ")", "from", "battle", "where", "date", "like", "\"%1205%\"", "or", "date", "like", "\"%1206%\"", "or", "date", "like", "\"%1207%\""]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "id", ")", "from", "battle", "where", "date", "like", "value", "or", "date", "like", "value", "or", "date", "like", "value"], "ru": ["select", "count", "(", "distinct", "id", ")", "from", "battle", "where", "date", "like", "value", "or", "date", "like", "value", "or", "date", "like", "value"]}}, {"id": "T_0014", "db_id": "course_teach", "source": "addition", "type": "dev", "query": {"en": "SELECT count(DISTINCT Course_ID) FROM Course WHERE Staring_Date LIKE  '%May%'", "ru": "SELECT count(DISTINCT Course_ID) FROM Course WHERE Staring_Date LIKE  '%Мая%'"}, "question": {"en": "Amount of courses started in May", "ru": "Количество курсов, начавшихся в мае"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 1, true], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%May%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 1, true], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Мая%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Amount", "of", "courses", "started", "in", "May"], "ru": ["Количество", "курсов", ",", "начавшихся", "в", "мае"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "course_id", ")", "from", "course", "where", "staring_date", "like", "\"%May%\""], "ru": ["select", "count", "(", "distinct", "course_id", ")", "from", "course", "where", "staring_date", "like", "\"%Мая%\""]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "course_id", ")", "from", "course", "where", "staring_date", "like", "value"], "ru": ["select", "count", "(", "distinct", "course_id", ")", "from", "course", "where", "staring_date", "like", "value"]}}, {"id": "T_0015", "db_id": "course_teach", "source": "addition", "type": "dev", "query": {"en": "SELECT DISTINCT(Course) FROM Course WHERE Staring_Date = '14 May'", "ru": "SELECT DISTINCT(Course) FROM Course WHERE Staring_Date = '14 Мая'"}, "question": {"en": "Show me names of the courses started at the 14th of May", "ru": "Выведи названия курсов, начавшихся 14го Мая"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"14 May\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"14 Мая\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Show", "me", "names", "of", "the", "courses", "started", "at", "the", "14th", "of", "May"], "ru": ["Выведи", "названия", "курсов", ",", "начавшихся", "14го", "Мая"]}, "query_toks": {"en": ["select", "distinct", "(", "course", ")", "from", "course", "where", "staring_date", "=", "\"14 May\""], "ru": ["select", "distinct", "(", "course", ")", "from", "course", "where", "staring_date", "=", "\"14 Мая\""]}, "query_toks_no_values": {"en": ["select", "distinct", "(", "course", ")", "from", "course", "where", "staring_date", "=", "value"], "ru": ["select", "distinct", "(", "course", ")", "from", "course", "where", "staring_date", "=", "value"]}}, {"id": "T_0016", "db_id": "course_teach", "source": "addition", "type": "dev", "query": {"en": "SELECT MIN(Grade) FROM course_arrange JOIN Course ON course_arrange.Course_ID = Course.Course_ID WHERE Staring_Date LIKE '%9 May%'", "ru": "SELECT MIN(Grade) FROM course_arrange JOIN Course ON course_arrange.Course_ID = Course.Course_ID WHERE Staring_Date LIKE '%9 Мая%'"}, "question": {"en": "What is the minimum grade for the May 9 course?", "ru": "Какой минимальный балл был поставлен за курс от 9 мая?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [false, [[2, [0, [0, 10, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%9 May%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 1, false], null]]}, "select": [false, [[2, [0, [0, 10, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%9 Мая%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "minimum", "grade", "for", "the", "May", "9", "course", "?"], "ru": ["Какой", "минимальный", "балл", "был", "поставлен", "за", "курс", "от", "9", "мая", "?"]}, "query_toks": {"en": ["select", "min", "(", "grade", ")", "from", "course_arrange", "join", "course", "on", "course_arrange.course_id", "=", "course.course_id", "where", "staring_date", "like", "\"%9 May%\""], "ru": ["select", "min", "(", "grade", ")", "from", "course_arrange", "join", "course", "on", "course_arrange.course_id", "=", "course.course_id", "where", "staring_date", "like", "\"%9 Мая%\""]}, "query_toks_no_values": {"en": ["select", "min", "(", "grade", ")", "from", "course_arrange", "join", "course", "on", "course_arrange.course_id", "=", "course.course_id", "where", "staring_date", "like", "value"], "ru": ["select", "min", "(", "grade", ")", "from", "course_arrange", "join", "course", "on", "course_arrange.course_id", "=", "course.course_id", "where", "staring_date", "like", "value"]}}, {"id": "T_0022", "db_id": "cre_Doc_Template_Mgt", "source": "addition", "type": "dev", "query": {"en": "SELECT Template_ID FROM Templates WHERE Date_Effective_From LIKE '%2005%' AND Date_Effective_TO LIKE '%2008%'", "ru": "SELECT Template_ID FROM Templates WHERE Date_Effective_From LIKE '%2005%' AND Date_Effective_TO LIKE '%2008%'"}, "question": {"en": "Id of templates effective from 2005 to 2008", "ru": "Id шаблонов действующих с 2005 по 2008 год"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 9, [0, [0, 6, false], null], "\"%2005%\"", null], "and", [false, 9, [0, [0, 7, false], null], "\"%2008%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 9, [0, [0, 6, false], null], "\"%2005%\"", null], "and", [false, 9, [0, [0, 7, false], null], "\"%2008%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Id", "of", "templates", "effective", "from", "2005", "to", "2008"], "ru": ["Id", "шаблонов", "действующих", "с", "2005", "по", "2008", "год"]}, "query_toks": {"en": ["select", "template_id", "from", "templates", "where", "date_effective_from", "like", "\"%2005%\"", "and", "date_effective_to", "like", "\"%2008%\""], "ru": ["select", "template_id", "from", "templates", "where", "date_effective_from", "like", "\"%2005%\"", "and", "date_effective_to", "like", "\"%2008%\""]}, "query_toks_no_values": {"en": ["select", "template_id", "from", "templates", "where", "date_effective_from", "like", "value", "and", "date_effective_to", "like", "value"], "ru": ["select", "template_id", "from", "templates", "where", "date_effective_from", "like", "value", "and", "date_effective_to", "like", "value"]}}, {"id": "T_0023", "db_id": "cre_Doc_Template_Mgt", "source": "addition", "type": "dev", "query": {"en": "SELECT Template_ID FROM Templates WHERE Date_Effective_FROM LIKE '%2005-11-12%' AND Date_Effective_TO LIKE '%2008-01-05%'", "ru": "SELECT Template_ID FROM Templates WHERE Date_Effective_FROM LIKE '%2005-11-12%' AND Date_Effective_TO LIKE '%2008-01-05%'"}, "question": {"en": "What are the IDs of templates effective from 2005-11-12 to 2008-01-05?", "ru": "Какие ID у шаблонов действующих с 2005-11-12 по 2008-01-05?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 9, [0, [0, 6, false], null], "\"%2005-11-12%\"", null], "and", [false, 9, [0, [0, 7, false], null], "\"%2008-01-05%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 9, [0, [0, 6, false], null], "\"%2005-11-12%\"", null], "and", [false, 9, [0, [0, 7, false], null], "\"%2008-01-05%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "are", "the", "IDs", "of", "templates", "effective", "from", "2005-11-12", "to", "2008-01-05", "?"], "ru": ["Какие", "ID", "у", "шаблонов", "действующих", "с", "2005-11-12", "по", "2008-01-05", "?"]}, "query_toks": {"en": ["select", "template_id", "from", "templates", "where", "date_effective_from", "like", "\"%2005-11-12%\"", "and", "date_effective_to", "like", "\"%2008-01-05%\""], "ru": ["select", "template_id", "from", "templates", "where", "date_effective_from", "like", "\"%2005-11-12%\"", "and", "date_effective_to", "like", "\"%2008-01-05%\""]}, "query_toks_no_values": {"en": ["select", "template_id", "from", "templates", "where", "date_effective_from", "like", "value", "and", "date_effective_to", "like", "value"], "ru": ["select", "template_id", "from", "templates", "where", "date_effective_from", "like", "value", "and", "date_effective_to", "like", "value"]}}, {"id": "T_0024", "db_id": "cre_Doc_Template_Mgt", "source": "addition", "type": "dev", "query": {"en": "SELECT COUNT(DISTINCT Template_ID) FROM Templates WHERE Date_Effective_From LIKE '%2010%' OR Date_Effective_From LIKE '%2011%' OR Date_Effective_From LIKE '%2012%'", "ru": "SELECT COUNT(DISTINCT Template_ID) FROM Templates WHERE Date_Effective_From LIKE '%2010%' OR Date_Effective_From LIKE '%2011%' OR Date_Effective_From LIKE '%2012%'"}, "question": {"en": "Number of templates that became effective between 2010 and 2012", "ru": "Количество шаблонов, вступивших в силу в период с 2010 по 2012 год"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 3, true], null]]]], "where": [[false, 9, [0, [0, 6, false], null], "\"%2010%\"", null], "or", [false, 9, [0, [0, 6, false], null], "\"%2011%\"", null], "or", [false, 9, [0, [0, 6, false], null], "\"%2012%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 3, true], null]]]], "where": [[false, 9, [0, [0, 6, false], null], "\"%2010%\"", null], "or", [false, 9, [0, [0, 6, false], null], "\"%2011%\"", null], "or", [false, 9, [0, [0, 6, false], null], "\"%2012%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Number", "of", "templates", "that", "became", "effective", "between", "2010", "and", "2012"], "ru": ["Количество", "шаблонов", ",", "вступивших", "в", "силу", "в", "период", "с", "2010", "по", "2012", "год"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "template_id", ")", "from", "templates", "where", "date_effective_from", "like", "\"%2010%\"", "or", "date_effective_from", "like", "\"%2011%\"", "or", "date_effective_from", "like", "\"%2012%\""], "ru": ["select", "count", "(", "distinct", "template_id", ")", "from", "templates", "where", "date_effective_from", "like", "\"%2010%\"", "or", "date_effective_from", "like", "\"%2011%\"", "or", "date_effective_from", "like", "\"%2012%\""]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "template_id", ")", "from", "templates", "where", "date_effective_from", "like", "value", "or", "date_effective_from", "like", "value", "or", "date_effective_from", "like", "value"], "ru": ["select", "count", "(", "distinct", "template_id", ")", "from", "templates", "where", "date_effective_from", "like", "value", "or", "date_effective_from", "like", "value", "or", "date_effective_from", "like", "value"]}}, {"id": "T_0025", "db_id": "cre_Doc_Template_Mgt", "source": "addition", "type": "dev", "query": {"en": "SELECT Template_ID FROM Templates WHERE Date_Effective_From IN (SELECT MIN(Date_Effective_From) FROM Templates)", "ru": "SELECT Template_ID FROM Templates WHERE Date_Effective_From IN (SELECT MIN(Date_Effective_From) FROM Templates)"}, "question": {"en": "What is the ID of the template that took effect first?", "ru": "Какой ID у шаблона, вступившего в силу самым первым?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "is", "the", "ID", "of", "the", "template", "that", "took", "effect", "first", "?"], "ru": ["Какой", "ID", "у", "шаблона", ",", "вступившего", "в", "силу", "самым", "первым", "?"]}, "query_toks": {"en": ["select", "template_id", "from", "templates", "where", "date_effective_from", "in", "(", "select", "min", "(", "date_effective_from", ")", "from", "templates", ")"], "ru": ["select", "template_id", "from", "templates", "where", "date_effective_from", "in", "(", "select", "min", "(", "date_effective_from", ")", "from", "templates", ")"]}, "query_toks_no_values": {"en": ["select", "template_id", "from", "templates", "where", "date_effective_from", "in", "(", "select", "min", "(", "date_effective_from", ")", "from", "templates", ")"], "ru": ["select", "template_id", "from", "templates", "where", "date_effective_from", "in", "(", "select", "min", "(", "date_effective_from", ")", "from", "templates", ")"]}}, {"id": "F_0020", "db_id": "concert_singer", "source": "addition", "type": "dev", "query": {"en": "SELECT concert_ID, Stadium_ID FROM concert", "ru": "SELECT concert_ID, Stadium_ID FROM concert"}, "question": {"en": "Output all pairs of concert and stadium ids.", "ru": "Выведите все пары id концертов и стадионов."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Output", "all", "pairs", "of", "concert", "and", "stadium", "ids", "."], "ru": ["Выведите", "все", "пары", "id", "концертов", "и", "стадионов", "."]}, "query_toks": {"en": ["select", "concert_id", ",", "stadium_id", "from", "concert"], "ru": ["select", "concert_id", ",", "stadium_id", "from", "concert"]}, "query_toks_no_values": {"en": ["select", "concert_id", ",", "stadium_id", "from", "concert"], "ru": ["select", "concert_id", ",", "stadium_id", "from", "concert"]}}, {"id": "F_0031", "db_id": "wta_1", "source": "addition", "type": "dev", "query": {"en": "SELECT winner_name, loser_name FROM matches WHERE match_num = 222", "ru": "SELECT winner_name, loser_name FROM matches WHERE match_num = 222"}, "question": {"en": "Winners and loosers names in the match number 222.", "ru": "Имена победителей и проигравших на матче №222."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 222.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 222.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Winners", "and", "loosers", "names", "in", "the", "match", "number", "222", "."], "ru": ["Имена", "победителей", "и", "проигравших", "на", "матче", "№222", "."]}, "query_toks": {"en": ["select", "winner_name", ",", "loser_name", "from", "matches", "where", "match_num", "=", "222"], "ru": ["select", "winner_name", ",", "loser_name", "from", "matches", "where", "match_num", "=", "222"]}, "query_toks_no_values": {"en": ["select", "winner_name", ",", "loser_name", "from", "matches", "where", "match_num", "=", "222"], "ru": ["select", "winner_name", ",", "loser_name", "from", "matches", "where", "match_num", "=", "222"]}}, {"id": "F_0032", "db_id": "wta_1", "source": "addition", "type": "dev", "query": {"en": "SELECT tourney_date, tourney_id FROM matches WHERE winner_name = 'Petra Kvitova' OR loser_name = 'Petra Kvitova'", "ru": "SELECT tourney_date, tourney_id FROM matches WHERE winner_name = 'Мирон Сивов' OR loser_name = 'Мирон Сивов'"}, "question": {"en": "Tourneys dates and id with Petra Kvitova", "ru": "Выведи id и даты турниров с Мироном Сивовым"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 34, false], null], "\"Petra Kvitova\"", null], "or", [false, 2, [0, [0, 15, false], null], "\"Petra Kvitova\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 24, false], null]], [0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 34, false], null], "\"Мирон Сивов\"", null], "or", [false, 2, [0, [0, 15, false], null], "\"Мирон Сивов\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Tourneys", "dates", "and", "id", "with", "Petra", "Kvitova"], "ru": ["Выведи", "id", "и", "даты", "турниров", "с", "Мироном", "Сивовым"]}, "query_toks": {"en": ["select", "tourney_date", ",", "tourney_id", "from", "matches", "where", "winner_name", "=", "\"Petra Kvitova\"", "or", "loser_name", "=", "\"Petra Kvitova\""], "ru": ["select", "tourney_date", ",", "tourney_id", "from", "matches", "where", "winner_name", "=", "\"Мирон Сивов\"", "or", "loser_name", "=", "\"Мирон Сивов\""]}, "query_toks_no_values": {"en": ["select", "tourney_date", ",", "tourney_id", "from", "matches", "where", "winner_name", "=", "value", "or", "loser_name", "=", "value"], "ru": ["select", "tourney_date", ",", "tourney_id", "from", "matches", "where", "winner_name", "=", "value", "or", "loser_name", "=", "value"]}}, {"id": "F_0033", "db_id": "wta_1", "source": "addition", "type": "dev", "query": {"en": "SELECT COUNT(*) FROM matches WHERE loser_ht > winner_ht", "ru": "SELECT COUNT(*) FROM matches WHERE loser_ht > winner_ht"}, "question": {"en": "Amount of matches where looser's height were greater than winner's one.", "ru": "Сколько было матчей, в которых рост проигравшего больше роста победителя."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], [0, 31, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], [0, 31, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Amount", "of", "matches", "where", "looser", "'s", "height", "were", "greater", "than", "winner", "'s", "one", "."], "ru": ["Сколько", "было", "матчей", ",", "в", "которых", "рост", "проигравшего", "больше", "роста", "победителя", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "matches", "where", "loser_ht", ">", "winner_ht"], "ru": ["select", "count", "(", "*", ")", "from", "matches", "where", "loser_ht", ">", "winner_ht"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "matches", "where", "loser_ht", ">", "winner_ht"], "ru": ["select", "count", "(", "*", ")", "from", "matches", "where", "loser_ht", ">", "winner_ht"]}}, {"id": "F_0034", "db_id": "wta_1", "source": "addition", "type": "dev", "query": {"en": "SELECT COUNT(*) FROM matches WHERE loser_ht > winner_ht", "ru": "SELECT COUNT(*) FROM matches WHERE loser_ht > winner_ht"}, "question": {"en": "The number of matches in which the loser was higher than the winner.", "ru": "Количество матчей, в которых проигравший был выше победителя."}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], [0, 31, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 12, false], null], [0, 31, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["The", "number", "of", "matches", "in", "which", "the", "loser", "was", "higher", "than", "the", "winner", "."], "ru": ["Количество", "матчей", ",", "в", "которых", "проигравший", "был", "выше", "победителя", "."]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "matches", "where", "loser_ht", ">", "winner_ht"], "ru": ["select", "count", "(", "*", ")", "from", "matches", "where", "loser_ht", ">", "winner_ht"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "matches", "where", "loser_ht", ">", "winner_ht"], "ru": ["select", "count", "(", "*", ")", "from", "matches", "where", "loser_ht", ">", "winner_ht"]}}, {"id": "F_0035", "db_id": "network_1", "source": "addition", "type": "dev", "query": {"en": "SELECT COUNT(DISTINCT student_id) FROM Friend", "ru": "SELECT COUNT(DISTINCT student_id) FROM Friend"}, "question": {"en": "How many schoolers have friends?", "ru": "У скольких школьников есть друзья?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 4, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 4, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "schoolers", "have", "friends", "?"], "ru": ["У", "скольких", "школьников", "есть", "друзья", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "student_id", ")", "from", "friend"], "ru": ["select", "count", "(", "distinct", "student_id", ")", "from", "friend"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "student_id", ")", "from", "friend"], "ru": ["select", "count", "(", "distinct", "student_id", ")", "from", "friend"]}}, {"id": "F_0036", "db_id": "network_1", "source": "addition", "type": "dev", "query": {"en": "SELECT friend_id FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id WHERE Highschooler.name = 'Jordan'", "ru": "SELECT friend_id FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id WHERE Highschooler.name = 'Лев'"}, "question": {"en": "Id of friends of Jordan.", "ru": "Идентификаторы старшеклассников, с которыми Лев находится в дружбе."}, "sql": {"en": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Jordan\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Лев\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Id", "of", "friends", "of", "Jordan", "."], "ru": ["Идентификаторы", "старшеклассников", ",", "с", "которыми", "Лев", "находится", "в", "дружбе", "."]}, "query_toks": {"en": ["select", "friend_id", "from", "highschooler", "join", "friend", "on", "highschooler.id", "=", "friend.friend_id", "where", "highschooler.name", "=", "\"Jordan\""], "ru": ["select", "friend_id", "from", "highschooler", "join", "friend", "on", "highschooler.id", "=", "friend.friend_id", "where", "highschooler.name", "=", "\"Лев\""]}, "query_toks_no_values": {"en": ["select", "friend_id", "from", "highschooler", "join", "friend", "on", "highschooler.id", "=", "friend.friend_id", "where", "highschooler.name", "=", "value"], "ru": ["select", "friend_id", "from", "highschooler", "join", "friend", "on", "highschooler.id", "=", "friend.friend_id", "where", "highschooler.name", "=", "value"]}}, {"id": "F_0037", "db_id": "student_transcripts_tracking", "source": "addition", "type": "dev", "query": {"en": "SELECT course_description FROM Courses WHERE course_name = 'nlp'", "ru": "SELECT course_description FROM Courses WHERE course_name = 'экономика'"}, "question": {"en": "Descriptions of all NLP courses", "ru": "Описания всех курсов по экономике"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"nlp\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"экономика\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Descriptions", "of", "all", "NLP", "courses"], "ru": ["Описания", "всех", "курсов", "по", "экономике"]}, "query_toks": {"en": ["select", "course_description", "from", "courses", "where", "course_name", "=", "\"nlp\""], "ru": ["select", "course_description", "from", "courses", "where", "course_name", "=", "\"экономика\""]}, "query_toks_no_values": {"en": ["select", "course_description", "from", "courses", "where", "course_name", "=", "value"], "ru": ["select", "course_description", "from", "courses", "where", "course_name", "=", "value"]}}, {"id": "F_0038", "db_id": "student_transcripts_tracking", "source": "addition", "type": "dev", "query": {"en": "SELECT first_name, middle_name, last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment.student_enrolment_id = Student_Enrolment_Courses.student_enrolment_id JOIN Courses ON Student_Enrolment_Courses.course_id = Courses.course_id WHERE Courses.course_name = 'ai'", "ru": "SELECT first_name, middle_name, last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment.student_enrolment_id = Student_Enrolment_Courses.student_enrolment_id JOIN Courses ON Student_Enrolment_Courses.course_id = Courses.course_id WHERE Courses.course_name = 'экономика'"}, "question": {"en": "First, middle and last name of students who enrolled in ai course", "ru": "Имя, фамилия и отчество студентов, записавшихся на курсы по экономике"}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 8], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null], "and", [false, 2, [0, [0, 44, false], null], [0, 51, false], null], "and", [false, 2, [0, [0, 50, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"ai\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 8], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null], "and", [false, 2, [0, [0, 44, false], null], [0, 51, false], null], "and", [false, 2, [0, [0, 50, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 35, false], null]], [0, [0, [0, 36, false], null]], [0, [0, [0, 37, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"экономика\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["First", ",", "middle", "and", "last", "name", "of", "students", "who", "enrolled", "in", "ai", "course"], "ru": ["Имя", ",", "фамилия", "и", "отчество", "студентов", ",", "записавшихся", "на", "курсы", "по", "экономике"]}, "query_toks": {"en": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "join", "student_enrolment", "on", "students.student_id", "=", "student_enrolment.student_id", "join", "student_enrolment_courses", "on", "student_enrolment.student_enrolment_id", "=", "student_enrolment_courses.student_enrolment_id", "join", "courses", "on", "student_enrolment_courses.course_id", "=", "courses.course_id", "where", "courses.course_name", "=", "\"ai\""], "ru": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "join", "student_enrolment", "on", "students.student_id", "=", "student_enrolment.student_id", "join", "student_enrolment_courses", "on", "student_enrolment.student_enrolment_id", "=", "student_enrolment_courses.student_enrolment_id", "join", "courses", "on", "student_enrolment_courses.course_id", "=", "courses.course_id", "where", "courses.course_name", "=", "\"экономика\""]}, "query_toks_no_values": {"en": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "join", "student_enrolment", "on", "students.student_id", "=", "student_enrolment.student_id", "join", "student_enrolment_courses", "on", "student_enrolment.student_enrolment_id", "=", "student_enrolment_courses.student_enrolment_id", "join", "courses", "on", "student_enrolment_courses.course_id", "=", "courses.course_id", "where", "courses.course_name", "=", "value"], "ru": ["select", "first_name", ",", "middle_name", ",", "last_name", "from", "students", "join", "student_enrolment", "on", "students.student_id", "=", "student_enrolment.student_id", "join", "student_enrolment_courses", "on", "student_enrolment.student_enrolment_id", "=", "student_enrolment_courses.student_enrolment_id", "join", "courses", "on", "student_enrolment_courses.course_id", "=", "courses.course_id", "where", "courses.course_name", "=", "value"]}}, {"id": "F_0039", "db_id": "student_transcripts_tracking", "source": "addition", "type": "dev", "query": {"en": "SELECT cell_mobile_number FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment.student_enrolment_id = Student_Enrolment_Courses.student_enrolment_id JOIN Courses ON Student_Enrolment_Courses.course_id = Courses.course_id WHERE Courses.course_name = 'ai'", "ru": "SELECT cell_mobile_number FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment.student_enrolment_id = Student_Enrolment_Courses.student_enrolment_id JOIN Courses ON Student_Enrolment_Courses.course_id = Courses.course_id WHERE Courses.course_name = 'ai'"}, "question": {"en": "Looking for the phone numbers of students from Artificial Intelligence courses.", "ru": "Нужны номера телефонов студентов с курсов по искусственному интеллекту."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 8], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null], "and", [false, 2, [0, [0, 44, false], null], [0, 51, false], null], "and", [false, 2, [0, [0, 50, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"ai\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 7], ["table_unit", 8], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 47, false], null], "and", [false, 2, [0, [0, 44, false], null], [0, 51, false], null], "and", [false, 2, [0, [0, 50, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 38, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"ai\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Looking", "for", "the", "phone", "numbers", "of", "students", "from", "Artificial", "Intelligence", "courses", "."], "ru": ["Нужны", "номера", "телефонов", "студентов", "с", "курсов", "по", "искусственному", "интеллекту", "."]}, "query_toks": {"en": ["select", "cell_mobile_number", "from", "students", "join", "student_enrolment", "on", "students.student_id", "=", "student_enrolment.student_id", "join", "student_enrolment_courses", "on", "student_enrolment.student_enrolment_id", "=", "student_enrolment_courses.student_enrolment_id", "join", "courses", "on", "student_enrolment_courses.course_id", "=", "courses.course_id", "where", "courses.course_name", "=", "\"ai\""], "ru": ["select", "cell_mobile_number", "from", "students", "join", "student_enrolment", "on", "students.student_id", "=", "student_enrolment.student_id", "join", "student_enrolment_courses", "on", "student_enrolment.student_enrolment_id", "=", "student_enrolment_courses.student_enrolment_id", "join", "courses", "on", "student_enrolment_courses.course_id", "=", "courses.course_id", "where", "courses.course_name", "=", "\"ai\""]}, "query_toks_no_values": {"en": ["select", "cell_mobile_number", "from", "students", "join", "student_enrolment", "on", "students.student_id", "=", "student_enrolment.student_id", "join", "student_enrolment_courses", "on", "student_enrolment.student_enrolment_id", "=", "student_enrolment_courses.student_enrolment_id", "join", "courses", "on", "student_enrolment_courses.course_id", "=", "courses.course_id", "where", "courses.course_name", "=", "value"], "ru": ["select", "cell_mobile_number", "from", "students", "join", "student_enrolment", "on", "students.student_id", "=", "student_enrolment.student_id", "join", "student_enrolment_courses", "on", "student_enrolment.student_enrolment_id", "=", "student_enrolment_courses.student_enrolment_id", "join", "courses", "on", "student_enrolment_courses.course_id", "=", "courses.course_id", "where", "courses.course_name", "=", "value"]}}, {"id": "F_0040", "db_id": "student_transcripts_tracking", "source": "addition", "type": "dev", "query": {"en": "SELECT DISTINCT(last_name) FROM Students JOIN Addresses as current ON Students.current_address_id = current.address_id JOIN Addresses as permanent ON Students.permanent_address_id = permanent.address_id WHERE current.city != permanent.city", "ru": "SELECT DISTINCT(last_name) FROM Students JOIN Addresses as current ON Students.current_address_id = current.address_id JOIN Addresses as permanent ON Students.permanent_address_id = permanent.address_id WHERE current.city != permanent.city"}, "question": {"en": "Surnames of students who have different permanent and current city of living.", "ru": "Фамилии студентов, у которых различаются города текущего проживания и регистрации."}, "sql": {"en": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 34, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 37, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], [0, 5, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 6], ["table_unit", 0], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 33, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 34, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 37, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], [0, 5, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Surnames", "of", "students", "who", "have", "different", "permanent", "and", "current", "city", "of", "living", "."], "ru": ["Фамилии", "студентов", ",", "у", "которых", "различаются", "города", "текущего", "проживания", "и", "регистрации", "."]}, "query_toks": {"en": ["select", "distinct", "(", "last_name", ")", "from", "students", "join", "addresses", "as", "current", "on", "students.current_address_id", "=", "current.address_id", "join", "addresses", "as", "permanent", "on", "students.permanent_address_id", "=", "permanent.address_id", "where", "current.city", "!=", "permanent.city"], "ru": ["select", "distinct", "(", "last_name", ")", "from", "students", "join", "addresses", "as", "current", "on", "students.current_address_id", "=", "current.address_id", "join", "addresses", "as", "permanent", "on", "students.permanent_address_id", "=", "permanent.address_id", "where", "current.city", "!=", "permanent.city"]}, "query_toks_no_values": {"en": ["select", "distinct", "(", "last_name", ")", "from", "students", "join", "addresses", "as", "current", "on", "students.current_address_id", "=", "current.address_id", "join", "addresses", "as", "permanent", "on", "students.permanent_address_id", "=", "permanent.address_id", "where", "current.city", "!=", "permanent.city"], "ru": ["select", "distinct", "(", "last_name", ")", "from", "students", "join", "addresses", "as", "current", "on", "students.current_address_id", "=", "current.address_id", "join", "addresses", "as", "permanent", "on", "students.permanent_address_id", "=", "permanent.address_id", "where", "current.city", "!=", "permanent.city"]}}, {"id": "F_0044", "db_id": "battle_death", "source": "addition", "type": "dev", "query": {"en": "SELECT COUNT(*), result FROM battle WHERE result = 'Bulgarian victory' OR result = 'Latin victory' GROUP BY result", "ru": "SELECT COUNT(*), result FROM battle WHERE result = 'Bulgarian victory' OR result = 'Latin victory' GROUP BY result"}, "question": {"en": "Compare amounts of Bulgarian and Latin victories.", "ru": "Сравни количество побед"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Bulgarian victory\"", null], "or", [false, 2, [0, [0, 6, false], null], "\"Latin victory\"", null]], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Bulgarian victory\"", null], "or", [false, 2, [0, [0, 6, false], null], "\"Latin victory\"", null]], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Compare", "amounts", "of", "Bulgarian", "and", "Latin", "victories", "."], "ru": ["Сравни", "количество", "побед"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", ",", "result", "from", "battle", "where", "result", "=", "\"Bulgarian victory\"", "or", "result", "=", "\"Latin victory\"", "group", "by", "result"], "ru": ["select", "count", "(", "*", ")", ",", "result", "from", "battle", "where", "result", "=", "\"Bulgarian victory\"", "or", "result", "=", "\"Latin victory\"", "group", "by", "result"]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", ",", "result", "from", "battle", "where", "result", "=", "value", "or", "result", "=", "value", "group", "by", "result"], "ru": ["select", "count", "(", "*", ")", ",", "result", "from", "battle", "where", "result", "=", "value", "or", "result", "=", "value", "group", "by", "result"]}}, {"id": "F_0045", "db_id": "battle_death", "source": "addition", "type": "dev", "query": {"en": "SELECT COUNT(*) FROM battle WHERE result = 'Two Year Truce'", "ru": "SELECT COUNT(*) FROM battle WHERE result = 'Two Year Truce' OR result = 'Перемирие'"}, "question": {"en": "How many battles ended in a truce?", "ru": "Сколько боев окончились перемирием?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Two Year Truce\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Two Year Truce\"", null], "or", [false, 2, [0, [0, 6, false], null], "\"Перемирие\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "battles", "ended", "in", "a", "truce", "?"], "ru": ["Сколько", "боев", "окончились", "перемирием", "?"]}, "query_toks": {"en": ["select", "count", "(", "*", ")", "from", "battle", "where", "result", "=", "\"Two Year Truce\""], "ru": ["select", "count", "(", "*", ")", "from", "battle", "where", "result", "=", "\"Two Year Truce\"", "or", "result", "=", "\"Перемирие\""]}, "query_toks_no_values": {"en": ["select", "count", "(", "*", ")", "from", "battle", "where", "result", "=", "value"], "ru": ["select", "count", "(", "*", ")", "from", "battle", "where", "result", "=", "value", "or", "result", "=", "value"]}}, {"id": "F_0046", "db_id": "battle_death", "source": "addition", "type": "dev", "query": {"en": "SELECT latin_commander, bulgarian_commander FROM battle", "ru": "SELECT latin_commander, bulgarian_commander FROM battle"}, "question": {"en": "Who among the Latin and Bulgarian commanders crossed paths with in battles?", "ru": "Кто с кем из латинских и болгарских командиров пересекался в боях?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Who", "among", "the", "Latin", "and", "Bulgarian", "commanders", "crossed", "paths", "with", "in", "battles", "?"], "ru": ["Кто", "с", "кем", "из", "латинских", "и", "болгарских", "командиров", "пересекался", "в", "боях", "?"]}, "query_toks": {"en": ["select", "latin_commander", ",", "bulgarian_commander", "from", "battle"], "ru": ["select", "latin_commander", ",", "bulgarian_commander", "from", "battle"]}, "query_toks_no_values": {"en": ["select", "latin_commander", ",", "bulgarian_commander", "from", "battle"], "ru": ["select", "latin_commander", ",", "bulgarian_commander", "from", "battle"]}}, {"id": "F_0047", "db_id": "battle_death", "source": "addition", "type": "dev", "query": {"en": "SELECT DISTINCT ship_type, disposition_of_ship FROM ship WHERE location = 'English Channel'", "ru": "SELECT DISTINCT ship_type, disposition_of_ship FROM ship WHERE location = 'English Channel' OR location = 'Ла-Манш'"}, "question": {"en": "List different ships types and dispositions used in English Channel", "ru": "Перечислить все конфигурации типы и диспозиций судов, задействованных в битвах на Ла-Манше"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"English Channel\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 11, false], null]], [0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"English Channel\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"Ла-Манш\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "different", "ships", "types", "and", "dispositions", "used", "in", "English", "Channel"], "ru": ["Перечислить", "все", "конфигурации", "типы", "и", "диспозиций", "судов", ",", "задействованных", "в", "битвах", "на", "Ла-Манше"]}, "query_toks": {"en": ["select", "distinct", "ship_type", ",", "disposition_of_ship", "from", "ship", "where", "location", "=", "\"English Channel\""], "ru": ["select", "distinct", "ship_type", ",", "disposition_of_ship", "from", "ship", "where", "location", "=", "\"English Channel\"", "or", "location", "=", "\"Ла-Манш\""]}, "query_toks_no_values": {"en": ["select", "distinct", "ship_type", ",", "disposition_of_ship", "from", "ship", "where", "location", "=", "value"], "ru": ["select", "distinct", "ship_type", ",", "disposition_of_ship", "from", "ship", "where", "location", "=", "value", "or", "location", "=", "value"]}}, {"id": "F_0048", "db_id": "battle_death", "source": "addition", "type": "dev", "query": {"en": "SELECT location, SUM(lost_in_battle) FROM ship GROUP BY location", "ru": "SELECT location, SUM(lost_in_battle) FROM ship GROUP BY location"}, "question": {"en": "List of all locations and the number of ships lost there", "ru": "Список всех локаций и количество потопленных там судов"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [4, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [4, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["List", "of", "all", "locations", "and", "the", "number", "of", "ships", "lost", "there"], "ru": ["Список", "всех", "локаций", "и", "количество", "потопленных", "там", "судов"]}, "query_toks": {"en": ["select", "location", ",", "sum", "(", "lost_in_battle", ")", "from", "ship", "group", "by", "location"], "ru": ["select", "location", ",", "sum", "(", "lost_in_battle", ")", "from", "ship", "group", "by", "location"]}, "query_toks_no_values": {"en": ["select", "location", ",", "sum", "(", "lost_in_battle", ")", "from", "ship", "group", "by", "location"], "ru": ["select", "location", ",", "sum", "(", "lost_in_battle", ")", "from", "ship", "group", "by", "location"]}}, {"id": "F_0049", "db_id": "battle_death", "source": "addition", "type": "dev", "query": {"en": "SELECT SUM(lost_in_battle) FROM ship", "ru": "SELECT SUM(lost_in_battle) FROM ship"}, "question": {"en": "How many ships were lost in total?", "ru": "Сколько всего было потоплено кораблей?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[4, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[4, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "ships", "were", "lost", "in", "total", "?"], "ru": ["Сколько", "всего", "было", "потоплено", "кораблей", "?"]}, "query_toks": {"en": ["select", "sum", "(", "lost_in_battle", ")", "from", "ship"], "ru": ["select", "sum", "(", "lost_in_battle", ")", "from", "ship"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "lost_in_battle", ")", "from", "ship"], "ru": ["select", "sum", "(", "lost_in_battle", ")", "from", "ship"]}}, {"id": "F_0050", "db_id": "battle_death", "source": "addition", "type": "dev", "query": {"en": "SELECT COUNT(DISTINCT name), bulgarian_commander FROM battle WHERE result = 'Bulgarian victory' GROUP BY latin_commander", "ru": "SELECT COUNT(DISTINCT name), bulgarian_commander FROM battle WHERE result = 'Bulgarian victory' GROUP BY latin_commander"}, "question": {"en": "How many battles did each of the Bulgarian commanders win?", "ru": "Как много сражений выиграл каждый из болгарских командиров?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 2, true], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Bulgarian victory\"", null]], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 2, true], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Bulgarian victory\"", null]], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["How", "many", "battles", "did", "each", "of", "the", "Bulgarian", "commanders", "win", "?"], "ru": ["Как", "много", "сражений", "выиграл", "каждый", "из", "болгарских", "командиров", "?"]}, "query_toks": {"en": ["select", "count", "(", "distinct", "name", ")", ",", "bulgarian_commander", "from", "battle", "where", "result", "=", "\"Bulgarian victory\"", "group", "by", "latin_commander"], "ru": ["select", "count", "(", "distinct", "name", ")", ",", "bulgarian_commander", "from", "battle", "where", "result", "=", "\"Bulgarian victory\"", "group", "by", "latin_commander"]}, "query_toks_no_values": {"en": ["select", "count", "(", "distinct", "name", ")", ",", "bulgarian_commander", "from", "battle", "where", "result", "=", "value", "group", "by", "latin_commander"], "ru": ["select", "count", "(", "distinct", "name", ")", ",", "bulgarian_commander", "from", "battle", "where", "result", "=", "value", "group", "by", "latin_commander"]}}, {"id": "F_0051", "db_id": "battle_death", "source": "addition", "type": "dev", "query": {"en": "SELECT SUM(death.killed), ship.ship_type FROM death JOIN ship ON death.id = ship.id GROUP BY ship.ship_type", "ru": "SELECT SUM(death.killed), ship.ship_type FROM death JOIN ship ON death.id = ship.id GROUP BY ship.ship_type"}, "question": {"en": "Split the number of killed ships by type", "ru": "Разбей количество потопленных кораблей по типам"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]]}, "select": [false, [[4, [0, [0, 17, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]]}, "select": [false, [[4, [0, [0, 17, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Split", "the", "number", "of", "killed", "ships", "by", "type"], "ru": ["Разбей", "количество", "потопленных", "кораблей", "по", "типам"]}, "query_toks": {"en": ["select", "sum", "(", "death.killed", ")", ",", "ship.ship_type", "from", "death", "join", "ship", "on", "death.id", "=", "ship.id", "group", "by", "ship.ship_type"], "ru": ["select", "sum", "(", "death.killed", ")", ",", "ship.ship_type", "from", "death", "join", "ship", "on", "death.id", "=", "ship.id", "group", "by", "ship.ship_type"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "death.killed", ")", ",", "ship.ship_type", "from", "death", "join", "ship", "on", "death.id", "=", "ship.id", "group", "by", "ship.ship_type"], "ru": ["select", "sum", "(", "death.killed", ")", ",", "ship.ship_type", "from", "death", "join", "ship", "on", "death.id", "=", "ship.id", "group", "by", "ship.ship_type"]}}, {"id": "F_0052", "db_id": "battle_death", "source": "addition", "type": "dev", "query": {"en": "SELECT SUM(death.killed), ship.disposition_of_ship FROM death JOIN ship ON death.id = ship.id GROUP BY ship.disposition_of_ship", "ru": "SELECT SUM(death.killed), ship.disposition_of_ship FROM death JOIN ship ON death.id = ship.id GROUP BY ship.disposition_of_ship"}, "question": {"en": "Detail the number of killed ships by their location.", "ru": "Детализируй количество потопленных кораблей по их расположению."}, "sql": {"en": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]]}, "select": [false, [[4, [0, [0, 17, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [[0, 13, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 8, false], null]]}, "select": [false, [[4, [0, [0, 17, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [[0, 13, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Detail", "the", "number", "of", "killed", "ships", "by", "their", "location", "."], "ru": ["Детализируй", "количество", "потопленных", "кораблей", "по", "их", "расположению", "."]}, "query_toks": {"en": ["select", "sum", "(", "death.killed", ")", ",", "ship.disposition_of_ship", "from", "death", "join", "ship", "on", "death.id", "=", "ship.id", "group", "by", "ship.disposition_of_ship"], "ru": ["select", "sum", "(", "death.killed", ")", ",", "ship.disposition_of_ship", "from", "death", "join", "ship", "on", "death.id", "=", "ship.id", "group", "by", "ship.disposition_of_ship"]}, "query_toks_no_values": {"en": ["select", "sum", "(", "death.killed", ")", ",", "ship.disposition_of_ship", "from", "death", "join", "ship", "on", "death.id", "=", "ship.id", "group", "by", "ship.disposition_of_ship"], "ru": ["select", "sum", "(", "death.killed", ")", ",", "ship.disposition_of_ship", "from", "death", "join", "ship", "on", "death.id", "=", "ship.id", "group", "by", "ship.disposition_of_ship"]}}, {"id": "L_0006", "db_id": "car_1", "source": "addition", "type": "dev", "query": {"en": "SELECT max(T1.cylinders) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  LIKE  '%chrysler%lebaron%medallion%'", "ru": "SELECT max(T1.cylinders) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  LIKE  '%chrysler%lebaron%medallion%'"}, "question": {"en": "Max number of cylinders for model by chrysler lebaron medallion", "ru": "Максимальное количество цилиндров у моделей от chrysler lebaron medallion"}, "sql": {"en": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[1, [0, [0, 18, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%chrysler%lebaron%medallion%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 5], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[1, [0, [0, 18, false], null]]]], "where": [[false, 9, [0, [0, 15, false], null], "\"%chrysler%lebaron%medallion%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Max", "number", "of", "cylinders", "for", "model", "by", "chrysler", "lebaron", "medallion"], "ru": ["Максимальное", "количество", "цилиндров", "у", "моделей", "от", "chrysler", "lebaron", "medallion"]}, "query_toks": {"en": ["select", "max", "(", "t1.cylinders", ")", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.make", "like", "\"%chrysler%lebaron%medallion%\""], "ru": ["select", "max", "(", "t1.cylinders", ")", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.make", "like", "\"%chrysler%lebaron%medallion%\""]}, "query_toks_no_values": {"en": ["select", "max", "(", "t1.cylinders", ")", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.make", "like", "value"], "ru": ["select", "max", "(", "t1.cylinders", ")", "from", "cars_data", "as", "t1", "join", "car_names", "as", "t2", "on", "t1.id", "=", "t2.makeid", "where", "t2.make", "like", "value"]}}, {"id": "L_0007", "db_id": "flight_2", "source": "addition", "type": "dev", "query": {"en": "SELECT Country FROM AIRPORTS WHERE AirportName  LIKE  \"%Ted%Stevens%\"", "ru": "SELECT Country FROM AIRPORTS WHERE AirportName  LIKE  \"%Ted%Stevens%\""}, "question": {"en": "Which country is the Ted Stevens airport at?", "ru": "В какой стране находится аэропорт Тед Стивенс?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 9, [0, [0, 7, false], null], "\"%Ted%Stevens%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 9, [0, [0, 7, false], null], "\"%Ted%Stevens%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Which", "country", "is", "the", "Ted", "Stevens", "airport", "at", "?"], "ru": ["В", "какой", "стране", "находится", "аэропорт", "Тед", "Стивенс", "?"]}, "query_toks": {"en": ["select", "country", "from", "airports", "where", "airportname", "like", "\"%Ted%Stevens%\""], "ru": ["select", "country", "from", "airports", "where", "airportname", "like", "\"%Ted%Stevens%\""]}, "query_toks_no_values": {"en": ["select", "country", "from", "airports", "where", "airportname", "like", "value"], "ru": ["select", "country", "from", "airports", "where", "airportname", "like", "value"]}}, {"id": "L_0008", "db_id": "cre_Doc_Template_Mgt", "source": "addition", "type": "dev", "query": {"en": "SELECT Document_ID FROM Documents WHERE Document_Name LIKE \"%Google%\" OR Document_Description LIKE \"%Coogle%\" ", "ru": "SELECT Document_ID FROM Documents WHERE Document_Name LIKE \"%Google%\" OR Document_Description LIKE \"%Coogle%\""}, "question": {"en": "ID of documents in which we can read something about Google working process", "ru": "ID документов, в которых можно есть что-то про работу в Google"}, "sql": {"en": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 9, [0, [0, 11, false], null], "\"%Google%\"", null], "or", [false, 9, [0, [0, 12, false], null], "\"%Coogle%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 9, [0, [0, 11, false], null], "\"%Google%\"", null], "or", [false, 9, [0, [0, 12, false], null], "\"%Coogle%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["ID", "of", "documents", "in", "which", "we", "can", "read", "something", "about", "Google", "working", "process"], "ru": ["ID", "документов", ",", "в", "которых", "можно", "есть", "что-то", "про", "работу", "в", "Google"]}, "query_toks": {"en": ["select", "document_id", "from", "documents", "where", "document_name", "like", "\"%Google%\"", "or", "document_description", "like", "\"%Coogle%\""], "ru": ["select", "document_id", "from", "documents", "where", "document_name", "like", "\"%Google%\"", "or", "document_description", "like", "\"%Coogle%\""]}, "query_toks_no_values": {"en": ["select", "document_id", "from", "documents", "where", "document_name", "like", "value", "or", "document_description", "like", "value"], "ru": ["select", "document_id", "from", "documents", "where", "document_name", "like", "value", "or", "document_description", "like", "value"]}}, {"id": "L_0009", "db_id": "museum_visit", "source": "addition", "type": "dev", "query": {"en": "SELECT Open_Year FROM museum WHERE Name LIKE \"%Central%Residential%Museum%\"", "ru": "SELECT Open_Year FROM museum WHERE Name LIKE \"%Central%Residential%Museum%\""}, "question": {"en": "What year did the Central Residential Museum museum open?", "ru": "В каком году был открыт Central Residental Museum?"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Central%Residential%Museum%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Central%Residential%Museum%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["What", "year", "did", "the", "Central", "Residential", "Museum", "museum", "open", "?"], "ru": ["В", "каком", "году", "был", "открыт", "Central", "Residental", "Museum", "?"]}, "query_toks": {"en": ["select", "open_year", "from", "museum", "where", "name", "like", "\"%Central%Residential%Museum%\""], "ru": ["select", "open_year", "from", "museum", "where", "name", "like", "\"%Central%Residential%Museum%\""]}, "query_toks_no_values": {"en": ["select", "open_year", "from", "museum", "where", "name", "like", "value"], "ru": ["select", "open_year", "from", "museum", "where", "name", "like", "value"]}}, {"id": "L_0010", "db_id": "student_transcripts_tracking", "source": "addition", "type": "dev", "query": {"en": "SELECT DISTINCT(zip_postcode) FROM Addresses WHERE line_1 LIKE \"%Lamar%Plaza%\"", "ru": "SELECT zip_postcode FROM Addresses WHERE line_1 LIKE \"%Lamar%Plaza%\""}, "question": {"en": "Zip codes of students living at Lamar Plaza", "ru": "Почтовые индексы студентов, живущих на Lamar Plaza"}, "sql": {"en": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Lamar%Plaza%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "ru": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%Lamar%Plaza%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "question_toks": {"en": ["Zip", "codes", "of", "students", "living", "at", "Lamar", "Plaza"], "ru": ["Почтовые", "индексы", "студентов", ",", "живущих", "на", "Lamar", "Plaza"]}, "query_toks": {"en": ["select", "distinct", "(", "zip_postcode", ")", "from", "addresses", "where", "line_1", "like", "\"%Lamar%Plaza%\""], "ru": ["select", "zip_postcode", "from", "addresses", "where", "line_1", "like", "\"%Lamar%Plaza%\""]}, "query_toks_no_values": {"en": ["select", "distinct", "(", "zip_postcode", ")", "from", "addresses", "where", "line_1", "like", "value"], "ru": ["select", "zip_postcode", "from", "addresses", "where", "line_1", "like", "value"]}}]